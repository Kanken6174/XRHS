<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classRotationPaintShader" kind="class" language="C++" prot="public">
    <compoundname>RotationPaintShader</compoundname>
    <basecompoundref refid="classShader" prot="public" virt="non-virtual">Shader</basecompoundref>
    <includes refid="RotationPaintShader_8hpp" local="no">RotationPaintShader.hpp</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classRotationPaintShader_1a73101b573c24a5f78b06bc91926701ae" prot="private" static="no" mutable="no">
        <type>const std::string</type>
        <definition>const std::string RotationPaintShader::transformation_var</definition>
        <argsstring></argsstring>
        <name>transformation_var</name>
        <initializer>= &quot;transformation&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/KronUIGL/Shaders/RotationPaintShader.hpp" line="10" column="23" bodyfile="src/KronUIGL/Shaders/RotationPaintShader.hpp" bodystart="10" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classRotationPaintShader_1ad5431147d487dadb26cdd00650bd24cd" prot="private" static="no" mutable="no">
        <type>const std::string</type>
        <definition>const std::string RotationPaintShader::paint_var</definition>
        <argsstring></argsstring>
        <name>paint_var</name>
        <initializer>= &quot;paint&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/KronUIGL/Shaders/RotationPaintShader.hpp" line="11" column="23" bodyfile="src/KronUIGL/Shaders/RotationPaintShader.hpp" bodystart="11" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classRotationPaintShader_1ab03a87e8b86c66ac16819cdc0cb98faa" prot="private" static="no" mutable="no">
        <type>glm::mat4</type>
        <definition>glm::mat4 RotationPaintShader::PlacementMatrix</definition>
        <argsstring></argsstring>
        <name>PlacementMatrix</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/KronUIGL/Shaders/RotationPaintShader.hpp" line="12" column="15" bodyfile="src/KronUIGL/Shaders/RotationPaintShader.hpp" bodystart="12" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classRotationPaintShader_1a4334c83e6fa533011b8466d7b7af2567" prot="private" static="no" mutable="no">
        <type>glm::vec3</type>
        <definition>glm::vec3 RotationPaintShader::Color</definition>
        <argsstring></argsstring>
        <name>Color</name>
        <initializer>= glm::vec3(<ref refid="Paints_8hpp_1ae5f70677050eecd8909e0248e07b9e73" kindref="member">GRAY</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/KronUIGL/Shaders/RotationPaintShader.hpp" line="13" column="15" bodyfile="src/KronUIGL/Shaders/RotationPaintShader.hpp" bodystart="13" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classRotationPaintShader_1ab697304665b2b0cfbcf32070c930f385" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>RotationPaintShader::RotationPaintShader</definition>
        <argsstring>(std::string reflectiveName=&quot;&quot;)</argsstring>
        <name>RotationPaintShader</name>
        <param>
          <type>std::string</type>
          <declname>reflectiveName</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/KronUIGL/Shaders/RotationPaintShader.hpp" line="15" column="5" bodyfile="src/KronUIGL/Shaders/RotationPaintShader.cpp" bodystart="19" bodyend="24"/>
      </memberdef>
      <memberdef kind="function" id="classRotationPaintShader_1ae87bdf843d053cdb5f86d5b33142a09f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RotationPaintShader::SetPlacementMatrix</definition>
        <argsstring>(float scale, float angle, float x, float y, float z)</argsstring>
        <name>SetPlacementMatrix</name>
        <param>
          <type>float</type>
          <declname>scale</declname>
        </param>
        <param>
          <type>float</type>
          <declname>angle</declname>
        </param>
        <param>
          <type>float</type>
          <declname>x</declname>
        </param>
        <param>
          <type>float</type>
          <declname>y</declname>
        </param>
        <param>
          <type>float</type>
          <declname>z</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/KronUIGL/Shaders/RotationPaintShader.hpp" line="16" column="10" bodyfile="src/KronUIGL/Shaders/RotationPaintShader.cpp" bodystart="26" bodyend="29"/>
      </memberdef>
      <memberdef kind="function" id="classRotationPaintShader_1a00674a2c1eb135065ea45268e977be0f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RotationPaintShader::setPaint</definition>
        <argsstring>(float R, float G, float B)</argsstring>
        <name>setPaint</name>
        <param>
          <type>float</type>
          <declname>R</declname>
        </param>
        <param>
          <type>float</type>
          <declname>G</declname>
        </param>
        <param>
          <type>float</type>
          <declname>B</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/KronUIGL/Shaders/RotationPaintShader.hpp" line="17" column="10" bodyfile="src/KronUIGL/Shaders/RotationPaintShader.cpp" bodystart="31" bodyend="34"/>
      </memberdef>
      <memberdef kind="function" id="classRotationPaintShader_1a6187e928d70ff073ba3b94b711cff5db" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void RotationPaintShader::UseShader</definition>
        <argsstring>()</argsstring>
        <name>UseShader</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/KronUIGL/Shaders/RotationPaintShader.hpp" line="18" column="10" bodyfile="src/KronUIGL/Shaders/RotationPaintShader.hpp" bodystart="18" bodyend="18"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>Shader</label>
        <link refid="classShader"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>RotationPaintShader</label>
        <link refid="classRotationPaintShader"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>ReflectiveItem</label>
        <link refid="classReflectiveItem"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>Shader</label>
        <link refid="classShader"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>RotationPaintShader</label>
        <link refid="classRotationPaintShader"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>ReflectiveItem</label>
        <link refid="classReflectiveItem"/>
      </node>
    </collaborationgraph>
    <location file="src/KronUIGL/Shaders/RotationPaintShader.hpp" line="8" column="1" bodyfile="src/KronUIGL/Shaders/RotationPaintShader.hpp" bodystart="8" bodyend="19"/>
    <listofallmembers>
      <member refid="classRotationPaintShader_1a4334c83e6fa533011b8466d7b7af2567" prot="private" virt="non-virtual"><scope>RotationPaintShader</scope><name>Color</name></member>
      <member refid="classReflectiveItem_1ac9c9a3038c9c4e57568418c4f43931f7" prot="public" virt="non-virtual"><scope>RotationPaintShader</scope><name>getAddress</name></member>
      <member refid="classReflectiveItem_1a1ed203f9b24870e37f02adb3c57c8f5c" prot="public" virt="non-virtual"><scope>RotationPaintShader</scope><name>getName</name></member>
      <member refid="classShader_1a142a08b6fbdfc982d82ca10ee0b0f38d" prot="public" virt="non-virtual"><scope>RotationPaintShader</scope><name>ID</name></member>
      <member refid="classRotationPaintShader_1ad5431147d487dadb26cdd00650bd24cd" prot="private" virt="non-virtual"><scope>RotationPaintShader</scope><name>paint_var</name></member>
      <member refid="classRotationPaintShader_1ab03a87e8b86c66ac16819cdc0cb98faa" prot="private" virt="non-virtual"><scope>RotationPaintShader</scope><name>PlacementMatrix</name></member>
      <member refid="classReflectiveItem_1adabfa391ef38161de2e243bd387b8e6a" prot="public" virt="non-virtual"><scope>RotationPaintShader</scope><name>ReflectiveItem</name></member>
      <member refid="classRotationPaintShader_1ab697304665b2b0cfbcf32070c930f385" prot="public" virt="non-virtual"><scope>RotationPaintShader</scope><name>RotationPaintShader</name></member>
      <member refid="classShader_1ab1a56d6c299bd7eaa18c2e142ef7bd9f" prot="public" virt="non-virtual"><scope>RotationPaintShader</scope><name>setBool</name></member>
      <member refid="classShader_1afe7367621f74c2d26431d8ac15252bf3" prot="public" virt="non-virtual"><scope>RotationPaintShader</scope><name>setFloat</name></member>
      <member refid="classShader_1ad362e2b654cd95a3574cd505411e41fd" prot="public" virt="non-virtual"><scope>RotationPaintShader</scope><name>setInt</name></member>
      <member refid="classShader_1a91a6ee79b959cacd618c9e29a5bbd732" prot="public" virt="non-virtual"><scope>RotationPaintShader</scope><name>setMat2</name></member>
      <member refid="classShader_1a3e24fcad187493dfebaa12939072e91d" prot="public" virt="non-virtual"><scope>RotationPaintShader</scope><name>setMat3</name></member>
      <member refid="classShader_1a8e711c96f3e1722cbfb88fde9478977c" prot="public" virt="non-virtual"><scope>RotationPaintShader</scope><name>setMat4</name></member>
      <member refid="classRotationPaintShader_1a00674a2c1eb135065ea45268e977be0f" prot="public" virt="non-virtual"><scope>RotationPaintShader</scope><name>setPaint</name></member>
      <member refid="classRotationPaintShader_1ae87bdf843d053cdb5f86d5b33142a09f" prot="public" virt="non-virtual"><scope>RotationPaintShader</scope><name>SetPlacementMatrix</name></member>
      <member refid="classShader_1afd4d41322a1cdd1d5155bf124d19debf" prot="public" virt="non-virtual"><scope>RotationPaintShader</scope><name>setVec2</name></member>
      <member refid="classShader_1afb91bc9e954bf590857c96ab1331b0ec" prot="public" virt="non-virtual"><scope>RotationPaintShader</scope><name>setVec2</name></member>
      <member refid="classShader_1aeb021061c5d451329d92257b07dbfec3" prot="public" virt="non-virtual"><scope>RotationPaintShader</scope><name>setVec3</name></member>
      <member refid="classShader_1a90092c25b7dc23964c465b93887300f9" prot="public" virt="non-virtual"><scope>RotationPaintShader</scope><name>setVec3</name></member>
      <member refid="classShader_1a79cbe674f6bf1a576a48045dcb924de5" prot="public" virt="non-virtual"><scope>RotationPaintShader</scope><name>setVec4</name></member>
      <member refid="classShader_1a913e10fe2501b00746ae6901b97a1730" prot="public" virt="non-virtual"><scope>RotationPaintShader</scope><name>setVec4</name></member>
      <member refid="classShader_1a9f478f324f99862de127125a24443725" prot="public" virt="non-virtual"><scope>RotationPaintShader</scope><name>Shader</name></member>
      <member refid="classShader_1a59f5ac19fb359a2fff451c42783d2d5d" prot="public" virt="non-virtual"><scope>RotationPaintShader</scope><name>Shader</name></member>
      <member refid="classRotationPaintShader_1a73101b573c24a5f78b06bc91926701ae" prot="private" virt="non-virtual"><scope>RotationPaintShader</scope><name>transformation_var</name></member>
      <member refid="classShader_1a870fa9f13d69e558815d6fd351a469dc" prot="public" virt="non-virtual"><scope>RotationPaintShader</scope><name>use</name></member>
      <member refid="classRotationPaintShader_1a6187e928d70ff073ba3b94b711cff5db" prot="public" virt="non-virtual"><scope>RotationPaintShader</scope><name>UseShader</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
