<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classInputSystem" kind="class" language="C++" prot="public">
    <compoundname>InputSystem</compoundname>
    <includes refid="Input_8hpp" local="no">Input.hpp</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classInputSystem_1a3341b588be454de0622cd669dc5e4ab0" prot="private" static="no" mutable="no">
        <type><ref refid="classCamera" kindref="compound">Camera</ref></type>
        <definition>Camera InputSystem::camera</definition>
        <argsstring></argsstring>
        <name>camera</name>
        <initializer>= <ref refid="classCamera" kindref="compound">Camera</ref>(800, 600, 0.1f, 100.0f)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/KronUIGL/Input/Input.hpp" line="14" column="16" bodyfile="src/KronUIGL/Input/Input.hpp" bodystart="14" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-attrib">
      <memberdef kind="variable" id="classInputSystem_1af91355b1bb129950cf975c277669e907" prot="private" static="yes" mutable="no">
        <type><ref refid="classInputSystem" kindref="compound">InputSystem</ref></type>
        <definition>InputSystem InputSystem::instance</definition>
        <argsstring></argsstring>
        <name>instance</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/KronUIGL/Input/Input.hpp" line="15" column="28" bodyfile="src/KronUIGL/Input/Input.hpp" bodystart="15" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="classInputSystem_1ae0ab3951fece5c8749a36c6cdcf6bf00" prot="public" static="no" mutable="no">
        <type>const std::map&lt; int, std::function&lt; void()&gt; &gt;</type>
        <definition>const std::map&lt;int, std::function&lt;void()&gt; &gt; InputSystem::keyActions</definition>
        <argsstring></argsstring>
        <name>keyActions</name>
        <initializer>= {
        {GLFW_KEY_W, [this](){
            glm::vec3 moveDirection = this-&gt;camera.getForward();
            moveDirection.y = 0; 
            this-&gt;camera.transform.Position += glm::normalize(moveDirection) * 0.15f;
        }},
        {GLFW_KEY_S, [this](){
            glm::vec3 moveDirection = this-&gt;camera.getForward();
            moveDirection.y = 0; 
            this-&gt;camera.transform.Position -= glm::normalize(moveDirection) * 0.15f;
        }},
        {GLFW_KEY_A, [this](){
            glm::vec3 moveDirection = glm::normalize(glm::cross(this-&gt;camera.getForward(), glm::vec3(0.0f, 1.0f, 0.0f)));
            moveDirection.y = 0; 
            this-&gt;camera.transform.Position -= moveDirection * 0.1f;
        }},
        {GLFW_KEY_D, [this](){
            glm::vec3 moveDirection = glm::normalize(glm::cross(this-&gt;camera.getForward(), glm::vec3(0.0f, 1.0f, 0.0f)));
            moveDirection.y = 0; 
            this-&gt;camera.transform.Position += moveDirection * 0.1f;
        }},
        {GLFW_KEY_UP, [this](){ this-&gt;camera.rotate(glm::vec3(-0.5f, 0.0f, 0.0f)); }},
        {GLFW_KEY_DOWN, [this](){ this-&gt;camera.rotate(glm::vec3(0.5f, 0.0f, 0.0f)); }},
        {GLFW_KEY_LEFT, [this](){ this-&gt;camera.rotate(glm::vec3(0.0f, -0.5f, 0.0f)); }},
        {GLFW_KEY_RIGHT, [this](){ this-&gt;camera.rotate(glm::vec3(0.0f, 0.5f, 0.0f)); }},
        {GLFW_KEY_SPACE, [this](){ this-&gt;camera.transform.Position += this-&gt;camera.getUp() * 0.1f; }},
        {GLFW_KEY_LEFT_CONTROL, [this](){ this-&gt;camera.transform.Position -= this-&gt;camera.getUp() * 0.1f; }},
        {GLFW_KEY_E, [this](){ this-&gt;camera.rotate(glm::vec3(0.0f, 0.0f, -0.5f)); }},
        {GLFW_KEY_Q, [this](){ this-&gt;camera.rotate(glm::vec3(0.0f, 0.0f, 0.5f)); }}
        }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/KronUIGL/Input/Input.hpp" line="17" column="24" bodyfile="src/KronUIGL/Input/Input.hpp" bodystart="17" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classInputSystem_1a4e54cb10f3c668e30382023454fd4790" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classCamera" kindref="compound">Camera</ref> &amp;</type>
        <definition>Camera&amp; InputSystem::getCamera</definition>
        <argsstring>()</argsstring>
        <name>getCamera</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/KronUIGL/Input/Input.hpp" line="49" column="16" bodyfile="src/KronUIGL/Input/Input.hpp" bodystart="49" bodyend="49"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classInputSystem_1a7259383b613f661128029641f251b629" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classInputSystem" kindref="compound">InputSystem</ref> &amp;</type>
        <definition>static InputSystem&amp; InputSystem::getInstance</definition>
        <argsstring>()</argsstring>
        <name>getInstance</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/KronUIGL/Input/Input.hpp" line="50" column="35" bodyfile="src/KronUIGL/Input/Input.hpp" bodystart="50" bodyend="50"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="src/KronUIGL/Input/Input.hpp" line="12" column="1" bodyfile="src/KronUIGL/Input/Input.hpp" bodystart="12" bodyend="51"/>
    <listofallmembers>
      <member refid="classInputSystem_1a3341b588be454de0622cd669dc5e4ab0" prot="private" virt="non-virtual"><scope>InputSystem</scope><name>camera</name></member>
      <member refid="classInputSystem_1a4e54cb10f3c668e30382023454fd4790" prot="public" virt="non-virtual"><scope>InputSystem</scope><name>getCamera</name></member>
      <member refid="classInputSystem_1a7259383b613f661128029641f251b629" prot="public" virt="non-virtual"><scope>InputSystem</scope><name>getInstance</name></member>
      <member refid="classInputSystem_1af91355b1bb129950cf975c277669e907" prot="private" virt="non-virtual"><scope>InputSystem</scope><name>instance</name></member>
      <member refid="classInputSystem_1ae0ab3951fece5c8749a36c6cdcf6bf00" prot="public" virt="non-virtual"><scope>InputSystem</scope><name>keyActions</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
