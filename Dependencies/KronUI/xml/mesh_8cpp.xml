<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="mesh_8cpp" kind="file" language="C++">
    <compoundname>mesh.cpp</compoundname>
    <includes refid="mesh_8hpp" local="yes">mesh.hpp</includes>
    <includes local="no">glm/gtc/matrix_transform.hpp</includes>
    <includes local="no">utility</includes>
    <includes local="no">GL/glew.h</includes>
    <includes local="no">iostream</includes>
    <includes refid="logger_8hpp" local="yes">../../../../include/logger.hpp</includes>
    <incdepgraph>
      <node id="9">
        <label>functional</label>
      </node>
      <node id="3">
        <label>vertex.hpp</label>
        <link refid="vertex_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>transform.hpp</label>
        <link refid="transform_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>GL/glew.h</label>
      </node>
      <node id="2">
        <label>mesh.hpp</label>
        <link refid="mesh_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>../../../../include/logger.hpp</label>
        <link refid="logger_8hpp"/>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>utility</label>
      </node>
      <node id="1">
        <label>src/KronUIGL/3D/Elements/mesh.cpp</label>
        <link refid="mesh_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>assimp/scene.h</label>
      </node>
      <node id="12">
        <label>iostream</label>
      </node>
      <node id="10">
        <label>glm/gtc/matrix_transform.hpp</label>
      </node>
      <node id="5">
        <label>texture.hpp</label>
        <link refid="texture_8hpp"/>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>memory</label>
      </node>
      <node id="4">
        <label>glm/glm.hpp</label>
      </node>
    </incdepgraph>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="mesh_8hpp" kindref="compound">mesh.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;glm/gtc/matrix_transform.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;utility&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;GL/glew.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../../../../include/logger.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"><ref refid="classMesh_1a387b547f54e19117a27ffef03b5d292c" kindref="member">Mesh::Mesh</ref>(std::vector&lt;Vertex&gt;<sp/>vertices,<sp/>std::vector&lt;unsigned<sp/>int&gt;<sp/>indices,<sp/>std::vector&lt;Texture&gt;<sp/>textures,<sp/><ref refid="structTransform" kindref="compound">Transform</ref><sp/>transform)</highlight></codeline>
<codeline lineno="9"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>vertices(std::move(vertices)),<sp/>indices(std::move(indices)),<sp/>textures(std::move(textures)),<sp/>transform(std::move(transform))</highlight></codeline>
<codeline lineno="10"><highlight class="normal">{</highlight></codeline>
<codeline lineno="11"><highlight class="normal">}</highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classMesh_1af9e71c7a3876710c2ee61a0e92fe3ce0" kindref="member">Mesh::setupMesh</ref>(GLuint<sp/>shaderProgram)<sp/>{</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/>glUseProgram(shaderProgram);</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/>glBindAttribLocation(shaderProgram,<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;Position&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/>glBindAttribLocation(shaderProgram,<sp/>1,<sp/></highlight><highlight class="stringliteral">&quot;TexCoords&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/>glBindAttribLocation(shaderProgram,<sp/>2,<sp/></highlight><highlight class="stringliteral">&quot;Normal&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/>glLinkProgram(shaderProgram);</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/>GLint<sp/>linkStatus;</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/>glGetProgramiv(shaderProgram,<sp/>GL_LINK_STATUS,<sp/>&amp;linkStatus);</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(linkStatus<sp/>!=<sp/>GL_TRUE)<sp/>{</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classLogger_1afbe890cea4f5034d431905a8578f9f22" kindref="member">Logger::getInstance</ref>().<ref refid="classLogger_1ab934865d3713793d0353271a475eaf4b" kindref="member">fatal</ref>(</highlight><highlight class="stringliteral">&quot;Could<sp/>not<sp/>link<sp/>shader<sp/>program&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/>glGenVertexArrays(1,<sp/>&amp;<ref refid="classMesh_1a79afa055e485fb65b1a7aa5b8eda2940" kindref="member">VAO</ref>);</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/>glGenBuffers(1,<sp/>&amp;<ref refid="classMesh_1af08e5f92b0cf587817841104c16fa803" kindref="member">VBO</ref>);</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/>glGenBuffers(1,<sp/>&amp;<ref refid="classMesh_1a25262f446aea3107da7c23f126a81faa" kindref="member">EBO</ref>);</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/>glBindVertexArray(<ref refid="classMesh_1a79afa055e485fb65b1a7aa5b8eda2940" kindref="member">VAO</ref>);</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/>glBindBuffer(GL_ARRAY_BUFFER,<sp/><ref refid="classMesh_1af08e5f92b0cf587817841104c16fa803" kindref="member">VBO</ref>);</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/>glBufferData(GL_ARRAY_BUFFER,<sp/><ref refid="classMesh_1a6465a888c97232a39e12aad008c969c3" kindref="member">vertices</ref>.size()<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structVertex" kindref="compound">Vertex</ref>),<sp/>&amp;<ref refid="classMesh_1a6465a888c97232a39e12aad008c969c3" kindref="member">vertices</ref>[0],<sp/>GL_STATIC_DRAW);</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/>glBindBuffer(GL_ELEMENT_ARRAY_BUFFER,<sp/><ref refid="classMesh_1a25262f446aea3107da7c23f126a81faa" kindref="member">EBO</ref>);</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/>glBufferData(GL_ELEMENT_ARRAY_BUFFER,<sp/><ref refid="classMesh_1a26632e27b772f24b069a738e7983b9da" kindref="member">indices</ref>.size()<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">),<sp/>&amp;<ref refid="classMesh_1a26632e27b772f24b069a738e7983b9da" kindref="member">indices</ref>[0],<sp/>GL_STATIC_DRAW);</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Vertex<sp/>Positions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/>GLint<sp/>positionIndex<sp/>=<sp/>0;</highlight><highlight class="comment">//glGetAttribLocation(shaderProgram,<sp/>&quot;Position&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(positionIndex<sp/>==<sp/>-1)<sp/>{</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classLogger_1afbe890cea4f5034d431905a8578f9f22" kindref="member">Logger::getInstance</ref>().<ref refid="classLogger_1ab934865d3713793d0353271a475eaf4b" kindref="member">fatal</ref>(</highlight><highlight class="stringliteral">&quot;Could<sp/>not<sp/>find<sp/>attribute<sp/>Position<sp/>in<sp/>shader<sp/>program&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/>glVertexAttribPointer(positionIndex,<sp/>3,<sp/>GL_FLOAT,<sp/>GL_FALSE,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structVertex" kindref="compound">Vertex</ref>),<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*)0);</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/>glEnableVertexAttribArray<sp/>(positionIndex);</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Vertex<sp/>Texture<sp/>Coords</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/>GLint<sp/>textureCoordsIndex<sp/>=<sp/>1;</highlight><highlight class="comment">//glGetAttribLocation(shaderProgram,<sp/>&quot;TexCoords&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(textureCoordsIndex<sp/>==<sp/>-1)<sp/>{</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classLogger_1afbe890cea4f5034d431905a8578f9f22" kindref="member">Logger::getInstance</ref>().<ref refid="classLogger_1ab934865d3713793d0353271a475eaf4b" kindref="member">fatal</ref>(</highlight><highlight class="stringliteral">&quot;Could<sp/>not<sp/>find<sp/>attribute<sp/>TexCoords<sp/>in<sp/>shader<sp/>program&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>glVertexAttribPointer(textureCoordsIndex,<sp/>2,<sp/>GL_FLOAT,<sp/>GL_FALSE,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structVertex" kindref="compound">Vertex</ref>),<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*)offsetof(<ref refid="structVertex" kindref="compound">Vertex</ref>,<sp/>TexCoords));</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>glEnableVertexAttribArray(textureCoordsIndex);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Vertex<sp/>Normals</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/>GLint<sp/>normalsIndex<sp/>=<sp/>2;</highlight><highlight class="comment">//glGetAttribLocation(shaderProgram,<sp/>&quot;Normal&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(normalsIndex<sp/>==<sp/>-1)<sp/>{</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classLogger_1afbe890cea4f5034d431905a8578f9f22" kindref="member">Logger::getInstance</ref>().<ref refid="classLogger_1ab934865d3713793d0353271a475eaf4b" kindref="member">fatal</ref>(</highlight><highlight class="stringliteral">&quot;Could<sp/>not<sp/>find<sp/>attribute<sp/>Normal<sp/>in<sp/>shader<sp/>program&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/>glVertexAttribPointer(normalsIndex,<sp/>3,<sp/>GL_FLOAT,<sp/>GL_FALSE,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structVertex" kindref="compound">Vertex</ref>),<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*)offsetof(<ref refid="structVertex" kindref="compound">Vertex</ref>,<sp/>Normal));</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>glEnableVertexAttribArray(normalsIndex);</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/>glBindVertexArray(0);</highlight></codeline>
<codeline lineno="65"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="src/KronUIGL/3D/Elements/mesh.cpp"/>
  </compounddef>
</doxygen>
