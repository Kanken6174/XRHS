<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="Input_8cpp" kind="file" language="C++">
    <compoundname>Input.cpp</compoundname>
    <includes refid="Input_8hpp" local="yes">./Input.hpp</includes>
    <incdepgraph>
      <node id="9">
        <label>functional</label>
      </node>
      <node id="20">
        <label>vertex.hpp</label>
        <link refid="vertex_8hpp"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>transform.hpp</label>
        <link refid="transform_8hpp"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>../3D/Vision/camera.hpp</label>
        <link refid="camera_8hpp"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>GL/glew.h</label>
      </node>
      <node id="8">
        <label>map</label>
      </node>
      <node id="4">
        <label>GLFW/glfw3.h</label>
      </node>
      <node id="12">
        <label>glm/gtc/quaternion.hpp</label>
      </node>
      <node id="19">
        <label>mesh.hpp</label>
        <link refid="mesh_8hpp"/>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>./Input.hpp</label>
        <link refid="Input_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>optional</label>
      </node>
      <node id="15">
        <label>vector</label>
      </node>
      <node id="18">
        <label>assimp/scene.h</label>
      </node>
      <node id="6">
        <label>iostream</label>
      </node>
      <node id="1">
        <label>src/KronUIGL/Input/Input.cpp</label>
        <link refid="Input_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>glm/gtc/matrix_transform.hpp</label>
      </node>
      <node id="14">
        <label>../Elements/entity.hpp</label>
        <link refid="entity_8hpp"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>glm/gtx/quaternion.hpp</label>
      </node>
      <node id="17">
        <label>texture.hpp</label>
        <link refid="texture_8hpp"/>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>glm/glm.hpp</label>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="Input_8cpp_1af4ca2891044ac10a664b8d83ce590f1f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void mouse_callback</definition>
        <argsstring>(GLFWwindow *window, double xpos, double ypos)</argsstring>
        <name>mouse_callback</name>
        <param>
          <type>GLFWwindow *</type>
          <declname>window</declname>
        </param>
        <param>
          <type>double</type>
          <declname>xpos</declname>
        </param>
        <param>
          <type>double</type>
          <declname>ypos</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/KronUIGL/Input/Input.cpp" line="5" column="6" bodyfile="src/KronUIGL/Input/Input.cpp" bodystart="5" bodyend="22"/>
      </memberdef>
      <memberdef kind="function" id="Input_8cpp_1ac9fe5113088cde8cc9efb199e5b839f3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void processInput</definition>
        <argsstring>(GLFWwindow *window, float deltaTime)</argsstring>
        <name>processInput</name>
        <param>
          <type>GLFWwindow *</type>
          <declname>window</declname>
        </param>
        <param>
          <type>float</type>
          <declname>deltaTime</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/KronUIGL/Input/Input.cpp" line="24" column="6" bodyfile="src/KronUIGL/Input/Input.cpp" bodystart="24" bodyend="31"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="Input_8hpp" kindref="compound">./Input.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"><ref refid="classInputSystem" kindref="compound">InputSystem</ref><sp/>InputSystem::instance;</highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="Input_8cpp_1af4ca2891044ac10a664b8d83ce590f1f" kindref="member">mouse_callback</ref>(GLFWwindow*<sp/>window,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>xpos,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>ypos)<sp/>{</highlight></codeline>
<codeline lineno="6"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::optional&lt;std::pair&lt;double,<sp/>double&gt;&gt;<sp/>lastPos;</highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!lastPos)<sp/>{</highlight></codeline>
<codeline lineno="9"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lastPos.emplace(xpos,<sp/>ypos);</highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>xoffset<sp/>=<sp/>xpos<sp/>-<sp/>lastPos-&gt;first;<sp/></highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>yoffset<sp/>=<sp/>ypos<sp/>-<sp/>lastPos-&gt;second;</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/>lastPos-&gt;first<sp/>=<sp/>xpos;</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/>lastPos-&gt;second<sp/>=<sp/>ypos;</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Update<sp/>camera<sp/>rotation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classInputSystem_1a7259383b613f661128029641f251b629" kindref="member">InputSystem::getInstance</ref>().<ref refid="classInputSystem_1a4e54cb10f3c668e30382023454fd4790" kindref="member">getCamera</ref>().<ref refid="classCamera_1a03ce20e3509f06e513fe1efb161fdc85" kindref="member">rotate</ref>(</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glm::vec3(yoffset,<sp/>xoffset,<sp/>0.0)<sp/>*<sp/>0.15f);</highlight></codeline>
<codeline lineno="22"><highlight class="normal">}</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="Input_8cpp_1ac9fe5113088cde8cc9efb199e5b839f3" kindref="member">processInput</ref>(GLFWwindow*<sp/>window,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>deltaTime)<sp/>{</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>[key,<sp/>action]<sp/>:<sp/><ref refid="classInputSystem_1a7259383b613f661128029641f251b629" kindref="member">InputSystem::getInstance</ref>().keyActions)<sp/>{</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(glfwGetKey(window,<sp/>key)<sp/>==<sp/>GLFW_PRESS)<sp/>{</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>action();</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classInputSystem_1a7259383b613f661128029641f251b629" kindref="member">InputSystem::getInstance</ref>().<ref refid="classInputSystem_1a4e54cb10f3c668e30382023454fd4790" kindref="member">getCamera</ref>().<ref refid="classCamera_1a8fe5c71a390571a861ad8afd99dfdea3" kindref="member">updateViewMatrix</ref>();</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="31"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="src/KronUIGL/Input/Input.cpp"/>
  </compounddef>
</doxygen>
