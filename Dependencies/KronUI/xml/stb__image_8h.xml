<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="stb__image_8h" kind="file" language="C++">
    <compoundname>stb_image.h</compoundname>
    <includes local="no">stdio.h</includes>
    <includes local="no">stdlib.h</includes>
    <includedby refid="OBJLoader_8cpp" local="yes">src/KronUIGL/3D/Loaders/OBJLoader.cpp</includedby>
    <incdepgraph>
      <node id="3">
        <label>stdlib.h</label>
      </node>
      <node id="1">
        <label>include/stb_image.h</label>
        <link refid="stb__image_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>stdio.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="2">
        <label>src/KronUIGL/3D/Loaders/OBJLoader.cpp</label>
        <link refid="OBJLoader_8cpp"/>
      </node>
      <node id="1">
        <label>include/stb_image.h</label>
        <link refid="stb__image_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="structstbi__io__callbacks" prot="public">stbi_io_callbacks</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="stb__image_8h_1aed6cd14a3bf678808c4c179e808866aa" prot="public" static="no">
        <name>STBI_VERSION</name>
        <initializer>1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/stb_image.h" line="372" column="9" bodyfile="include/stb_image.h" bodystart="372" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="stb__image_8h_1a2d9ec9850cd12aefe7641b456266a4c2" prot="public" static="no">
        <name>STBIDEF</name>
        <initializer>extern</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/stb_image.h" line="396" column="10" bodyfile="include/stb_image.h" bodystart="396" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="stb__image_8h_1a06fc87d81c62e9abb8790b6e5713c55b" prot="public" static="no" strong="no">
        <type></type>
        <name>@0</name>
        <enumvalue id="stb__image_8h_1a06fc87d81c62e9abb8790b6e5713c55ba0177ac2c5002f4f251bb766d41752029" prot="public">
          <name>STBI_default</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="stb__image_8h_1a06fc87d81c62e9abb8790b6e5713c55bad1eb95ca1fa7706bf732bf35a0ed40aa" prot="public">
          <name>STBI_grey</name>
          <initializer>= 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="stb__image_8h_1a06fc87d81c62e9abb8790b6e5713c55baf5829d16d4cca6077465c5abd346e2f8" prot="public">
          <name>STBI_grey_alpha</name>
          <initializer>= 2</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="stb__image_8h_1a06fc87d81c62e9abb8790b6e5713c55baa59123e5d0af25f9b1539f5cf1facddf" prot="public">
          <name>STBI_rgb</name>
          <initializer>= 3</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="stb__image_8h_1a06fc87d81c62e9abb8790b6e5713c55baa7b1af0c9f0310c3ada2aa29a32de293" prot="public">
          <name>STBI_rgb_alpha</name>
          <initializer>= 4</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/stb_image.h" line="374" column="1" bodyfile="include/stb_image.h" bodystart="375" bodyend="382"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d" prot="public" static="no">
        <type>unsigned char</type>
        <definition>typedef unsigned char stbi_uc</definition>
        <argsstring></argsstring>
        <name>stbi_uc</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/stb_image.h" line="385" column="23" bodyfile="include/stb_image.h" bodystart="385" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="stb__image_8h_1a648037d4c55689328ba08c8f5d293df2" prot="public" static="no">
        <type>unsigned short</type>
        <definition>typedef unsigned short stbi_us</definition>
        <argsstring></argsstring>
        <name>stbi_us</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/stb_image.h" line="386" column="24" bodyfile="include/stb_image.h" bodystart="386" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="stb__image_8h_1acae25d31bfae29d75482f07fecf2935f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="stb__image_8h_1a2d9ec9850cd12aefe7641b456266a4c2" kindref="member">STBIDEF</ref> <ref refid="stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d" kindref="member">stbi_uc</ref> *</type>
        <definition>STBIDEF stbi_uc* stbi_load_from_memory</definition>
        <argsstring>(stbi_uc const *buffer, int len, int *x, int *y, int *channels_in_file, int desired_channels)</argsstring>
        <name>stbi_load_from_memory</name>
        <param>
          <type><ref refid="stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d" kindref="member">stbi_uc</ref> const *</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>int</type>
          <declname>len</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>y</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>channels_in_file</declname>
        </param>
        <param>
          <type>int</type>
          <declname>desired_channels</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/stb_image.h" line="421" column="17" declfile="include/stb_image.h" declline="421" declcolumn="17"/>
      </memberdef>
      <memberdef kind="function" id="stb__image_8h_1a95ebc5c42c1a753200be8d465e933af7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="stb__image_8h_1a2d9ec9850cd12aefe7641b456266a4c2" kindref="member">STBIDEF</ref> <ref refid="stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d" kindref="member">stbi_uc</ref> *</type>
        <definition>STBIDEF stbi_uc* stbi_load_from_callbacks</definition>
        <argsstring>(stbi_io_callbacks const *clbk, void *user, int *x, int *y, int *channels_in_file, int desired_channels)</argsstring>
        <name>stbi_load_from_callbacks</name>
        <param>
          <type><ref refid="structstbi__io__callbacks" kindref="compound">stbi_io_callbacks</ref> const *</type>
          <declname>clbk</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>user</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>y</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>channels_in_file</declname>
        </param>
        <param>
          <type>int</type>
          <declname>desired_channels</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/stb_image.h" line="422" column="17" declfile="include/stb_image.h" declline="422" declcolumn="17"/>
      </memberdef>
      <memberdef kind="function" id="stb__image_8h_1aefdc7387857a14894bbf321e9ea4f048" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="stb__image_8h_1a2d9ec9850cd12aefe7641b456266a4c2" kindref="member">STBIDEF</ref> <ref refid="stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d" kindref="member">stbi_uc</ref> *</type>
        <definition>STBIDEF stbi_uc* stbi_load</definition>
        <argsstring>(char const *filename, int *x, int *y, int *channels_in_file, int desired_channels)</argsstring>
        <name>stbi_load</name>
        <param>
          <type>char const *</type>
          <declname>filename</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>y</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>channels_in_file</declname>
        </param>
        <param>
          <type>int</type>
          <declname>desired_channels</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/stb_image.h" line="425" column="17" declfile="include/stb_image.h" declline="425" declcolumn="17"/>
      </memberdef>
      <memberdef kind="function" id="stb__image_8h_1aa9994764695597161e8f3776e97caa99" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="stb__image_8h_1a2d9ec9850cd12aefe7641b456266a4c2" kindref="member">STBIDEF</ref> <ref refid="stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d" kindref="member">stbi_uc</ref> *</type>
        <definition>STBIDEF stbi_uc* stbi_load_from_file</definition>
        <argsstring>(FILE *f, int *x, int *y, int *channels_in_file, int desired_channels)</argsstring>
        <name>stbi_load_from_file</name>
        <param>
          <type>FILE *</type>
          <declname>f</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>y</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>channels_in_file</declname>
        </param>
        <param>
          <type>int</type>
          <declname>desired_channels</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/stb_image.h" line="426" column="17" declfile="include/stb_image.h" declline="426" declcolumn="17"/>
      </memberdef>
      <memberdef kind="function" id="stb__image_8h_1ab81ccbc3526368d651117ef48df82b01" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="stb__image_8h_1a2d9ec9850cd12aefe7641b456266a4c2" kindref="member">STBIDEF</ref> <ref refid="stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d" kindref="member">stbi_uc</ref> *</type>
        <definition>STBIDEF stbi_uc* stbi_load_gif_from_memory</definition>
        <argsstring>(stbi_uc const *buffer, int len, int **delays, int *x, int *y, int *z, int *comp, int req_comp)</argsstring>
        <name>stbi_load_gif_from_memory</name>
        <param>
          <type><ref refid="stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d" kindref="member">stbi_uc</ref> const *</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>int</type>
          <declname>len</declname>
        </param>
        <param>
          <type>int **</type>
          <declname>delays</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>y</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>z</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>comp</declname>
        </param>
        <param>
          <type>int</type>
          <declname>req_comp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/stb_image.h" line="431" column="17" declfile="include/stb_image.h" declline="431" declcolumn="17"/>
      </memberdef>
      <memberdef kind="function" id="stb__image_8h_1ad30fd870ed2138ce8f38c9dd29b2f76a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="stb__image_8h_1a2d9ec9850cd12aefe7641b456266a4c2" kindref="member">STBIDEF</ref> <ref refid="stb__image_8h_1a648037d4c55689328ba08c8f5d293df2" kindref="member">stbi_us</ref> *</type>
        <definition>STBIDEF stbi_us* stbi_load_16_from_memory</definition>
        <argsstring>(stbi_uc const *buffer, int len, int *x, int *y, int *channels_in_file, int desired_channels)</argsstring>
        <name>stbi_load_16_from_memory</name>
        <param>
          <type><ref refid="stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d" kindref="member">stbi_uc</ref> const *</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>int</type>
          <declname>len</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>y</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>channels_in_file</declname>
        </param>
        <param>
          <type>int</type>
          <declname>desired_channels</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/stb_image.h" line="443" column="17" declfile="include/stb_image.h" declline="443" declcolumn="17"/>
      </memberdef>
      <memberdef kind="function" id="stb__image_8h_1a82bcc0957b6a4ebfdfa3d7f04fbaed18" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="stb__image_8h_1a2d9ec9850cd12aefe7641b456266a4c2" kindref="member">STBIDEF</ref> <ref refid="stb__image_8h_1a648037d4c55689328ba08c8f5d293df2" kindref="member">stbi_us</ref> *</type>
        <definition>STBIDEF stbi_us* stbi_load_16_from_callbacks</definition>
        <argsstring>(stbi_io_callbacks const *clbk, void *user, int *x, int *y, int *channels_in_file, int desired_channels)</argsstring>
        <name>stbi_load_16_from_callbacks</name>
        <param>
          <type><ref refid="structstbi__io__callbacks" kindref="compound">stbi_io_callbacks</ref> const *</type>
          <declname>clbk</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>user</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>y</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>channels_in_file</declname>
        </param>
        <param>
          <type>int</type>
          <declname>desired_channels</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/stb_image.h" line="444" column="17" declfile="include/stb_image.h" declline="444" declcolumn="17"/>
      </memberdef>
      <memberdef kind="function" id="stb__image_8h_1a8a58b6bcd805afa1bdb14f988dd37fee" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="stb__image_8h_1a2d9ec9850cd12aefe7641b456266a4c2" kindref="member">STBIDEF</ref> <ref refid="stb__image_8h_1a648037d4c55689328ba08c8f5d293df2" kindref="member">stbi_us</ref> *</type>
        <definition>STBIDEF stbi_us* stbi_load_16</definition>
        <argsstring>(char const *filename, int *x, int *y, int *channels_in_file, int desired_channels)</argsstring>
        <name>stbi_load_16</name>
        <param>
          <type>char const *</type>
          <declname>filename</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>y</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>channels_in_file</declname>
        </param>
        <param>
          <type>int</type>
          <declname>desired_channels</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/stb_image.h" line="447" column="17" declfile="include/stb_image.h" declline="447" declcolumn="17"/>
      </memberdef>
      <memberdef kind="function" id="stb__image_8h_1a9ca2591f0987284129e82bf9dbcf7c6c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="stb__image_8h_1a2d9ec9850cd12aefe7641b456266a4c2" kindref="member">STBIDEF</ref> <ref refid="stb__image_8h_1a648037d4c55689328ba08c8f5d293df2" kindref="member">stbi_us</ref> *</type>
        <definition>STBIDEF stbi_us* stbi_load_from_file_16</definition>
        <argsstring>(FILE *f, int *x, int *y, int *channels_in_file, int desired_channels)</argsstring>
        <name>stbi_load_from_file_16</name>
        <param>
          <type>FILE *</type>
          <declname>f</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>y</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>channels_in_file</declname>
        </param>
        <param>
          <type>int</type>
          <declname>desired_channels</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/stb_image.h" line="448" column="17" declfile="include/stb_image.h" declline="448" declcolumn="17"/>
      </memberdef>
      <memberdef kind="function" id="stb__image_8h_1a5d47fb76ce1e34eb0729ad932c9c48e2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="stb__image_8h_1a2d9ec9850cd12aefe7641b456266a4c2" kindref="member">STBIDEF</ref> float *</type>
        <definition>STBIDEF float* stbi_loadf_from_memory</definition>
        <argsstring>(stbi_uc const *buffer, int len, int *x, int *y, int *channels_in_file, int desired_channels)</argsstring>
        <name>stbi_loadf_from_memory</name>
        <param>
          <type><ref refid="stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d" kindref="member">stbi_uc</ref> const *</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>int</type>
          <declname>len</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>y</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>channels_in_file</declname>
        </param>
        <param>
          <type>int</type>
          <declname>desired_channels</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/stb_image.h" line="456" column="18" declfile="include/stb_image.h" declline="456" declcolumn="18"/>
      </memberdef>
      <memberdef kind="function" id="stb__image_8h_1a6e7fd261af79ecef2208df3a6cc806bb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="stb__image_8h_1a2d9ec9850cd12aefe7641b456266a4c2" kindref="member">STBIDEF</ref> float *</type>
        <definition>STBIDEF float* stbi_loadf_from_callbacks</definition>
        <argsstring>(stbi_io_callbacks const *clbk, void *user, int *x, int *y, int *channels_in_file, int desired_channels)</argsstring>
        <name>stbi_loadf_from_callbacks</name>
        <param>
          <type><ref refid="structstbi__io__callbacks" kindref="compound">stbi_io_callbacks</ref> const *</type>
          <declname>clbk</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>user</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>y</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>channels_in_file</declname>
        </param>
        <param>
          <type>int</type>
          <declname>desired_channels</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/stb_image.h" line="457" column="18" declfile="include/stb_image.h" declline="457" declcolumn="18"/>
      </memberdef>
      <memberdef kind="function" id="stb__image_8h_1af4f17acd30945a75901fdc022f90575f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="stb__image_8h_1a2d9ec9850cd12aefe7641b456266a4c2" kindref="member">STBIDEF</ref> float *</type>
        <definition>STBIDEF float* stbi_loadf</definition>
        <argsstring>(char const *filename, int *x, int *y, int *channels_in_file, int desired_channels)</argsstring>
        <name>stbi_loadf</name>
        <param>
          <type>char const *</type>
          <declname>filename</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>y</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>channels_in_file</declname>
        </param>
        <param>
          <type>int</type>
          <declname>desired_channels</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/stb_image.h" line="460" column="18" declfile="include/stb_image.h" declline="460" declcolumn="18"/>
      </memberdef>
      <memberdef kind="function" id="stb__image_8h_1ace82446ecd7b5c760cde062179660f46" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="stb__image_8h_1a2d9ec9850cd12aefe7641b456266a4c2" kindref="member">STBIDEF</ref> float *</type>
        <definition>STBIDEF float* stbi_loadf_from_file</definition>
        <argsstring>(FILE *f, int *x, int *y, int *channels_in_file, int desired_channels)</argsstring>
        <name>stbi_loadf_from_file</name>
        <param>
          <type>FILE *</type>
          <declname>f</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>y</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>channels_in_file</declname>
        </param>
        <param>
          <type>int</type>
          <declname>desired_channels</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/stb_image.h" line="461" column="18" declfile="include/stb_image.h" declline="461" declcolumn="18"/>
      </memberdef>
      <memberdef kind="function" id="stb__image_8h_1ab18889e43518d6b4421b705782bb1b5e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="stb__image_8h_1a2d9ec9850cd12aefe7641b456266a4c2" kindref="member">STBIDEF</ref> void</type>
        <definition>STBIDEF void stbi_hdr_to_ldr_gamma</definition>
        <argsstring>(float gamma)</argsstring>
        <name>stbi_hdr_to_ldr_gamma</name>
        <param>
          <type>float</type>
          <declname>gamma</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/stb_image.h" line="466" column="19" declfile="include/stb_image.h" declline="466" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="stb__image_8h_1ae21cc1184eeb5cc814699f1ed62c5258" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="stb__image_8h_1a2d9ec9850cd12aefe7641b456266a4c2" kindref="member">STBIDEF</ref> void</type>
        <definition>STBIDEF void stbi_hdr_to_ldr_scale</definition>
        <argsstring>(float scale)</argsstring>
        <name>stbi_hdr_to_ldr_scale</name>
        <param>
          <type>float</type>
          <declname>scale</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/stb_image.h" line="467" column="19" declfile="include/stb_image.h" declline="467" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="stb__image_8h_1a1feccdcf726dcc6b5502e3efa85b7dbb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="stb__image_8h_1a2d9ec9850cd12aefe7641b456266a4c2" kindref="member">STBIDEF</ref> void</type>
        <definition>STBIDEF void stbi_ldr_to_hdr_gamma</definition>
        <argsstring>(float gamma)</argsstring>
        <name>stbi_ldr_to_hdr_gamma</name>
        <param>
          <type>float</type>
          <declname>gamma</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/stb_image.h" line="471" column="19" declfile="include/stb_image.h" declline="471" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="stb__image_8h_1af946583656a362a316b40c0421c20561" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="stb__image_8h_1a2d9ec9850cd12aefe7641b456266a4c2" kindref="member">STBIDEF</ref> void</type>
        <definition>STBIDEF void stbi_ldr_to_hdr_scale</definition>
        <argsstring>(float scale)</argsstring>
        <name>stbi_ldr_to_hdr_scale</name>
        <param>
          <type>float</type>
          <declname>scale</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/stb_image.h" line="472" column="19" declfile="include/stb_image.h" declline="472" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="stb__image_8h_1af0e94f316fe1848f632517ca3c11d077" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="stb__image_8h_1a2d9ec9850cd12aefe7641b456266a4c2" kindref="member">STBIDEF</ref> int</type>
        <definition>STBIDEF int stbi_is_hdr_from_callbacks</definition>
        <argsstring>(stbi_io_callbacks const *clbk, void *user)</argsstring>
        <name>stbi_is_hdr_from_callbacks</name>
        <param>
          <type><ref refid="structstbi__io__callbacks" kindref="compound">stbi_io_callbacks</ref> const *</type>
          <declname>clbk</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>user</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/stb_image.h" line="476" column="16" declfile="include/stb_image.h" declline="476" declcolumn="16"/>
      </memberdef>
      <memberdef kind="function" id="stb__image_8h_1a5cbc6f5cbb3b2d0d87ee959fcee9d23e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="stb__image_8h_1a2d9ec9850cd12aefe7641b456266a4c2" kindref="member">STBIDEF</ref> int</type>
        <definition>STBIDEF int stbi_is_hdr_from_memory</definition>
        <argsstring>(stbi_uc const *buffer, int len)</argsstring>
        <name>stbi_is_hdr_from_memory</name>
        <param>
          <type><ref refid="stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d" kindref="member">stbi_uc</ref> const *</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>int</type>
          <declname>len</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/stb_image.h" line="477" column="16" declfile="include/stb_image.h" declline="477" declcolumn="16"/>
      </memberdef>
      <memberdef kind="function" id="stb__image_8h_1ae70f9a302f7e87fd971075e7f758d55c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="stb__image_8h_1a2d9ec9850cd12aefe7641b456266a4c2" kindref="member">STBIDEF</ref> int</type>
        <definition>STBIDEF int stbi_is_hdr</definition>
        <argsstring>(char const *filename)</argsstring>
        <name>stbi_is_hdr</name>
        <param>
          <type>char const *</type>
          <declname>filename</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/stb_image.h" line="479" column="18" declfile="include/stb_image.h" declline="479" declcolumn="18"/>
      </memberdef>
      <memberdef kind="function" id="stb__image_8h_1aaf10d41631e1e9214fde1688bdbd8524" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="stb__image_8h_1a2d9ec9850cd12aefe7641b456266a4c2" kindref="member">STBIDEF</ref> int</type>
        <definition>STBIDEF int stbi_is_hdr_from_file</definition>
        <argsstring>(FILE *f)</argsstring>
        <name>stbi_is_hdr_from_file</name>
        <param>
          <type>FILE *</type>
          <declname>f</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/stb_image.h" line="480" column="18" declfile="include/stb_image.h" declline="480" declcolumn="18"/>
      </memberdef>
      <memberdef kind="function" id="stb__image_8h_1aa874b3ba909f3281d499894909678336" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="stb__image_8h_1a2d9ec9850cd12aefe7641b456266a4c2" kindref="member">STBIDEF</ref> const char *</type>
        <definition>STBIDEF const char* stbi_failure_reason</definition>
        <argsstring>(void)</argsstring>
        <name>stbi_failure_reason</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/stb_image.h" line="486" column="20" declfile="include/stb_image.h" declline="486" declcolumn="20"/>
      </memberdef>
      <memberdef kind="function" id="stb__image_8h_1ad3e11bb44412a7ba348acfbad09caacb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="stb__image_8h_1a2d9ec9850cd12aefe7641b456266a4c2" kindref="member">STBIDEF</ref> void</type>
        <definition>STBIDEF void stbi_image_free</definition>
        <argsstring>(void *retval_from_stbi_load)</argsstring>
        <name>stbi_image_free</name>
        <param>
          <type>void *</type>
          <declname>retval_from_stbi_load</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/stb_image.h" line="489" column="18" declfile="include/stb_image.h" declline="489" declcolumn="18"/>
      </memberdef>
      <memberdef kind="function" id="stb__image_8h_1acfef077febce3bc3f1f339de478f3315" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="stb__image_8h_1a2d9ec9850cd12aefe7641b456266a4c2" kindref="member">STBIDEF</ref> int</type>
        <definition>STBIDEF int stbi_info_from_memory</definition>
        <argsstring>(stbi_uc const *buffer, int len, int *x, int *y, int *comp)</argsstring>
        <name>stbi_info_from_memory</name>
        <param>
          <type><ref refid="stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d" kindref="member">stbi_uc</ref> const *</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>int</type>
          <declname>len</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>y</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>comp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/stb_image.h" line="492" column="18" declfile="include/stb_image.h" declline="492" declcolumn="18"/>
      </memberdef>
      <memberdef kind="function" id="stb__image_8h_1a86291c64cb663f41a34647d5e1abf363" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="stb__image_8h_1a2d9ec9850cd12aefe7641b456266a4c2" kindref="member">STBIDEF</ref> int</type>
        <definition>STBIDEF int stbi_info_from_callbacks</definition>
        <argsstring>(stbi_io_callbacks const *clbk, void *user, int *x, int *y, int *comp)</argsstring>
        <name>stbi_info_from_callbacks</name>
        <param>
          <type><ref refid="structstbi__io__callbacks" kindref="compound">stbi_io_callbacks</ref> const *</type>
          <declname>clbk</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>user</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>y</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>comp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/stb_image.h" line="493" column="18" declfile="include/stb_image.h" declline="493" declcolumn="18"/>
      </memberdef>
      <memberdef kind="function" id="stb__image_8h_1a548d486e07e0eb95671cb200d3a9530f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="stb__image_8h_1a2d9ec9850cd12aefe7641b456266a4c2" kindref="member">STBIDEF</ref> int</type>
        <definition>STBIDEF int stbi_is_16_bit_from_memory</definition>
        <argsstring>(stbi_uc const *buffer, int len)</argsstring>
        <name>stbi_is_16_bit_from_memory</name>
        <param>
          <type><ref refid="stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d" kindref="member">stbi_uc</ref> const *</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>int</type>
          <declname>len</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/stb_image.h" line="494" column="18" declfile="include/stb_image.h" declline="494" declcolumn="18"/>
      </memberdef>
      <memberdef kind="function" id="stb__image_8h_1a990e0e38ab6e600bd9cbf5d30abd2f8f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="stb__image_8h_1a2d9ec9850cd12aefe7641b456266a4c2" kindref="member">STBIDEF</ref> int</type>
        <definition>STBIDEF int stbi_is_16_bit_from_callbacks</definition>
        <argsstring>(stbi_io_callbacks const *clbk, void *user)</argsstring>
        <name>stbi_is_16_bit_from_callbacks</name>
        <param>
          <type><ref refid="structstbi__io__callbacks" kindref="compound">stbi_io_callbacks</ref> const *</type>
          <declname>clbk</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>user</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/stb_image.h" line="495" column="18" declfile="include/stb_image.h" declline="495" declcolumn="18"/>
      </memberdef>
      <memberdef kind="function" id="stb__image_8h_1aede708cca1304520b2afcf4d5eb61d70" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="stb__image_8h_1a2d9ec9850cd12aefe7641b456266a4c2" kindref="member">STBIDEF</ref> int</type>
        <definition>STBIDEF int stbi_info</definition>
        <argsstring>(char const *filename, int *x, int *y, int *comp)</argsstring>
        <name>stbi_info</name>
        <param>
          <type>char const *</type>
          <declname>filename</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>y</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>comp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/stb_image.h" line="498" column="18" declfile="include/stb_image.h" declline="498" declcolumn="18"/>
      </memberdef>
      <memberdef kind="function" id="stb__image_8h_1a28abedef4a0a93909332080df6be0021" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="stb__image_8h_1a2d9ec9850cd12aefe7641b456266a4c2" kindref="member">STBIDEF</ref> int</type>
        <definition>STBIDEF int stbi_info_from_file</definition>
        <argsstring>(FILE *f, int *x, int *y, int *comp)</argsstring>
        <name>stbi_info_from_file</name>
        <param>
          <type>FILE *</type>
          <declname>f</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>y</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>comp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/stb_image.h" line="499" column="18" declfile="include/stb_image.h" declline="499" declcolumn="18"/>
      </memberdef>
      <memberdef kind="function" id="stb__image_8h_1a7d9af55a35382c011cc186f7b62c00af" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="stb__image_8h_1a2d9ec9850cd12aefe7641b456266a4c2" kindref="member">STBIDEF</ref> int</type>
        <definition>STBIDEF int stbi_is_16_bit</definition>
        <argsstring>(char const *filename)</argsstring>
        <name>stbi_is_16_bit</name>
        <param>
          <type>char const *</type>
          <declname>filename</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/stb_image.h" line="500" column="18" declfile="include/stb_image.h" declline="500" declcolumn="18"/>
      </memberdef>
      <memberdef kind="function" id="stb__image_8h_1a42fa266b80bfde22a0781ba2112d1c62" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="stb__image_8h_1a2d9ec9850cd12aefe7641b456266a4c2" kindref="member">STBIDEF</ref> int</type>
        <definition>STBIDEF int stbi_is_16_bit_from_file</definition>
        <argsstring>(FILE *f)</argsstring>
        <name>stbi_is_16_bit_from_file</name>
        <param>
          <type>FILE *</type>
          <declname>f</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/stb_image.h" line="501" column="18" declfile="include/stb_image.h" declline="501" declcolumn="18"/>
      </memberdef>
      <memberdef kind="function" id="stb__image_8h_1a3f02e0053e1c8d08a3ed436e6a82c7c9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="stb__image_8h_1a2d9ec9850cd12aefe7641b456266a4c2" kindref="member">STBIDEF</ref> void</type>
        <definition>STBIDEF void stbi_set_unpremultiply_on_load</definition>
        <argsstring>(int flag_true_if_should_unpremultiply)</argsstring>
        <name>stbi_set_unpremultiply_on_load</name>
        <param>
          <type>int</type>
          <declname>flag_true_if_should_unpremultiply</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/stb_image.h" line="509" column="14" declfile="include/stb_image.h" declline="509" declcolumn="14"/>
      </memberdef>
      <memberdef kind="function" id="stb__image_8h_1a23525ef2b882f3de426b47ecf8d9151b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="stb__image_8h_1a2d9ec9850cd12aefe7641b456266a4c2" kindref="member">STBIDEF</ref> void</type>
        <definition>STBIDEF void stbi_convert_iphone_png_to_rgb</definition>
        <argsstring>(int flag_true_if_should_convert)</argsstring>
        <name>stbi_convert_iphone_png_to_rgb</name>
        <param>
          <type>int</type>
          <declname>flag_true_if_should_convert</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/stb_image.h" line="513" column="14" declfile="include/stb_image.h" declline="513" declcolumn="14"/>
      </memberdef>
      <memberdef kind="function" id="stb__image_8h_1ab89c177fc52f1bb2dc1c05e48129a0a4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="stb__image_8h_1a2d9ec9850cd12aefe7641b456266a4c2" kindref="member">STBIDEF</ref> void</type>
        <definition>STBIDEF void stbi_set_flip_vertically_on_load</definition>
        <argsstring>(int flag_true_if_should_flip)</argsstring>
        <name>stbi_set_flip_vertically_on_load</name>
        <param>
          <type>int</type>
          <declname>flag_true_if_should_flip</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/stb_image.h" line="516" column="14" declfile="include/stb_image.h" declline="516" declcolumn="14"/>
      </memberdef>
      <memberdef kind="function" id="stb__image_8h_1acf48dffaa1b2bb00f5a8d9af697c6aca" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="stb__image_8h_1a2d9ec9850cd12aefe7641b456266a4c2" kindref="member">STBIDEF</ref> void</type>
        <definition>STBIDEF void stbi_set_unpremultiply_on_load_thread</definition>
        <argsstring>(int flag_true_if_should_unpremultiply)</argsstring>
        <name>stbi_set_unpremultiply_on_load_thread</name>
        <param>
          <type>int</type>
          <declname>flag_true_if_should_unpremultiply</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/stb_image.h" line="521" column="14" declfile="include/stb_image.h" declline="521" declcolumn="14"/>
      </memberdef>
      <memberdef kind="function" id="stb__image_8h_1aff26696e30b62a40dd00bc12415343f6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="stb__image_8h_1a2d9ec9850cd12aefe7641b456266a4c2" kindref="member">STBIDEF</ref> void</type>
        <definition>STBIDEF void stbi_convert_iphone_png_to_rgb_thread</definition>
        <argsstring>(int flag_true_if_should_convert)</argsstring>
        <name>stbi_convert_iphone_png_to_rgb_thread</name>
        <param>
          <type>int</type>
          <declname>flag_true_if_should_convert</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/stb_image.h" line="522" column="14" declfile="include/stb_image.h" declline="522" declcolumn="14"/>
      </memberdef>
      <memberdef kind="function" id="stb__image_8h_1ad683202a3f6ec89729b5ad9220ae98ee" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="stb__image_8h_1a2d9ec9850cd12aefe7641b456266a4c2" kindref="member">STBIDEF</ref> void</type>
        <definition>STBIDEF void stbi_set_flip_vertically_on_load_thread</definition>
        <argsstring>(int flag_true_if_should_flip)</argsstring>
        <name>stbi_set_flip_vertically_on_load_thread</name>
        <param>
          <type>int</type>
          <declname>flag_true_if_should_flip</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/stb_image.h" line="523" column="14" declfile="include/stb_image.h" declline="523" declcolumn="14"/>
      </memberdef>
      <memberdef kind="function" id="stb__image_8h_1aaaa17a529bec51403cc23dc2e7c36d79" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="stb__image_8h_1a2d9ec9850cd12aefe7641b456266a4c2" kindref="member">STBIDEF</ref> char *</type>
        <definition>STBIDEF char* stbi_zlib_decode_malloc_guesssize</definition>
        <argsstring>(const char *buffer, int len, int initial_size, int *outlen)</argsstring>
        <name>stbi_zlib_decode_malloc_guesssize</name>
        <param>
          <type>const char *</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>int</type>
          <declname>len</declname>
        </param>
        <param>
          <type>int</type>
          <declname>initial_size</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>outlen</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/stb_image.h" line="527" column="14" declfile="include/stb_image.h" declline="527" declcolumn="14"/>
      </memberdef>
      <memberdef kind="function" id="stb__image_8h_1a038b0e741859a482b8b9d60167e54d27" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="stb__image_8h_1a2d9ec9850cd12aefe7641b456266a4c2" kindref="member">STBIDEF</ref> char *</type>
        <definition>STBIDEF char* stbi_zlib_decode_malloc_guesssize_headerflag</definition>
        <argsstring>(const char *buffer, int len, int initial_size, int *outlen, int parse_header)</argsstring>
        <name>stbi_zlib_decode_malloc_guesssize_headerflag</name>
        <param>
          <type>const char *</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>int</type>
          <declname>len</declname>
        </param>
        <param>
          <type>int</type>
          <declname>initial_size</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>outlen</declname>
        </param>
        <param>
          <type>int</type>
          <declname>parse_header</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/stb_image.h" line="528" column="14" declfile="include/stb_image.h" declline="528" declcolumn="14"/>
      </memberdef>
      <memberdef kind="function" id="stb__image_8h_1a4919b67b12e0e3acc5301f185ca77e2e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="stb__image_8h_1a2d9ec9850cd12aefe7641b456266a4c2" kindref="member">STBIDEF</ref> char *</type>
        <definition>STBIDEF char* stbi_zlib_decode_malloc</definition>
        <argsstring>(const char *buffer, int len, int *outlen)</argsstring>
        <name>stbi_zlib_decode_malloc</name>
        <param>
          <type>const char *</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>int</type>
          <declname>len</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>outlen</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/stb_image.h" line="529" column="14" declfile="include/stb_image.h" declline="529" declcolumn="14"/>
      </memberdef>
      <memberdef kind="function" id="stb__image_8h_1ae8447830c49bc17f8491e12c1f0ded48" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="stb__image_8h_1a2d9ec9850cd12aefe7641b456266a4c2" kindref="member">STBIDEF</ref> int</type>
        <definition>STBIDEF int stbi_zlib_decode_buffer</definition>
        <argsstring>(char *obuffer, int olen, const char *ibuffer, int ilen)</argsstring>
        <name>stbi_zlib_decode_buffer</name>
        <param>
          <type>char *</type>
          <declname>obuffer</declname>
        </param>
        <param>
          <type>int</type>
          <declname>olen</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>ibuffer</declname>
        </param>
        <param>
          <type>int</type>
          <declname>ilen</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/stb_image.h" line="530" column="15" declfile="include/stb_image.h" declline="530" declcolumn="15"/>
      </memberdef>
      <memberdef kind="function" id="stb__image_8h_1a7fbd65c83495f13f22469fe493775739" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="stb__image_8h_1a2d9ec9850cd12aefe7641b456266a4c2" kindref="member">STBIDEF</ref> char *</type>
        <definition>STBIDEF char* stbi_zlib_decode_noheader_malloc</definition>
        <argsstring>(const char *buffer, int len, int *outlen)</argsstring>
        <name>stbi_zlib_decode_noheader_malloc</name>
        <param>
          <type>const char *</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>int</type>
          <declname>len</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>outlen</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/stb_image.h" line="532" column="14" declfile="include/stb_image.h" declline="532" declcolumn="14"/>
      </memberdef>
      <memberdef kind="function" id="stb__image_8h_1a0d12efc011adfff7521f3b924feb0b0e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="stb__image_8h_1a2d9ec9850cd12aefe7641b456266a4c2" kindref="member">STBIDEF</ref> int</type>
        <definition>STBIDEF int stbi_zlib_decode_noheader_buffer</definition>
        <argsstring>(char *obuffer, int olen, const char *ibuffer, int ilen)</argsstring>
        <name>stbi_zlib_decode_noheader_buffer</name>
        <param>
          <type>char *</type>
          <declname>obuffer</declname>
        </param>
        <param>
          <type>int</type>
          <declname>olen</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>ibuffer</declname>
        </param>
        <param>
          <type>int</type>
          <declname>ilen</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/stb_image.h" line="533" column="15" declfile="include/stb_image.h" declline="533" declcolumn="15"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*<sp/>stb_image<sp/>-<sp/>v2.28<sp/>-<sp/>public<sp/>domain<sp/>image<sp/>loader<sp/>-<sp/>http://nothings.org/stb</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>no<sp/>warranty<sp/>implied;<sp/>use<sp/>at<sp/>your<sp/>own<sp/>risk</highlight></codeline>
<codeline lineno="3"><highlight class="comment"></highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/><sp/><sp/>Do<sp/>this:</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>#define<sp/>STB_IMAGE_IMPLEMENTATION</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/><sp/><sp/>before<sp/>you<sp/>include<sp/>this<sp/>file<sp/>in<sp/>*one*<sp/>C<sp/>or<sp/>C++<sp/>file<sp/>to<sp/>create<sp/>the<sp/>implementation.</highlight></codeline>
<codeline lineno="7"><highlight class="comment"></highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/><sp/><sp/>//<sp/>i.e.<sp/>it<sp/>should<sp/>look<sp/>like<sp/>this:</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/><sp/><sp/>#include<sp/>...</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/><sp/><sp/>#include<sp/>...</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/><sp/><sp/>#include<sp/>...</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/><sp/><sp/>#define<sp/>STB_IMAGE_IMPLEMENTATION</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/><sp/><sp/>#include<sp/>&quot;stb_image.h&quot;</highlight></codeline>
<codeline lineno="14"><highlight class="comment"></highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/><sp/><sp/>You<sp/>can<sp/>#define<sp/>STBI_ASSERT(x)<sp/>before<sp/>the<sp/>#include<sp/>to<sp/>avoid<sp/>using<sp/>assert.h.</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/><sp/><sp/>And<sp/>#define<sp/>STBI_MALLOC,<sp/>STBI_REALLOC,<sp/>and<sp/>STBI_FREE<sp/>to<sp/>avoid<sp/>using<sp/>malloc,realloc,free</highlight></codeline>
<codeline lineno="17"><highlight class="comment"></highlight></codeline>
<codeline lineno="18"><highlight class="comment"></highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/><sp/><sp/>QUICK<sp/>NOTES:</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>Primarily<sp/>of<sp/>interest<sp/>to<sp/>game<sp/>developers<sp/>and<sp/>other<sp/>people<sp/>who<sp/>can</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>avoid<sp/>problematic<sp/>images<sp/>and<sp/>only<sp/>need<sp/>the<sp/>trivial<sp/>interface</highlight></codeline>
<codeline lineno="22"><highlight class="comment"></highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>JPEG<sp/>baseline<sp/>&amp;<sp/>progressive<sp/>(12<sp/>bpc/arithmetic<sp/>not<sp/>supported,<sp/>same<sp/>as<sp/>stock<sp/>IJG<sp/>lib)</highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>PNG<sp/>1/2/4/8/16-bit-per-channel</highlight></codeline>
<codeline lineno="25"><highlight class="comment"></highlight></codeline>
<codeline lineno="26"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>TGA<sp/>(not<sp/>sure<sp/>what<sp/>subset,<sp/>if<sp/>a<sp/>subset)</highlight></codeline>
<codeline lineno="27"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>BMP<sp/>non-1bpp,<sp/>non-RLE</highlight></codeline>
<codeline lineno="28"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>PSD<sp/>(composited<sp/>view<sp/>only,<sp/>no<sp/>extra<sp/>channels,<sp/>8/16<sp/>bit-per-channel)</highlight></codeline>
<codeline lineno="29"><highlight class="comment"></highlight></codeline>
<codeline lineno="30"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>GIF<sp/>(*comp<sp/>always<sp/>reports<sp/>as<sp/>4-channel)</highlight></codeline>
<codeline lineno="31"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>HDR<sp/>(radiance<sp/>rgbE<sp/>format)</highlight></codeline>
<codeline lineno="32"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>PIC<sp/>(Softimage<sp/>PIC)</highlight></codeline>
<codeline lineno="33"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>PNM<sp/>(PPM<sp/>and<sp/>PGM<sp/>binary<sp/>only)</highlight></codeline>
<codeline lineno="34"><highlight class="comment"></highlight></codeline>
<codeline lineno="35"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>Animated<sp/>GIF<sp/>still<sp/>needs<sp/>a<sp/>proper<sp/>API,<sp/>but<sp/>here&apos;s<sp/>one<sp/>way<sp/>to<sp/>do<sp/>it:</highlight></codeline>
<codeline lineno="36"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>http://gist.github.com/urraka/685d9a6340b26b830d49</highlight></codeline>
<codeline lineno="37"><highlight class="comment"></highlight></codeline>
<codeline lineno="38"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/>decode<sp/>from<sp/>memory<sp/>or<sp/>through<sp/>FILE<sp/>(define<sp/>STBI_NO_STDIO<sp/>to<sp/>remove<sp/>code)</highlight></codeline>
<codeline lineno="39"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/>decode<sp/>from<sp/>arbitrary<sp/>I/O<sp/>callbacks</highlight></codeline>
<codeline lineno="40"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/>SIMD<sp/>acceleration<sp/>on<sp/>x86/x64<sp/>(SSE2)<sp/>and<sp/>ARM<sp/>(NEON)</highlight></codeline>
<codeline lineno="41"><highlight class="comment"></highlight></codeline>
<codeline lineno="42"><highlight class="comment"><sp/><sp/><sp/>Full<sp/>documentation<sp/>under<sp/>&quot;DOCUMENTATION&quot;<sp/>below.</highlight></codeline>
<codeline lineno="43"><highlight class="comment"></highlight></codeline>
<codeline lineno="44"><highlight class="comment"></highlight></codeline>
<codeline lineno="45"><highlight class="comment">LICENSE</highlight></codeline>
<codeline lineno="46"><highlight class="comment"></highlight></codeline>
<codeline lineno="47"><highlight class="comment"><sp/><sp/>See<sp/>end<sp/>of<sp/>file<sp/>for<sp/>license<sp/>information.</highlight></codeline>
<codeline lineno="48"><highlight class="comment"></highlight></codeline>
<codeline lineno="49"><highlight class="comment">RECENT<sp/>REVISION<sp/>HISTORY:</highlight></codeline>
<codeline lineno="50"><highlight class="comment"></highlight></codeline>
<codeline lineno="51"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>2.28<sp/><sp/>(2023-01-29)<sp/>many<sp/>error<sp/>fixes,<sp/>security<sp/>errors,<sp/>just<sp/>tons<sp/>of<sp/>stuff</highlight></codeline>
<codeline lineno="52"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>2.27<sp/><sp/>(2021-07-11)<sp/>document<sp/>stbi_info<sp/>better,<sp/>16-bit<sp/>PNM<sp/>support,<sp/>bug<sp/>fixes</highlight></codeline>
<codeline lineno="53"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>2.26<sp/><sp/>(2020-07-13)<sp/>many<sp/>minor<sp/>fixes</highlight></codeline>
<codeline lineno="54"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>2.25<sp/><sp/>(2020-02-02)<sp/>fix<sp/>warnings</highlight></codeline>
<codeline lineno="55"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>2.24<sp/><sp/>(2020-02-02)<sp/>fix<sp/>warnings;<sp/>thread-local<sp/>failure_reason<sp/>and<sp/>flip_vertically</highlight></codeline>
<codeline lineno="56"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>2.23<sp/><sp/>(2019-08-11)<sp/>fix<sp/>clang<sp/>static<sp/>analysis<sp/>warning</highlight></codeline>
<codeline lineno="57"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>2.22<sp/><sp/>(2019-03-04)<sp/>gif<sp/>fixes,<sp/>fix<sp/>warnings</highlight></codeline>
<codeline lineno="58"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>2.21<sp/><sp/>(2019-02-25)<sp/>fix<sp/>typo<sp/>in<sp/>comment</highlight></codeline>
<codeline lineno="59"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>2.20<sp/><sp/>(2019-02-07)<sp/>support<sp/>utf8<sp/>filenames<sp/>in<sp/>Windows;<sp/>fix<sp/>warnings<sp/>and<sp/>platform<sp/>ifdefs</highlight></codeline>
<codeline lineno="60"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>2.19<sp/><sp/>(2018-02-11)<sp/>fix<sp/>warning</highlight></codeline>
<codeline lineno="61"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>2.18<sp/><sp/>(2018-01-30)<sp/>fix<sp/>warnings</highlight></codeline>
<codeline lineno="62"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>2.17<sp/><sp/>(2018-01-29)<sp/>bugfix,<sp/>1-bit<sp/>BMP,<sp/>16-bitness<sp/>query,<sp/>fix<sp/>warnings</highlight></codeline>
<codeline lineno="63"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>2.16<sp/><sp/>(2017-07-23)<sp/>all<sp/>functions<sp/>have<sp/>16-bit<sp/>variants;<sp/>optimizations;<sp/>bugfixes</highlight></codeline>
<codeline lineno="64"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>2.15<sp/><sp/>(2017-03-18)<sp/>fix<sp/>png-1,2,4;<sp/>all<sp/>Imagenet<sp/>JPGs;<sp/>no<sp/>runtime<sp/>SSE<sp/>detection<sp/>on<sp/>GCC</highlight></codeline>
<codeline lineno="65"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>2.14<sp/><sp/>(2017-03-03)<sp/>remove<sp/>deprecated<sp/>STBI_JPEG_OLD;<sp/>fixes<sp/>for<sp/>Imagenet<sp/>JPGs</highlight></codeline>
<codeline lineno="66"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>2.13<sp/><sp/>(2016-12-04)<sp/>experimental<sp/>16-bit<sp/>API,<sp/>only<sp/>for<sp/>PNG<sp/>so<sp/>far;<sp/>fixes</highlight></codeline>
<codeline lineno="67"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>2.12<sp/><sp/>(2016-04-02)<sp/>fix<sp/>typo<sp/>in<sp/>2.11<sp/>PSD<sp/>fix<sp/>that<sp/>caused<sp/>crashes</highlight></codeline>
<codeline lineno="68"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>2.11<sp/><sp/>(2016-04-02)<sp/>16-bit<sp/>PNGS;<sp/>enable<sp/>SSE2<sp/>in<sp/>non-gcc<sp/>x64</highlight></codeline>
<codeline lineno="69"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RGB-format<sp/>JPEG;<sp/>remove<sp/>white<sp/>matting<sp/>in<sp/>PSD;</highlight></codeline>
<codeline lineno="70"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>allocate<sp/>large<sp/>structures<sp/>on<sp/>the<sp/>stack;</highlight></codeline>
<codeline lineno="71"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>correct<sp/>channel<sp/>count<sp/>for<sp/>PNG<sp/>&amp;<sp/>BMP</highlight></codeline>
<codeline lineno="72"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>2.10<sp/><sp/>(2016-01-22)<sp/>avoid<sp/>warning<sp/>introduced<sp/>in<sp/>2.09</highlight></codeline>
<codeline lineno="73"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>2.09<sp/><sp/>(2016-01-16)<sp/>16-bit<sp/>TGA;<sp/>comments<sp/>in<sp/>PNM<sp/>files;<sp/>STBI_REALLOC_SIZED</highlight></codeline>
<codeline lineno="74"><highlight class="comment"></highlight></codeline>
<codeline lineno="75"><highlight class="comment"><sp/><sp/><sp/>See<sp/>end<sp/>of<sp/>file<sp/>for<sp/>full<sp/>revision<sp/>history.</highlight></codeline>
<codeline lineno="76"><highlight class="comment"></highlight></codeline>
<codeline lineno="77"><highlight class="comment"></highlight></codeline>
<codeline lineno="78"><highlight class="comment"><sp/>============================<sp/><sp/><sp/><sp/>Contributors<sp/><sp/><sp/><sp/>=========================</highlight></codeline>
<codeline lineno="79"><highlight class="comment"></highlight></codeline>
<codeline lineno="80"><highlight class="comment"><sp/>Image<sp/>formats<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Extensions,<sp/>features</highlight></codeline>
<codeline lineno="81"><highlight class="comment"><sp/><sp/><sp/><sp/>Sean<sp/>Barrett<sp/>(jpeg,<sp/>png,<sp/>bmp)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Jetro<sp/>Lauha<sp/>(stbi_info)</highlight></codeline>
<codeline lineno="82"><highlight class="comment"><sp/><sp/><sp/><sp/>Nicolas<sp/>Schulz<sp/>(hdr,<sp/>psd)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Martin<sp/>&quot;SpartanJ&quot;<sp/>Golini<sp/>(stbi_info)</highlight></codeline>
<codeline lineno="83"><highlight class="comment"><sp/><sp/><sp/><sp/>Jonathan<sp/>Dummer<sp/>(tga)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>James<sp/>&quot;moose2000&quot;<sp/>Brown<sp/>(iPhone<sp/>PNG)</highlight></codeline>
<codeline lineno="84"><highlight class="comment"><sp/><sp/><sp/><sp/>Jean-Marc<sp/>Lienher<sp/>(gif)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Ben<sp/>&quot;Disch&quot;<sp/>Wenger<sp/>(io<sp/>callbacks)</highlight></codeline>
<codeline lineno="85"><highlight class="comment"><sp/><sp/><sp/><sp/>Tom<sp/>Seddon<sp/>(pic)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Omar<sp/>Cornut<sp/>(1/2/4-bit<sp/>PNG)</highlight></codeline>
<codeline lineno="86"><highlight class="comment"><sp/><sp/><sp/><sp/>Thatcher<sp/>Ulrich<sp/>(psd)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Nicolas<sp/>Guillemot<sp/>(vertical<sp/>flip)</highlight></codeline>
<codeline lineno="87"><highlight class="comment"><sp/><sp/><sp/><sp/>Ken<sp/>Miller<sp/>(pgm,<sp/>ppm)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Richard<sp/>Mitton<sp/>(16-bit<sp/>PSD)</highlight></codeline>
<codeline lineno="88"><highlight class="comment"><sp/><sp/><sp/><sp/>github:urraka<sp/>(animated<sp/>gif)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Junggon<sp/>Kim<sp/>(PNM<sp/>comments)</highlight></codeline>
<codeline lineno="89"><highlight class="comment"><sp/><sp/><sp/><sp/>Christopher<sp/>Forseth<sp/>(animated<sp/>gif)<sp/><sp/><sp/><sp/><sp/>Daniel<sp/>Gibson<sp/>(16-bit<sp/>TGA)</highlight></codeline>
<codeline lineno="90"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>socks-the-fox<sp/>(16-bit<sp/>PNG)</highlight></codeline>
<codeline lineno="91"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Jeremy<sp/>Sawicki<sp/>(handle<sp/>all<sp/>ImageNet<sp/>JPGs)</highlight></codeline>
<codeline lineno="92"><highlight class="comment"><sp/>Optimizations<sp/>&amp;<sp/>bugfixes<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Mikhail<sp/>Morozov<sp/>(1-bit<sp/>BMP)</highlight></codeline>
<codeline lineno="93"><highlight class="comment"><sp/><sp/><sp/><sp/>Fabian<sp/>&quot;ryg&quot;<sp/>Giesen<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Anael<sp/>Seghezzi<sp/>(is-16-bit<sp/>query)</highlight></codeline>
<codeline lineno="94"><highlight class="comment"><sp/><sp/><sp/><sp/>Arseny<sp/>Kapoulkine<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Simon<sp/>Breuss<sp/>(16-bit<sp/>PNM)</highlight></codeline>
<codeline lineno="95"><highlight class="comment"><sp/><sp/><sp/><sp/>John-Mark<sp/>Allen</highlight></codeline>
<codeline lineno="96"><highlight class="comment"><sp/><sp/><sp/><sp/>Carmelo<sp/>J<sp/>Fdez-Aguera</highlight></codeline>
<codeline lineno="97"><highlight class="comment"></highlight></codeline>
<codeline lineno="98"><highlight class="comment"><sp/>Bug<sp/>&amp;<sp/>warning<sp/>fixes</highlight></codeline>
<codeline lineno="99"><highlight class="comment"><sp/><sp/><sp/><sp/>Marc<sp/>LeBlanc<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>David<sp/>Woo<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Guillaume<sp/>George<sp/><sp/><sp/><sp/><sp/>Martins<sp/>Mozeiko</highlight></codeline>
<codeline lineno="100"><highlight class="comment"><sp/><sp/><sp/><sp/>Christpher<sp/>Lloyd<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Jerry<sp/>Jansson<sp/><sp/><sp/><sp/><sp/><sp/>Joseph<sp/>Thomson<sp/><sp/><sp/><sp/><sp/><sp/><sp/>Blazej<sp/>Dariusz<sp/>Roszkowski</highlight></codeline>
<codeline lineno="101"><highlight class="comment"><sp/><sp/><sp/><sp/>Phil<sp/>Jordan<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Dave<sp/>Moore<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Roy<sp/>Eltham</highlight></codeline>
<codeline lineno="102"><highlight class="comment"><sp/><sp/><sp/><sp/>Hayaki<sp/>Saito<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Nathan<sp/>Reed<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Won<sp/>Chun</highlight></codeline>
<codeline lineno="103"><highlight class="comment"><sp/><sp/><sp/><sp/>Luke<sp/>Graham<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Johan<sp/>Duparc<sp/><sp/><sp/><sp/><sp/><sp/><sp/>Nick<sp/>Verigakis<sp/><sp/><sp/><sp/><sp/><sp/><sp/>the<sp/>Horde3D<sp/>community</highlight></codeline>
<codeline lineno="104"><highlight class="comment"><sp/><sp/><sp/><sp/>Thomas<sp/>Ruf<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Ronny<sp/>Chevalier<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>github:rlyeh</highlight></codeline>
<codeline lineno="105"><highlight class="comment"><sp/><sp/><sp/><sp/>Janez<sp/>Zemva<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>John<sp/>Bartholomew<sp/><sp/><sp/>Michal<sp/>Cichon<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>github:romigrou</highlight></codeline>
<codeline lineno="106"><highlight class="comment"><sp/><sp/><sp/><sp/>Jonathan<sp/>Blow<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Ken<sp/>Hamada<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Tero<sp/>Hanninen<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>github:svdijk</highlight></codeline>
<codeline lineno="107"><highlight class="comment"><sp/><sp/><sp/><sp/>Eugene<sp/>Golushkov<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Laurent<sp/>Gomila<sp/><sp/><sp/><sp/><sp/>Cort<sp/>Stratton<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>github:snagar</highlight></codeline>
<codeline lineno="108"><highlight class="comment"><sp/><sp/><sp/><sp/>Aruelien<sp/>Pocheville<sp/><sp/><sp/><sp/><sp/>Sergio<sp/>Gonzalez<sp/><sp/><sp/><sp/>Thibault<sp/>Reuille<sp/><sp/><sp/><sp/><sp/>github:Zelex</highlight></codeline>
<codeline lineno="109"><highlight class="comment"><sp/><sp/><sp/><sp/>Cass<sp/>Everitt<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Ryamond<sp/>Barbiero<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>github:grim210</highlight></codeline>
<codeline lineno="110"><highlight class="comment"><sp/><sp/><sp/><sp/>Paul<sp/>Du<sp/>Bois<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Engin<sp/>Manap<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Aldo<sp/>Culquicondor<sp/><sp/><sp/><sp/>github:sammyhw</highlight></codeline>
<codeline lineno="111"><highlight class="comment"><sp/><sp/><sp/><sp/>Philipp<sp/>Wiesemann<sp/><sp/><sp/><sp/><sp/><sp/><sp/>Dale<sp/>Weiler<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Oriol<sp/>Ferrer<sp/>Mesia<sp/><sp/><sp/>github:phprus</highlight></codeline>
<codeline lineno="112"><highlight class="comment"><sp/><sp/><sp/><sp/>Josh<sp/>Tobin<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Neil<sp/>Bickford<sp/><sp/><sp/><sp/><sp/><sp/>Matthew<sp/>Gregan<sp/><sp/><sp/><sp/><sp/><sp/><sp/>github:poppolopoppo</highlight></codeline>
<codeline lineno="113"><highlight class="comment"><sp/><sp/><sp/><sp/>Julian<sp/>Raschke<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Gregory<sp/>Mullen<sp/><sp/><sp/><sp/><sp/>Christian<sp/>Floisand<sp/><sp/><sp/>github:darealshinji</highlight></codeline>
<codeline lineno="114"><highlight class="comment"><sp/><sp/><sp/><sp/>Baldur<sp/>Karlsson<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Kevin<sp/>Schmidt<sp/><sp/><sp/><sp/><sp/><sp/>JR<sp/>Smith<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>github:Michaelangel007</highlight></codeline>
<codeline lineno="115"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Brad<sp/>Weinberger<sp/><sp/><sp/><sp/>Matvey<sp/>Cherevko<sp/><sp/><sp/><sp/><sp/><sp/>github:mosra</highlight></codeline>
<codeline lineno="116"><highlight class="comment"><sp/><sp/><sp/><sp/>Luca<sp/>Sas<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Alexander<sp/>Veselov<sp/><sp/>Zack<sp/>Middleton<sp/><sp/><sp/><sp/><sp/><sp/><sp/>[reserved]</highlight></codeline>
<codeline lineno="117"><highlight class="comment"><sp/><sp/><sp/><sp/>Ryan<sp/>C.<sp/>Gordon<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[reserved]<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[reserved]</highlight></codeline>
<codeline lineno="118"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DO<sp/>NOT<sp/>ADD<sp/>YOUR<sp/>NAME<sp/>HERE</highlight></codeline>
<codeline lineno="119"><highlight class="comment"></highlight></codeline>
<codeline lineno="120"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Jacko<sp/>Dirks</highlight></codeline>
<codeline lineno="121"><highlight class="comment"></highlight></codeline>
<codeline lineno="122"><highlight class="comment"><sp/><sp/>To<sp/>add<sp/>your<sp/>name<sp/>to<sp/>the<sp/>credits,<sp/>pick<sp/>a<sp/>random<sp/>blank<sp/>space<sp/>in<sp/>the<sp/>middle<sp/>and<sp/>fill<sp/>it.</highlight></codeline>
<codeline lineno="123"><highlight class="comment"><sp/><sp/>80%<sp/>of<sp/>merge<sp/>conflicts<sp/>on<sp/>stb<sp/>PRs<sp/>are<sp/>due<sp/>to<sp/>people<sp/>adding<sp/>their<sp/>name<sp/>at<sp/>the<sp/>end</highlight></codeline>
<codeline lineno="124"><highlight class="comment"><sp/><sp/>of<sp/>the<sp/>credits.</highlight></codeline>
<codeline lineno="125"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>STBI_INCLUDE_STB_IMAGE_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>STBI_INCLUDE_STB_IMAGE_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight><highlight class="comment">//<sp/>DOCUMENTATION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Limitations:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>-<sp/>no<sp/>12-bit-per-channel<sp/>JPEG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>-<sp/>no<sp/>JPEGs<sp/>with<sp/>arithmetic<sp/>coding</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>-<sp/>GIF<sp/>always<sp/>returns<sp/>*comp=4</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Basic<sp/>usage<sp/>(see<sp/>HDR<sp/>discussion<sp/>below<sp/>for<sp/>HDR<sp/>usage):</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>int<sp/>x,y,n;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>unsigned<sp/>char<sp/>*data<sp/>=<sp/>stbi_load(filename,<sp/>&amp;x,<sp/>&amp;y,<sp/>&amp;n,<sp/>0);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>//<sp/>...<sp/>process<sp/>data<sp/>if<sp/>not<sp/>NULL<sp/>...</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>//<sp/>...<sp/>x<sp/>=<sp/>width,<sp/>y<sp/>=<sp/>height,<sp/>n<sp/>=<sp/>#<sp/>8-bit<sp/>components<sp/>per<sp/>pixel<sp/>...</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>//<sp/>...<sp/>replace<sp/>&apos;0&apos;<sp/>with<sp/>&apos;1&apos;..&apos;4&apos;<sp/>to<sp/>force<sp/>that<sp/>many<sp/>components<sp/>per<sp/>pixel</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>//<sp/>...<sp/>but<sp/>&apos;n&apos;<sp/>will<sp/>always<sp/>be<sp/>the<sp/>number<sp/>that<sp/>it<sp/>would<sp/>have<sp/>been<sp/>if<sp/>you<sp/>said<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>stbi_image_free(data);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Standard<sp/>parameters:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>int<sp/>*x<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>--<sp/>outputs<sp/>image<sp/>width<sp/>in<sp/>pixels</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>int<sp/>*y<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>--<sp/>outputs<sp/>image<sp/>height<sp/>in<sp/>pixels</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>int<sp/>*channels_in_file<sp/><sp/>--<sp/>outputs<sp/>#<sp/>of<sp/>image<sp/>components<sp/>in<sp/>image<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>int<sp/>desired_channels<sp/><sp/><sp/>--<sp/>if<sp/>non-zero,<sp/>#<sp/>of<sp/>image<sp/>components<sp/>requested<sp/>in<sp/>result</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>return<sp/>value<sp/>from<sp/>an<sp/>image<sp/>loader<sp/>is<sp/>an<sp/>&apos;unsigned<sp/>char<sp/>*&apos;<sp/>which<sp/>points</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight><highlight class="comment">//<sp/>to<sp/>the<sp/>pixel<sp/>data,<sp/>or<sp/>NULL<sp/>on<sp/>an<sp/>allocation<sp/>failure<sp/>or<sp/>if<sp/>the<sp/>image<sp/>is</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight><highlight class="comment">//<sp/>corrupt<sp/>or<sp/>invalid.<sp/>The<sp/>pixel<sp/>data<sp/>consists<sp/>of<sp/>*y<sp/>scanlines<sp/>of<sp/>*x<sp/>pixels,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight><highlight class="comment">//<sp/>with<sp/>each<sp/>pixel<sp/>consisting<sp/>of<sp/>N<sp/>interleaved<sp/>8-bit<sp/>components;<sp/>the<sp/>first</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight><highlight class="comment">//<sp/>pixel<sp/>pointed<sp/>to<sp/>is<sp/>top-left-most<sp/>in<sp/>the<sp/>image.<sp/>There<sp/>is<sp/>no<sp/>padding<sp/>between</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight><highlight class="comment">//<sp/>image<sp/>scanlines<sp/>or<sp/>between<sp/>pixels,<sp/>regardless<sp/>of<sp/>format.<sp/>The<sp/>number<sp/>of</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight><highlight class="comment">//<sp/>components<sp/>N<sp/>is<sp/>&apos;desired_channels&apos;<sp/>if<sp/>desired_channels<sp/>is<sp/>non-zero,<sp/>or</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight><highlight class="comment">//<sp/>*channels_in_file<sp/>otherwise.<sp/>If<sp/>desired_channels<sp/>is<sp/>non-zero,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight><highlight class="comment">//<sp/>*channels_in_file<sp/>has<sp/>the<sp/>number<sp/>of<sp/>components<sp/>that<sp/>_would_<sp/>have<sp/>been</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight><highlight class="comment">//<sp/>output<sp/>otherwise.<sp/>E.g.<sp/>if<sp/>you<sp/>set<sp/>desired_channels<sp/>to<sp/>4,<sp/>you<sp/>will<sp/>always</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight><highlight class="comment">//<sp/>get<sp/>RGBA<sp/>output,<sp/>but<sp/>you<sp/>can<sp/>check<sp/>*channels_in_file<sp/>to<sp/>see<sp/>if<sp/>it&apos;s<sp/>trivially</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight><highlight class="comment">//<sp/>opaque<sp/>because<sp/>e.g.<sp/>there<sp/>were<sp/>only<sp/>3<sp/>channels<sp/>in<sp/>the<sp/>source<sp/>image.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight><highlight class="comment">//<sp/>An<sp/>output<sp/>image<sp/>with<sp/>N<sp/>components<sp/>has<sp/>the<sp/>following<sp/>components<sp/>interleaved</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight><highlight class="comment">//<sp/>in<sp/>this<sp/>order<sp/>in<sp/>each<sp/>pixel:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>N=#comp<sp/><sp/><sp/><sp/><sp/>components</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>1<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>grey</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>2<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>grey,<sp/>alpha</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>3<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>red,<sp/>green,<sp/>blue</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>4<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>red,<sp/>green,<sp/>blue,<sp/>alpha</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight><highlight class="comment">//<sp/>If<sp/>image<sp/>loading<sp/>fails<sp/>for<sp/>any<sp/>reason,<sp/>the<sp/>return<sp/>value<sp/>will<sp/>be<sp/>NULL,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight><highlight class="comment">//<sp/>and<sp/>*x,<sp/>*y,<sp/>*channels_in_file<sp/>will<sp/>be<sp/>unchanged.<sp/>The<sp/>function</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight><highlight class="comment">//<sp/>stbi_failure_reason()<sp/>can<sp/>be<sp/>queried<sp/>for<sp/>an<sp/>extremely<sp/>brief,<sp/>end-user</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight><highlight class="comment">//<sp/>unfriendly<sp/>explanation<sp/>of<sp/>why<sp/>the<sp/>load<sp/>failed.<sp/>Define<sp/>STBI_NO_FAILURE_STRINGS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight><highlight class="comment">//<sp/>to<sp/>avoid<sp/>compiling<sp/>these<sp/>strings<sp/>at<sp/>all,<sp/>and<sp/>STBI_FAILURE_USERMSG<sp/>to<sp/>get<sp/>slightly</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight><highlight class="comment">//<sp/>more<sp/>user-friendly<sp/>ones.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Paletted<sp/>PNG,<sp/>BMP,<sp/>GIF,<sp/>and<sp/>PIC<sp/>images<sp/>are<sp/>automatically<sp/>depalettized.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight><highlight class="comment">//<sp/>To<sp/>query<sp/>the<sp/>width,<sp/>height<sp/>and<sp/>component<sp/>count<sp/>of<sp/>an<sp/>image<sp/>without<sp/>having<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight><highlight class="comment">//<sp/>decode<sp/>the<sp/>full<sp/>file,<sp/>you<sp/>can<sp/>use<sp/>the<sp/>stbi_info<sp/>family<sp/>of<sp/>functions:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>int<sp/>x,y,n,ok;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>ok<sp/>=<sp/>stbi_info(filename,<sp/>&amp;x,<sp/>&amp;y,<sp/>&amp;n);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>//<sp/>returns<sp/>ok=1<sp/>and<sp/>sets<sp/>x,<sp/>y,<sp/>n<sp/>if<sp/>image<sp/>is<sp/>a<sp/>supported<sp/>format,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>//<sp/>0<sp/>otherwise.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Note<sp/>that<sp/>stb_image<sp/>pervasively<sp/>uses<sp/>ints<sp/>in<sp/>its<sp/>public<sp/>API<sp/>for<sp/>sizes,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight><highlight class="comment">//<sp/>including<sp/>sizes<sp/>of<sp/>memory<sp/>buffers.<sp/>This<sp/>is<sp/>now<sp/>part<sp/>of<sp/>the<sp/>API<sp/>and<sp/>thus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight><highlight class="comment">//<sp/>hard<sp/>to<sp/>change<sp/>without<sp/>causing<sp/>breakage.<sp/>As<sp/>a<sp/>result,<sp/>the<sp/>various<sp/>image</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight><highlight class="comment">//<sp/>loaders<sp/>all<sp/>have<sp/>certain<sp/>limits<sp/>on<sp/>image<sp/>size;<sp/>these<sp/>differ<sp/>somewhat</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight><highlight class="comment">//<sp/>by<sp/>format<sp/>but<sp/>generally<sp/>boil<sp/>down<sp/>to<sp/>either<sp/>just<sp/>under<sp/>2GB<sp/>or<sp/>just<sp/>under</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight><highlight class="comment">//<sp/>1GB.<sp/>When<sp/>the<sp/>decoded<sp/>image<sp/>would<sp/>be<sp/>larger<sp/>than<sp/>this,<sp/>stb_image<sp/>decoding</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight><highlight class="comment">//<sp/>will<sp/>fail.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Additionally,<sp/>stb_image<sp/>will<sp/>reject<sp/>image<sp/>files<sp/>that<sp/>have<sp/>any<sp/>of<sp/>their</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight><highlight class="comment">//<sp/>dimensions<sp/>set<sp/>to<sp/>a<sp/>larger<sp/>value<sp/>than<sp/>the<sp/>configurable<sp/>STBI_MAX_DIMENSIONS,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight><highlight class="comment">//<sp/>which<sp/>defaults<sp/>to<sp/>2**24<sp/>=<sp/>16777216<sp/>pixels.<sp/>Due<sp/>to<sp/>the<sp/>above<sp/>memory<sp/>limit,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight><highlight class="comment">//<sp/>the<sp/>only<sp/>way<sp/>to<sp/>have<sp/>an<sp/>image<sp/>with<sp/>such<sp/>dimensions<sp/>load<sp/>correctly</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight><highlight class="comment">//<sp/>is<sp/>for<sp/>it<sp/>to<sp/>have<sp/>a<sp/>rather<sp/>extreme<sp/>aspect<sp/>ratio.<sp/>Either<sp/>way,<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight><highlight class="comment">//<sp/>assumption<sp/>here<sp/>is<sp/>that<sp/>such<sp/>larger<sp/>images<sp/>are<sp/>likely<sp/>to<sp/>be<sp/>malformed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight><highlight class="comment">//<sp/>or<sp/>malicious.<sp/>If<sp/>you<sp/>do<sp/>need<sp/>to<sp/>load<sp/>an<sp/>image<sp/>with<sp/>individual<sp/>dimensions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight><highlight class="comment">//<sp/>larger<sp/>than<sp/>that,<sp/>and<sp/>it<sp/>still<sp/>fits<sp/>in<sp/>the<sp/>overall<sp/>size<sp/>limit,<sp/>you<sp/>can</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight><highlight class="comment">//<sp/>#define<sp/>STBI_MAX_DIMENSIONS<sp/>on<sp/>your<sp/>own<sp/>to<sp/>be<sp/>something<sp/>larger.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight><highlight class="comment">//<sp/>===========================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight><highlight class="comment">//<sp/>UNICODE:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>If<sp/>compiling<sp/>for<sp/>Windows<sp/>and<sp/>you<sp/>wish<sp/>to<sp/>use<sp/>Unicode<sp/>filenames,<sp/>compile</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>with</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>#define<sp/>STBI_WINDOWS_UTF8</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>and<sp/>pass<sp/>utf8-encoded<sp/>filenames.<sp/>Call<sp/>stbi_convert_wchar_to_utf8<sp/>to<sp/>convert</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>Windows<sp/>wchar_t<sp/>filenames<sp/>to<sp/>utf8.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight><highlight class="comment">//<sp/>===========================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Philosophy</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight><highlight class="comment">//<sp/>stb<sp/>libraries<sp/>are<sp/>designed<sp/>with<sp/>the<sp/>following<sp/>priorities:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>1.<sp/>easy<sp/>to<sp/>use</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>2.<sp/>easy<sp/>to<sp/>maintain</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>3.<sp/>good<sp/>performance</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Sometimes<sp/>I<sp/>let<sp/>&quot;good<sp/>performance&quot;<sp/>creep<sp/>up<sp/>in<sp/>priority<sp/>over<sp/>&quot;easy<sp/>to<sp/>maintain&quot;,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight><highlight class="comment">//<sp/>and<sp/>for<sp/>best<sp/>performance<sp/>I<sp/>may<sp/>provide<sp/>less-easy-to-use<sp/>APIs<sp/>that<sp/>give<sp/>higher</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight><highlight class="comment">//<sp/>performance,<sp/>in<sp/>addition<sp/>to<sp/>the<sp/>easy-to-use<sp/>ones.<sp/>Nevertheless,<sp/>it&apos;s<sp/>important</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight><highlight class="comment">//<sp/>to<sp/>keep<sp/>in<sp/>mind<sp/>that<sp/>from<sp/>the<sp/>standpoint<sp/>of<sp/>you,<sp/>a<sp/>client<sp/>of<sp/>this<sp/>library,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight><highlight class="comment">//<sp/>all<sp/>you<sp/>care<sp/>about<sp/>is<sp/>#1<sp/>and<sp/>#3,<sp/>and<sp/>stb<sp/>libraries<sp/>DO<sp/>NOT<sp/>emphasize<sp/>#3<sp/>above<sp/>all.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Some<sp/>secondary<sp/>priorities<sp/>arise<sp/>directly<sp/>from<sp/>the<sp/>first<sp/>two,<sp/>some<sp/>of<sp/>which</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight><highlight class="comment">//<sp/>provide<sp/>more<sp/>explicit<sp/>reasons<sp/>why<sp/>performance<sp/>can&apos;t<sp/>be<sp/>emphasized.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>-<sp/>Portable<sp/>(&quot;ease<sp/>of<sp/>use&quot;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>-<sp/>Small<sp/>source<sp/>code<sp/>footprint<sp/>(&quot;easy<sp/>to<sp/>maintain&quot;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>-<sp/>No<sp/>dependencies<sp/>(&quot;ease<sp/>of<sp/>use&quot;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight><highlight class="comment">//<sp/>===========================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight><highlight class="comment">//<sp/>I/O<sp/>callbacks</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"></highlight><highlight class="comment">//<sp/>I/O<sp/>callbacks<sp/>allow<sp/>you<sp/>to<sp/>read<sp/>from<sp/>arbitrary<sp/>sources,<sp/>like<sp/>packaged</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight><highlight class="comment">//<sp/>files<sp/>or<sp/>some<sp/>other<sp/>source.<sp/>Data<sp/>read<sp/>from<sp/>callbacks<sp/>are<sp/>processed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"></highlight><highlight class="comment">//<sp/>through<sp/>a<sp/>small<sp/>internal<sp/>buffer<sp/>(currently<sp/>128<sp/>bytes)<sp/>to<sp/>try<sp/>to<sp/>reduce</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight><highlight class="comment">//<sp/>overhead.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>three<sp/>functions<sp/>you<sp/>must<sp/>define<sp/>are<sp/>&quot;read&quot;<sp/>(reads<sp/>some<sp/>bytes<sp/>of<sp/>data),</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"></highlight><highlight class="comment">//<sp/>&quot;skip&quot;<sp/>(skips<sp/>some<sp/>bytes<sp/>of<sp/>data),<sp/>&quot;eof&quot;<sp/>(reports<sp/>if<sp/>the<sp/>stream<sp/>is<sp/>at<sp/>the<sp/>end).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"></highlight><highlight class="comment">//<sp/>===========================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight><highlight class="comment">//<sp/>SIMD<sp/>support</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>JPEG<sp/>decoder<sp/>will<sp/>try<sp/>to<sp/>automatically<sp/>use<sp/>SIMD<sp/>kernels<sp/>on<sp/>x86<sp/>when</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"></highlight><highlight class="comment">//<sp/>supported<sp/>by<sp/>the<sp/>compiler.<sp/>For<sp/>ARM<sp/>Neon<sp/>support,<sp/>you<sp/>must<sp/>explicitly</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight><highlight class="comment">//<sp/>request<sp/>it.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"></highlight><highlight class="comment">//<sp/>(The<sp/>old<sp/>do-it-yourself<sp/>SIMD<sp/>API<sp/>is<sp/>no<sp/>longer<sp/>supported<sp/>in<sp/>the<sp/>current</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight><highlight class="comment">//<sp/>code.)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"></highlight><highlight class="comment">//<sp/>On<sp/>x86,<sp/>SSE2<sp/>will<sp/>automatically<sp/>be<sp/>used<sp/>when<sp/>available<sp/>based<sp/>on<sp/>a<sp/>run-time</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal"></highlight><highlight class="comment">//<sp/>test;<sp/>if<sp/>not,<sp/>the<sp/>generic<sp/>C<sp/>versions<sp/>are<sp/>used<sp/>as<sp/>a<sp/>fall-back.<sp/>On<sp/>ARM<sp/>targets,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"></highlight><highlight class="comment">//<sp/>the<sp/>typical<sp/>path<sp/>is<sp/>to<sp/>have<sp/>separate<sp/>builds<sp/>for<sp/>NEON<sp/>and<sp/>non-NEON<sp/>devices</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal"></highlight><highlight class="comment">//<sp/>(at<sp/>least<sp/>this<sp/>is<sp/>true<sp/>for<sp/>iOS<sp/>and<sp/>Android).<sp/>Therefore,<sp/>the<sp/>NEON<sp/>support<sp/>is</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"></highlight><highlight class="comment">//<sp/>toggled<sp/>by<sp/>a<sp/>build<sp/>flag:<sp/>define<sp/>STBI_NEON<sp/>to<sp/>get<sp/>NEON<sp/>loops.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"></highlight><highlight class="comment">//<sp/>If<sp/>for<sp/>some<sp/>reason<sp/>you<sp/>do<sp/>not<sp/>want<sp/>to<sp/>use<sp/>any<sp/>of<sp/>SIMD<sp/>code,<sp/>or<sp/>if</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"></highlight><highlight class="comment">//<sp/>you<sp/>have<sp/>issues<sp/>compiling<sp/>it,<sp/>you<sp/>can<sp/>disable<sp/>it<sp/>entirely<sp/>by</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"></highlight><highlight class="comment">//<sp/>defining<sp/>STBI_NO_SIMD.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"></highlight><highlight class="comment">//<sp/>===========================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal"></highlight><highlight class="comment">//<sp/>HDR<sp/>image<sp/>support<sp/><sp/><sp/>(disable<sp/>by<sp/>defining<sp/>STBI_NO_HDR)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"></highlight><highlight class="comment">//<sp/>stb_image<sp/>supports<sp/>loading<sp/>HDR<sp/>images<sp/>in<sp/>general,<sp/>and<sp/>currently<sp/>the<sp/>Radiance</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal"></highlight><highlight class="comment">//<sp/>.HDR<sp/>file<sp/>format<sp/>specifically.<sp/>You<sp/>can<sp/>still<sp/>load<sp/>any<sp/>file<sp/>through<sp/>the<sp/>existing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal"></highlight><highlight class="comment">//<sp/>interface;<sp/>if<sp/>you<sp/>attempt<sp/>to<sp/>load<sp/>an<sp/>HDR<sp/>file,<sp/>it<sp/>will<sp/>be<sp/>automatically<sp/>remapped</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"></highlight><highlight class="comment">//<sp/>to<sp/>LDR,<sp/>assuming<sp/>gamma<sp/>2.2<sp/>and<sp/>an<sp/>arbitrary<sp/>scale<sp/>factor<sp/>defaulting<sp/>to<sp/>1;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal"></highlight><highlight class="comment">//<sp/>both<sp/>of<sp/>these<sp/>constants<sp/>can<sp/>be<sp/>reconfigured<sp/>through<sp/>this<sp/>interface:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>stbi_hdr_to_ldr_gamma(2.2f);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>stbi_hdr_to_ldr_scale(1.0f);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal"></highlight><highlight class="comment">//<sp/>(note,<sp/>do<sp/>not<sp/>use<sp/>_inverse_<sp/>constants;<sp/>stbi_image<sp/>will<sp/>invert<sp/>them</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal"></highlight><highlight class="comment">//<sp/>appropriately).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Additionally,<sp/>there<sp/>is<sp/>a<sp/>new,<sp/>parallel<sp/>interface<sp/>for<sp/>loading<sp/>files<sp/>as</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="normal"></highlight><highlight class="comment">//<sp/>(linear)<sp/>floats<sp/>to<sp/>preserve<sp/>the<sp/>full<sp/>dynamic<sp/>range:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>float<sp/>*data<sp/>=<sp/>stbi_loadf(filename,<sp/>&amp;x,<sp/>&amp;y,<sp/>&amp;n,<sp/>0);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"></highlight><highlight class="comment">//<sp/>If<sp/>you<sp/>load<sp/>LDR<sp/>images<sp/>through<sp/>this<sp/>interface,<sp/>those<sp/>images<sp/>will</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight><highlight class="comment">//<sp/>be<sp/>promoted<sp/>to<sp/>floating<sp/>point<sp/>values,<sp/>run<sp/>through<sp/>the<sp/>inverse<sp/>of</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal"></highlight><highlight class="comment">//<sp/>constants<sp/>corresponding<sp/>to<sp/>the<sp/>above:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>stbi_ldr_to_hdr_scale(1.0f);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="301"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>stbi_ldr_to_hdr_gamma(2.2f);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="303"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Finally,<sp/>given<sp/>a<sp/>filename<sp/>(or<sp/>an<sp/>open<sp/>file<sp/>or<sp/>memory<sp/>block--see<sp/>header</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="normal"></highlight><highlight class="comment">//<sp/>file<sp/>for<sp/>details)<sp/>containing<sp/>image<sp/>data,<sp/>you<sp/>can<sp/>query<sp/>for<sp/>the<sp/>&quot;most</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="305"><highlight class="normal"></highlight><highlight class="comment">//<sp/>appropriate&quot;<sp/>interface<sp/>to<sp/>use<sp/>(that<sp/>is,<sp/>whether<sp/>the<sp/>image<sp/>is<sp/>HDR<sp/>or</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal"></highlight><highlight class="comment">//<sp/>not),<sp/>using:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>stbi_is_hdr(char<sp/>*filename);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="309"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="310"><highlight class="normal"></highlight><highlight class="comment">//<sp/>===========================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="311"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="312"><highlight class="normal"></highlight><highlight class="comment">//<sp/>iPhone<sp/>PNG<sp/>support:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="313"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="314"><highlight class="normal"></highlight><highlight class="comment">//<sp/>We<sp/>optionally<sp/>support<sp/>converting<sp/>iPhone-formatted<sp/>PNGs<sp/>(which<sp/>store</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="315"><highlight class="normal"></highlight><highlight class="comment">//<sp/>premultiplied<sp/>BGRA)<sp/>back<sp/>to<sp/>RGB,<sp/>even<sp/>though<sp/>they&apos;re<sp/>internally<sp/>encoded</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="316"><highlight class="normal"></highlight><highlight class="comment">//<sp/>differently.<sp/>To<sp/>enable<sp/>this<sp/>conversion,<sp/>call</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="317"><highlight class="normal"></highlight><highlight class="comment">//<sp/>stbi_convert_iphone_png_to_rgb(1).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="318"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="319"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Call<sp/>stbi_set_unpremultiply_on_load(1)<sp/>as<sp/>well<sp/>to<sp/>force<sp/>a<sp/>divide<sp/>per</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="320"><highlight class="normal"></highlight><highlight class="comment">//<sp/>pixel<sp/>to<sp/>remove<sp/>any<sp/>premultiplied<sp/>alpha<sp/>*only*<sp/>if<sp/>the<sp/>image<sp/>file<sp/>explicitly</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="321"><highlight class="normal"></highlight><highlight class="comment">//<sp/>says<sp/>there&apos;s<sp/>premultiplied<sp/>data<sp/>(currently<sp/>only<sp/>happens<sp/>in<sp/>iPhone<sp/>images,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="322"><highlight class="normal"></highlight><highlight class="comment">//<sp/>and<sp/>only<sp/>if<sp/>iPhone<sp/>convert-to-rgb<sp/>processing<sp/>is<sp/>on).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="323"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="324"><highlight class="normal"></highlight><highlight class="comment">//<sp/>===========================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="325"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="326"><highlight class="normal"></highlight><highlight class="comment">//<sp/>ADDITIONAL<sp/>CONFIGURATION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="327"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="328"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>-<sp/>You<sp/>can<sp/>suppress<sp/>implementation<sp/>of<sp/>any<sp/>of<sp/>the<sp/>decoders<sp/>to<sp/>reduce</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="329"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>your<sp/>code<sp/>footprint<sp/>by<sp/>#defining<sp/>one<sp/>or<sp/>more<sp/>of<sp/>the<sp/>following</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="330"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>symbols<sp/>before<sp/>creating<sp/>the<sp/>implementation.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="331"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="332"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>STBI_NO_JPEG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="333"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>STBI_NO_PNG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="334"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>STBI_NO_BMP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="335"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>STBI_NO_PSD</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="336"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>STBI_NO_TGA</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="337"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>STBI_NO_GIF</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="338"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>STBI_NO_HDR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="339"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>STBI_NO_PIC</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="340"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>STBI_NO_PNM<sp/><sp/><sp/>(.ppm<sp/>and<sp/>.pgm)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="341"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="342"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>-<sp/>You<sp/>can<sp/>request<sp/>*only*<sp/>certain<sp/>decoders<sp/>and<sp/>suppress<sp/>all<sp/>other<sp/>ones</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="343"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>(this<sp/>will<sp/>be<sp/>more<sp/>forward-compatible,<sp/>as<sp/>addition<sp/>of<sp/>new<sp/>decoders</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="344"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>doesn&apos;t<sp/>require<sp/>you<sp/>to<sp/>disable<sp/>them<sp/>explicitly):</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="345"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="346"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>STBI_ONLY_JPEG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="347"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>STBI_ONLY_PNG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="348"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>STBI_ONLY_BMP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="349"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>STBI_ONLY_PSD</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="350"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>STBI_ONLY_TGA</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="351"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>STBI_ONLY_GIF</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="352"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>STBI_ONLY_HDR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="353"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>STBI_ONLY_PIC</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="354"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>STBI_ONLY_PNM<sp/><sp/><sp/>(.ppm<sp/>and<sp/>.pgm)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="355"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="356"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>-<sp/>If<sp/>you<sp/>use<sp/>STBI_NO_PNG<sp/>(or<sp/>_ONLY_<sp/>without<sp/>PNG),<sp/>and<sp/>you<sp/>still</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="357"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>want<sp/>the<sp/>zlib<sp/>decoder<sp/>to<sp/>be<sp/>available,<sp/>#define<sp/>STBI_SUPPORT_ZLIB</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="358"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="359"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>-<sp/>If<sp/>you<sp/>define<sp/>STBI_MAX_DIMENSIONS,<sp/>stb_image<sp/>will<sp/>reject<sp/>images<sp/>greater</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="360"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>than<sp/>that<sp/>size<sp/>(in<sp/>either<sp/>width<sp/>or<sp/>height)<sp/>without<sp/>further<sp/>processing.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="361"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>This<sp/>is<sp/>to<sp/>let<sp/>programs<sp/>in<sp/>the<sp/>wild<sp/>set<sp/>an<sp/>upper<sp/>bound<sp/>to<sp/>prevent</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="362"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>denial-of-service<sp/>attacks<sp/>on<sp/>untrusted<sp/>data,<sp/>as<sp/>one<sp/>could<sp/>generate<sp/>a</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="363"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>valid<sp/>image<sp/>of<sp/>gigantic<sp/>dimensions<sp/>and<sp/>force<sp/>stb_image<sp/>to<sp/>allocate<sp/>a</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="364"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>huge<sp/>block<sp/>of<sp/>memory<sp/>and<sp/>spend<sp/>disproportionate<sp/>time<sp/>decoding<sp/>it.<sp/>By</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="365"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>default<sp/>this<sp/>is<sp/>set<sp/>to<sp/>(1<sp/>&lt;&lt;<sp/>24),<sp/>which<sp/>is<sp/>16777216,<sp/>but<sp/>that&apos;s<sp/>still</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="366"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>very<sp/>big.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="367"><highlight class="normal"></highlight></codeline>
<codeline lineno="368"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>STBI_NO_STDIO</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="369"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="370"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>STBI_NO_STDIO</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="371"><highlight class="normal"></highlight></codeline>
<codeline lineno="372" refid="stb__image_8h_1aed6cd14a3bf678808c4c179e808866aa" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>STBI_VERSION<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="373"><highlight class="normal"></highlight></codeline>
<codeline lineno="374"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="375"><highlight class="normal">{</highlight></codeline>
<codeline lineno="376" refid="stb__image_8h_1a06fc87d81c62e9abb8790b6e5713c55ba0177ac2c5002f4f251bb766d41752029" refkind="member"><highlight class="normal"><sp/><sp/><sp/><ref refid="stb__image_8h_1a06fc87d81c62e9abb8790b6e5713c55ba0177ac2c5002f4f251bb766d41752029" kindref="member">STBI_default</ref><sp/>=<sp/>0,<sp/></highlight><highlight class="comment">//<sp/>only<sp/>used<sp/>for<sp/>desired_channels</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="377"><highlight class="normal"></highlight></codeline>
<codeline lineno="378" refid="stb__image_8h_1a06fc87d81c62e9abb8790b6e5713c55bad1eb95ca1fa7706bf732bf35a0ed40aa" refkind="member"><highlight class="normal"><sp/><sp/><sp/><ref refid="stb__image_8h_1a06fc87d81c62e9abb8790b6e5713c55bad1eb95ca1fa7706bf732bf35a0ed40aa" kindref="member">STBI_grey</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>1,</highlight></codeline>
<codeline lineno="379" refid="stb__image_8h_1a06fc87d81c62e9abb8790b6e5713c55baf5829d16d4cca6077465c5abd346e2f8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><ref refid="stb__image_8h_1a06fc87d81c62e9abb8790b6e5713c55baf5829d16d4cca6077465c5abd346e2f8" kindref="member">STBI_grey_alpha</ref><sp/>=<sp/>2,</highlight></codeline>
<codeline lineno="380" refid="stb__image_8h_1a06fc87d81c62e9abb8790b6e5713c55baa59123e5d0af25f9b1539f5cf1facddf" refkind="member"><highlight class="normal"><sp/><sp/><sp/><ref refid="stb__image_8h_1a06fc87d81c62e9abb8790b6e5713c55baa59123e5d0af25f9b1539f5cf1facddf" kindref="member">STBI_rgb</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>3,</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><ref refid="stb__image_8h_1a06fc87d81c62e9abb8790b6e5713c55baa7b1af0c9f0310c3ada2aa29a32de293" kindref="member">STBI_rgb_alpha</ref><sp/><sp/>=<sp/>4</highlight></codeline>
<codeline lineno="382" refid="stb__image_8h_1a06fc87d81c62e9abb8790b6e5713c55baa7b1af0c9f0310c3ada2aa29a32de293" refkind="member"><highlight class="normal">};</highlight></codeline>
<codeline lineno="383"><highlight class="normal"></highlight></codeline>
<codeline lineno="384"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdlib.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="385" refid="stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d" kindref="member">stbi_uc</ref>;</highlight></codeline>
<codeline lineno="386" refid="stb__image_8h_1a648037d4c55689328ba08c8f5d293df2" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/><ref refid="stb__image_8h_1a648037d4c55689328ba08c8f5d293df2" kindref="member">stbi_us</ref>;</highlight></codeline>
<codeline lineno="387"><highlight class="normal"></highlight></codeline>
<codeline lineno="388"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="389"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="390"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="391"><highlight class="normal"></highlight></codeline>
<codeline lineno="392"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>STBIDEF</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="393"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>STB_IMAGE_STATIC</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="394"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>STBIDEF<sp/>static</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="395"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="396" refid="stb__image_8h_1a2d9ec9850cd12aefe7641b456266a4c2" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>STBIDEF<sp/>extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="397"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="398"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="399"><highlight class="normal"></highlight></codeline>
<codeline lineno="401"><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="402"><highlight class="normal"></highlight><highlight class="comment">//<sp/>PRIMARY<sp/>API<sp/>-<sp/>works<sp/>on<sp/>images<sp/>of<sp/>any<sp/>type</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="403"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="404"><highlight class="normal"></highlight></codeline>
<codeline lineno="405"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="406"><highlight class="normal"></highlight><highlight class="comment">//<sp/>load<sp/>image<sp/>by<sp/>filename,<sp/>open<sp/>file,<sp/>or<sp/>memory<sp/>buffer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="407"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="408"><highlight class="normal"></highlight></codeline>
<codeline lineno="409" refid="structstbi__io__callbacks" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="410"><highlight class="normal">{</highlight></codeline>
<codeline lineno="411" refid="structstbi__io__callbacks_1a623e46b3a2a019611601409926283a88" refkind="member"><highlight class="normal"><sp/><sp/><sp/>int<sp/><sp/><sp/><sp/><sp/><sp/>(*read)<sp/><sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*user,</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*data,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>size);<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>fill<sp/>&apos;data&apos;<sp/>with<sp/>&apos;size&apos;<sp/>bytes.<sp/><sp/>return<sp/>number<sp/>of<sp/>bytes<sp/>actually<sp/>read</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="412" refid="structstbi__io__callbacks_1a257aac5480a90a6c4b8fbe86c1b01068" refkind="member"><highlight class="normal"><sp/><sp/><sp/>void<sp/><sp/><sp/><sp/><sp/>(*skip)<sp/><sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*user,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>skip<sp/>the<sp/>next<sp/>&apos;n&apos;<sp/>bytes,<sp/>or<sp/>&apos;unget&apos;<sp/>the<sp/>last<sp/>-n<sp/>bytes<sp/>if<sp/>negative</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="413" refid="structstbi__io__callbacks_1a319639db2f76e715eed7a7a974136832" refkind="member"><highlight class="normal"><sp/><sp/><sp/>int<sp/><sp/><sp/><sp/><sp/><sp/>(*eof)<sp/><sp/><sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*user);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>returns<sp/>nonzero<sp/>if<sp/>we<sp/>are<sp/>at<sp/>end<sp/>of<sp/>file/data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="414"><highlight class="normal">}<sp/><ref refid="structstbi__io__callbacks" kindref="compound">stbi_io_callbacks</ref>;</highlight></codeline>
<codeline lineno="415"><highlight class="normal"></highlight></codeline>
<codeline lineno="417"><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="418"><highlight class="normal"></highlight><highlight class="comment">//<sp/>8-bits-per-channel<sp/>interface</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="419"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="420"><highlight class="normal"></highlight></codeline>
<codeline lineno="421" refid="stb__image_8h_1acae25d31bfae29d75482f07fecf2935f" refkind="member"><highlight class="normal"><ref refid="stb__image_8h_1a2d9ec9850cd12aefe7641b456266a4c2" kindref="member">STBIDEF</ref><sp/><ref refid="stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d" kindref="member">stbi_uc</ref><sp/>*<ref refid="stb__image_8h_1acae25d31bfae29d75482f07fecf2935f" kindref="member">stbi_load_from_memory</ref><sp/><sp/><sp/>(<ref refid="stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d" kindref="member">stbi_uc</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*buffer,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>len<sp/><sp/><sp/>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*x,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*y,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*channels_in_file,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>desired_channels);</highlight></codeline>
<codeline lineno="422" refid="stb__image_8h_1a95ebc5c42c1a753200be8d465e933af7" refkind="member"><highlight class="normal"><ref refid="stb__image_8h_1a2d9ec9850cd12aefe7641b456266a4c2" kindref="member">STBIDEF</ref><sp/><ref refid="stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d" kindref="member">stbi_uc</ref><sp/>*<ref refid="stb__image_8h_1a95ebc5c42c1a753200be8d465e933af7" kindref="member">stbi_load_from_callbacks</ref>(<ref refid="structstbi__io__callbacks" kindref="compound">stbi_io_callbacks</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*clbk<sp/><sp/>,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*user,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*x,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*y,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*channels_in_file,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>desired_channels);</highlight></codeline>
<codeline lineno="423"><highlight class="normal"></highlight></codeline>
<codeline lineno="424"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>STBI_NO_STDIO</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="425" refid="stb__image_8h_1aefdc7387857a14894bbf321e9ea4f048" refkind="member"><highlight class="normal"><ref refid="stb__image_8h_1a2d9ec9850cd12aefe7641b456266a4c2" kindref="member">STBIDEF</ref><sp/><ref refid="stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d" kindref="member">stbi_uc</ref><sp/>*<ref refid="stb__image_8h_1aefdc7387857a14894bbf321e9ea4f048" kindref="member">stbi_load</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*filename,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*x,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*y,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*channels_in_file,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>desired_channels);</highlight></codeline>
<codeline lineno="426" refid="stb__image_8h_1aa9994764695597161e8f3776e97caa99" refkind="member"><highlight class="normal"><ref refid="stb__image_8h_1a2d9ec9850cd12aefe7641b456266a4c2" kindref="member">STBIDEF</ref><sp/><ref refid="stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d" kindref="member">stbi_uc</ref><sp/>*<ref refid="stb__image_8h_1aa9994764695597161e8f3776e97caa99" kindref="member">stbi_load_from_file</ref><sp/><sp/>(FILE<sp/>*f,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*x,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*y,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*channels_in_file,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>desired_channels);</highlight></codeline>
<codeline lineno="427"><highlight class="normal"></highlight><highlight class="comment">//<sp/>for<sp/>stbi_load_from_file,<sp/>file<sp/>pointer<sp/>is<sp/>left<sp/>pointing<sp/>immediately<sp/>after<sp/>image</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="428"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="429"><highlight class="normal"></highlight></codeline>
<codeline lineno="430"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>STBI_NO_GIF</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="431" refid="stb__image_8h_1ab81ccbc3526368d651117ef48df82b01" refkind="member"><highlight class="normal"><ref refid="stb__image_8h_1a2d9ec9850cd12aefe7641b456266a4c2" kindref="member">STBIDEF</ref><sp/><ref refid="stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d" kindref="member">stbi_uc</ref><sp/>*<ref refid="stb__image_8h_1ab81ccbc3526368d651117ef48df82b01" kindref="member">stbi_load_gif_from_memory</ref>(<ref refid="stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d" kindref="member">stbi_uc</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*buffer,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>len,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>**delays,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*x,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*y,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*z,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*comp,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>req_comp);</highlight></codeline>
<codeline lineno="432"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="433"><highlight class="normal"></highlight></codeline>
<codeline lineno="434"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>STBI_WINDOWS_UTF8</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="435"><highlight class="normal"><ref refid="stb__image_8h_1a2d9ec9850cd12aefe7641b456266a4c2" kindref="member">STBIDEF</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>stbi_convert_wchar_to_utf8(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*buffer,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>bufferlen,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal">*<sp/>input);</highlight></codeline>
<codeline lineno="436"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="437"><highlight class="normal"></highlight></codeline>
<codeline lineno="439"><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="440"><highlight class="normal"></highlight><highlight class="comment">//<sp/>16-bits-per-channel<sp/>interface</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="441"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="442"><highlight class="normal"></highlight></codeline>
<codeline lineno="443" refid="stb__image_8h_1ad30fd870ed2138ce8f38c9dd29b2f76a" refkind="member"><highlight class="normal"><ref refid="stb__image_8h_1a2d9ec9850cd12aefe7641b456266a4c2" kindref="member">STBIDEF</ref><sp/><ref refid="stb__image_8h_1a648037d4c55689328ba08c8f5d293df2" kindref="member">stbi_us</ref><sp/>*<ref refid="stb__image_8h_1ad30fd870ed2138ce8f38c9dd29b2f76a" kindref="member">stbi_load_16_from_memory</ref><sp/><sp/><sp/>(<ref refid="stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d" kindref="member">stbi_uc</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*buffer,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>len,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*x,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*y,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*channels_in_file,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>desired_channels);</highlight></codeline>
<codeline lineno="444" refid="stb__image_8h_1a82bcc0957b6a4ebfdfa3d7f04fbaed18" refkind="member"><highlight class="normal"><ref refid="stb__image_8h_1a2d9ec9850cd12aefe7641b456266a4c2" kindref="member">STBIDEF</ref><sp/><ref refid="stb__image_8h_1a648037d4c55689328ba08c8f5d293df2" kindref="member">stbi_us</ref><sp/>*<ref refid="stb__image_8h_1a82bcc0957b6a4ebfdfa3d7f04fbaed18" kindref="member">stbi_load_16_from_callbacks</ref>(<ref refid="structstbi__io__callbacks" kindref="compound">stbi_io_callbacks</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*clbk,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*user,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*x,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*y,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*channels_in_file,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>desired_channels);</highlight></codeline>
<codeline lineno="445"><highlight class="normal"></highlight></codeline>
<codeline lineno="446"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>STBI_NO_STDIO</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="447" refid="stb__image_8h_1a8a58b6bcd805afa1bdb14f988dd37fee" refkind="member"><highlight class="normal"><ref refid="stb__image_8h_1a2d9ec9850cd12aefe7641b456266a4c2" kindref="member">STBIDEF</ref><sp/><ref refid="stb__image_8h_1a648037d4c55689328ba08c8f5d293df2" kindref="member">stbi_us</ref><sp/>*<ref refid="stb__image_8h_1a8a58b6bcd805afa1bdb14f988dd37fee" kindref="member">stbi_load_16</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*filename,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*x,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*y,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*channels_in_file,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>desired_channels);</highlight></codeline>
<codeline lineno="448" refid="stb__image_8h_1a9ca2591f0987284129e82bf9dbcf7c6c" refkind="member"><highlight class="normal"><ref refid="stb__image_8h_1a2d9ec9850cd12aefe7641b456266a4c2" kindref="member">STBIDEF</ref><sp/><ref refid="stb__image_8h_1a648037d4c55689328ba08c8f5d293df2" kindref="member">stbi_us</ref><sp/>*<ref refid="stb__image_8h_1a9ca2591f0987284129e82bf9dbcf7c6c" kindref="member">stbi_load_from_file_16</ref>(FILE<sp/>*f,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*x,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*y,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*channels_in_file,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>desired_channels);</highlight></codeline>
<codeline lineno="449"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="450"><highlight class="normal"></highlight></codeline>
<codeline lineno="452"><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="453"><highlight class="normal"></highlight><highlight class="comment">//<sp/>float-per-channel<sp/>interface</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="454"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="455"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>STBI_NO_LINEAR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="456" refid="stb__image_8h_1a5d47fb76ce1e34eb0729ad932c9c48e2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><ref refid="stb__image_8h_1a2d9ec9850cd12aefe7641b456266a4c2" kindref="member">STBIDEF</ref><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*<ref refid="stb__image_8h_1a5d47fb76ce1e34eb0729ad932c9c48e2" kindref="member">stbi_loadf_from_memory</ref><sp/><sp/><sp/><sp/><sp/>(<ref refid="stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d" kindref="member">stbi_uc</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*buffer,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>len,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*x,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*y,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*channels_in_file,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>desired_channels);</highlight></codeline>
<codeline lineno="457" refid="stb__image_8h_1a6e7fd261af79ecef2208df3a6cc806bb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><ref refid="stb__image_8h_1a2d9ec9850cd12aefe7641b456266a4c2" kindref="member">STBIDEF</ref><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*<ref refid="stb__image_8h_1a6e7fd261af79ecef2208df3a6cc806bb" kindref="member">stbi_loadf_from_callbacks</ref><sp/><sp/>(<ref refid="structstbi__io__callbacks" kindref="compound">stbi_io_callbacks</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*clbk,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*user,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*x,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*y,<sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*channels_in_file,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>desired_channels);</highlight></codeline>
<codeline lineno="458"><highlight class="normal"></highlight></codeline>
<codeline lineno="459"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#ifndef<sp/>STBI_NO_STDIO</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="460" refid="stb__image_8h_1af4f17acd30945a75901fdc022f90575f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><ref refid="stb__image_8h_1a2d9ec9850cd12aefe7641b456266a4c2" kindref="member">STBIDEF</ref><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*<ref refid="stb__image_8h_1af4f17acd30945a75901fdc022f90575f" kindref="member">stbi_loadf</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*filename,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*x,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*y,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*channels_in_file,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>desired_channels);</highlight></codeline>
<codeline lineno="461" refid="stb__image_8h_1ace82446ecd7b5c760cde062179660f46" refkind="member"><highlight class="normal"><sp/><sp/><sp/><ref refid="stb__image_8h_1a2d9ec9850cd12aefe7641b456266a4c2" kindref="member">STBIDEF</ref><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*<ref refid="stb__image_8h_1ace82446ecd7b5c760cde062179660f46" kindref="member">stbi_loadf_from_file</ref><sp/><sp/>(FILE<sp/>*f,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*x,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*y,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*channels_in_file,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>desired_channels);</highlight></codeline>
<codeline lineno="462"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="463"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="464"><highlight class="normal"></highlight></codeline>
<codeline lineno="465"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>STBI_NO_HDR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="466" refid="stb__image_8h_1ab18889e43518d6b4421b705782bb1b5e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><ref refid="stb__image_8h_1a2d9ec9850cd12aefe7641b456266a4c2" kindref="member">STBIDEF</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><ref refid="stb__image_8h_1ab18889e43518d6b4421b705782bb1b5e" kindref="member">stbi_hdr_to_ldr_gamma</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>gamma);</highlight></codeline>
<codeline lineno="467" refid="stb__image_8h_1ae21cc1184eeb5cc814699f1ed62c5258" refkind="member"><highlight class="normal"><sp/><sp/><sp/><ref refid="stb__image_8h_1a2d9ec9850cd12aefe7641b456266a4c2" kindref="member">STBIDEF</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><ref refid="stb__image_8h_1ae21cc1184eeb5cc814699f1ed62c5258" kindref="member">stbi_hdr_to_ldr_scale</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>scale);</highlight></codeline>
<codeline lineno="468"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>STBI_NO_HDR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="469"><highlight class="normal"></highlight></codeline>
<codeline lineno="470"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>STBI_NO_LINEAR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="471" refid="stb__image_8h_1a1feccdcf726dcc6b5502e3efa85b7dbb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><ref refid="stb__image_8h_1a2d9ec9850cd12aefe7641b456266a4c2" kindref="member">STBIDEF</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><ref refid="stb__image_8h_1a1feccdcf726dcc6b5502e3efa85b7dbb" kindref="member">stbi_ldr_to_hdr_gamma</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>gamma);</highlight></codeline>
<codeline lineno="472" refid="stb__image_8h_1af946583656a362a316b40c0421c20561" refkind="member"><highlight class="normal"><sp/><sp/><sp/><ref refid="stb__image_8h_1a2d9ec9850cd12aefe7641b456266a4c2" kindref="member">STBIDEF</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><ref refid="stb__image_8h_1af946583656a362a316b40c0421c20561" kindref="member">stbi_ldr_to_hdr_scale</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>scale);</highlight></codeline>
<codeline lineno="473"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>STBI_NO_LINEAR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="474"><highlight class="normal"></highlight></codeline>
<codeline lineno="475"><highlight class="normal"></highlight><highlight class="comment">//<sp/>stbi_is_hdr<sp/>is<sp/>always<sp/>defined,<sp/>but<sp/>always<sp/>returns<sp/>false<sp/>if<sp/>STBI_NO_HDR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="476" refid="stb__image_8h_1af0e94f316fe1848f632517ca3c11d077" refkind="member"><highlight class="normal"><ref refid="stb__image_8h_1a2d9ec9850cd12aefe7641b456266a4c2" kindref="member">STBIDEF</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="stb__image_8h_1af0e94f316fe1848f632517ca3c11d077" kindref="member">stbi_is_hdr_from_callbacks</ref>(<ref refid="structstbi__io__callbacks" kindref="compound">stbi_io_callbacks</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*clbk,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*user);</highlight></codeline>
<codeline lineno="477" refid="stb__image_8h_1a5cbc6f5cbb3b2d0d87ee959fcee9d23e" refkind="member"><highlight class="normal"><ref refid="stb__image_8h_1a2d9ec9850cd12aefe7641b456266a4c2" kindref="member">STBIDEF</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="stb__image_8h_1a5cbc6f5cbb3b2d0d87ee959fcee9d23e" kindref="member">stbi_is_hdr_from_memory</ref>(<ref refid="stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d" kindref="member">stbi_uc</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*buffer,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>len);</highlight></codeline>
<codeline lineno="478"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>STBI_NO_STDIO</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="479" refid="stb__image_8h_1ae70f9a302f7e87fd971075e7f758d55c" refkind="member"><highlight class="normal"><ref refid="stb__image_8h_1a2d9ec9850cd12aefe7641b456266a4c2" kindref="member">STBIDEF</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stb__image_8h_1ae70f9a302f7e87fd971075e7f758d55c" kindref="member">stbi_is_hdr</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*filename);</highlight></codeline>
<codeline lineno="480" refid="stb__image_8h_1aaf10d41631e1e9214fde1688bdbd8524" refkind="member"><highlight class="normal"><ref refid="stb__image_8h_1a2d9ec9850cd12aefe7641b456266a4c2" kindref="member">STBIDEF</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stb__image_8h_1aaf10d41631e1e9214fde1688bdbd8524" kindref="member">stbi_is_hdr_from_file</ref>(FILE<sp/>*f);</highlight></codeline>
<codeline lineno="481"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>STBI_NO_STDIO</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="482"><highlight class="normal"></highlight></codeline>
<codeline lineno="483"><highlight class="normal"></highlight></codeline>
<codeline lineno="484"><highlight class="normal"></highlight><highlight class="comment">//<sp/>get<sp/>a<sp/>VERY<sp/>brief<sp/>reason<sp/>for<sp/>failure</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="485"><highlight class="normal"></highlight><highlight class="comment">//<sp/>on<sp/>most<sp/>compilers<sp/>(and<sp/>ALL<sp/>modern<sp/>mainstream<sp/>compilers)<sp/>this<sp/>is<sp/>threadsafe</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="486" refid="stb__image_8h_1aa874b3ba909f3281d499894909678336" refkind="member"><highlight class="normal"><ref refid="stb__image_8h_1a2d9ec9850cd12aefe7641b456266a4c2" kindref="member">STBIDEF</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="stb__image_8h_1aa874b3ba909f3281d499894909678336" kindref="member">stbi_failure_reason</ref><sp/><sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="487"><highlight class="normal"></highlight></codeline>
<codeline lineno="488"><highlight class="normal"></highlight><highlight class="comment">//<sp/>free<sp/>the<sp/>loaded<sp/>image<sp/>--<sp/>this<sp/>is<sp/>just<sp/>free()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="489" refid="stb__image_8h_1ad3e11bb44412a7ba348acfbad09caacb" refkind="member"><highlight class="normal"><ref refid="stb__image_8h_1a2d9ec9850cd12aefe7641b456266a4c2" kindref="member">STBIDEF</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><ref refid="stb__image_8h_1ad3e11bb44412a7ba348acfbad09caacb" kindref="member">stbi_image_free</ref><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*retval_from_stbi_load);</highlight></codeline>
<codeline lineno="490"><highlight class="normal"></highlight></codeline>
<codeline lineno="491"><highlight class="normal"></highlight><highlight class="comment">//<sp/>get<sp/>image<sp/>dimensions<sp/>&amp;<sp/>components<sp/>without<sp/>fully<sp/>decoding</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="492" refid="stb__image_8h_1acfef077febce3bc3f1f339de478f3315" refkind="member"><highlight class="normal"><ref refid="stb__image_8h_1a2d9ec9850cd12aefe7641b456266a4c2" kindref="member">STBIDEF</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stb__image_8h_1acfef077febce3bc3f1f339de478f3315" kindref="member">stbi_info_from_memory</ref>(<ref refid="stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d" kindref="member">stbi_uc</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*buffer,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>len,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*x,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*y,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*comp);</highlight></codeline>
<codeline lineno="493" refid="stb__image_8h_1a86291c64cb663f41a34647d5e1abf363" refkind="member"><highlight class="normal"><ref refid="stb__image_8h_1a2d9ec9850cd12aefe7641b456266a4c2" kindref="member">STBIDEF</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stb__image_8h_1a86291c64cb663f41a34647d5e1abf363" kindref="member">stbi_info_from_callbacks</ref>(<ref refid="structstbi__io__callbacks" kindref="compound">stbi_io_callbacks</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*clbk,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*user,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*x,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*y,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*comp);</highlight></codeline>
<codeline lineno="494" refid="stb__image_8h_1a548d486e07e0eb95671cb200d3a9530f" refkind="member"><highlight class="normal"><ref refid="stb__image_8h_1a2d9ec9850cd12aefe7641b456266a4c2" kindref="member">STBIDEF</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stb__image_8h_1a548d486e07e0eb95671cb200d3a9530f" kindref="member">stbi_is_16_bit_from_memory</ref>(<ref refid="stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d" kindref="member">stbi_uc</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*buffer,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>len);</highlight></codeline>
<codeline lineno="495" refid="stb__image_8h_1a990e0e38ab6e600bd9cbf5d30abd2f8f" refkind="member"><highlight class="normal"><ref refid="stb__image_8h_1a2d9ec9850cd12aefe7641b456266a4c2" kindref="member">STBIDEF</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stb__image_8h_1a990e0e38ab6e600bd9cbf5d30abd2f8f" kindref="member">stbi_is_16_bit_from_callbacks</ref>(<ref refid="structstbi__io__callbacks" kindref="compound">stbi_io_callbacks</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*clbk,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*user);</highlight></codeline>
<codeline lineno="496"><highlight class="normal"></highlight></codeline>
<codeline lineno="497"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>STBI_NO_STDIO</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="498" refid="stb__image_8h_1aede708cca1304520b2afcf4d5eb61d70" refkind="member"><highlight class="normal"><ref refid="stb__image_8h_1a2d9ec9850cd12aefe7641b456266a4c2" kindref="member">STBIDEF</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stb__image_8h_1aede708cca1304520b2afcf4d5eb61d70" kindref="member">stbi_info</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*filename,<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*x,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*y,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*comp);</highlight></codeline>
<codeline lineno="499" refid="stb__image_8h_1a28abedef4a0a93909332080df6be0021" refkind="member"><highlight class="normal"><ref refid="stb__image_8h_1a2d9ec9850cd12aefe7641b456266a4c2" kindref="member">STBIDEF</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stb__image_8h_1a28abedef4a0a93909332080df6be0021" kindref="member">stbi_info_from_file</ref><sp/><sp/><sp/><sp/><sp/>(FILE<sp/>*f,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*x,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*y,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*comp);</highlight></codeline>
<codeline lineno="500" refid="stb__image_8h_1a7d9af55a35382c011cc186f7b62c00af" refkind="member"><highlight class="normal"><ref refid="stb__image_8h_1a2d9ec9850cd12aefe7641b456266a4c2" kindref="member">STBIDEF</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stb__image_8h_1a7d9af55a35382c011cc186f7b62c00af" kindref="member">stbi_is_16_bit</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*filename);</highlight></codeline>
<codeline lineno="501" refid="stb__image_8h_1a42fa266b80bfde22a0781ba2112d1c62" refkind="member"><highlight class="normal"><ref refid="stb__image_8h_1a2d9ec9850cd12aefe7641b456266a4c2" kindref="member">STBIDEF</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stb__image_8h_1a42fa266b80bfde22a0781ba2112d1c62" kindref="member">stbi_is_16_bit_from_file</ref>(FILE<sp/>*f);</highlight></codeline>
<codeline lineno="502"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="503"><highlight class="normal"></highlight></codeline>
<codeline lineno="504"><highlight class="normal"></highlight></codeline>
<codeline lineno="505"><highlight class="normal"></highlight></codeline>
<codeline lineno="506"><highlight class="normal"></highlight><highlight class="comment">//<sp/>for<sp/>image<sp/>formats<sp/>that<sp/>explicitly<sp/>notate<sp/>that<sp/>they<sp/>have<sp/>premultiplied<sp/>alpha,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="507"><highlight class="normal"></highlight><highlight class="comment">//<sp/>we<sp/>just<sp/>return<sp/>the<sp/>colors<sp/>as<sp/>stored<sp/>in<sp/>the<sp/>file.<sp/>set<sp/>this<sp/>flag<sp/>to<sp/>force</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="508"><highlight class="normal"></highlight><highlight class="comment">//<sp/>unpremultiplication.<sp/>results<sp/>are<sp/>undefined<sp/>if<sp/>the<sp/>unpremultiply<sp/>overflow.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="509" refid="stb__image_8h_1a3f02e0053e1c8d08a3ed436e6a82c7c9" refkind="member"><highlight class="normal"><ref refid="stb__image_8h_1a2d9ec9850cd12aefe7641b456266a4c2" kindref="member">STBIDEF</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="stb__image_8h_1a3f02e0053e1c8d08a3ed436e6a82c7c9" kindref="member">stbi_set_unpremultiply_on_load</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>flag_true_if_should_unpremultiply);</highlight></codeline>
<codeline lineno="510"><highlight class="normal"></highlight></codeline>
<codeline lineno="511"><highlight class="normal"></highlight><highlight class="comment">//<sp/>indicate<sp/>whether<sp/>we<sp/>should<sp/>process<sp/>iphone<sp/>images<sp/>back<sp/>to<sp/>canonical<sp/>format,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="512"><highlight class="normal"></highlight><highlight class="comment">//<sp/>or<sp/>just<sp/>pass<sp/>them<sp/>through<sp/>&quot;as-is&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="513" refid="stb__image_8h_1a23525ef2b882f3de426b47ecf8d9151b" refkind="member"><highlight class="normal"><ref refid="stb__image_8h_1a2d9ec9850cd12aefe7641b456266a4c2" kindref="member">STBIDEF</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="stb__image_8h_1a23525ef2b882f3de426b47ecf8d9151b" kindref="member">stbi_convert_iphone_png_to_rgb</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>flag_true_if_should_convert);</highlight></codeline>
<codeline lineno="514"><highlight class="normal"></highlight></codeline>
<codeline lineno="515"><highlight class="normal"></highlight><highlight class="comment">//<sp/>flip<sp/>the<sp/>image<sp/>vertically,<sp/>so<sp/>the<sp/>first<sp/>pixel<sp/>in<sp/>the<sp/>output<sp/>array<sp/>is<sp/>the<sp/>bottom<sp/>left</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="516" refid="stb__image_8h_1ab89c177fc52f1bb2dc1c05e48129a0a4" refkind="member"><highlight class="normal"><ref refid="stb__image_8h_1a2d9ec9850cd12aefe7641b456266a4c2" kindref="member">STBIDEF</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="stb__image_8h_1ab89c177fc52f1bb2dc1c05e48129a0a4" kindref="member">stbi_set_flip_vertically_on_load</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>flag_true_if_should_flip);</highlight></codeline>
<codeline lineno="517"><highlight class="normal"></highlight></codeline>
<codeline lineno="518"><highlight class="normal"></highlight><highlight class="comment">//<sp/>as<sp/>above,<sp/>but<sp/>only<sp/>applies<sp/>to<sp/>images<sp/>loaded<sp/>on<sp/>the<sp/>thread<sp/>that<sp/>calls<sp/>the<sp/>function</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="519"><highlight class="normal"></highlight><highlight class="comment">//<sp/>this<sp/>function<sp/>is<sp/>only<sp/>available<sp/>if<sp/>your<sp/>compiler<sp/>supports<sp/>thread-local<sp/>variables;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="520"><highlight class="normal"></highlight><highlight class="comment">//<sp/>calling<sp/>it<sp/>will<sp/>fail<sp/>to<sp/>link<sp/>if<sp/>your<sp/>compiler<sp/>doesn&apos;t</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="521" refid="stb__image_8h_1acf48dffaa1b2bb00f5a8d9af697c6aca" refkind="member"><highlight class="normal"><ref refid="stb__image_8h_1a2d9ec9850cd12aefe7641b456266a4c2" kindref="member">STBIDEF</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="stb__image_8h_1acf48dffaa1b2bb00f5a8d9af697c6aca" kindref="member">stbi_set_unpremultiply_on_load_thread</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>flag_true_if_should_unpremultiply);</highlight></codeline>
<codeline lineno="522" refid="stb__image_8h_1aff26696e30b62a40dd00bc12415343f6" refkind="member"><highlight class="normal"><ref refid="stb__image_8h_1a2d9ec9850cd12aefe7641b456266a4c2" kindref="member">STBIDEF</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="stb__image_8h_1aff26696e30b62a40dd00bc12415343f6" kindref="member">stbi_convert_iphone_png_to_rgb_thread</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>flag_true_if_should_convert);</highlight></codeline>
<codeline lineno="523" refid="stb__image_8h_1ad683202a3f6ec89729b5ad9220ae98ee" refkind="member"><highlight class="normal"><ref refid="stb__image_8h_1a2d9ec9850cd12aefe7641b456266a4c2" kindref="member">STBIDEF</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="stb__image_8h_1ad683202a3f6ec89729b5ad9220ae98ee" kindref="member">stbi_set_flip_vertically_on_load_thread</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>flag_true_if_should_flip);</highlight></codeline>
<codeline lineno="524"><highlight class="normal"></highlight></codeline>
<codeline lineno="525"><highlight class="normal"></highlight><highlight class="comment">//<sp/>ZLIB<sp/>client<sp/>-<sp/>used<sp/>by<sp/>PNG,<sp/>available<sp/>for<sp/>other<sp/>purposes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="526"><highlight class="normal"></highlight></codeline>
<codeline lineno="527" refid="stb__image_8h_1aaaa17a529bec51403cc23dc2e7c36d79" refkind="member"><highlight class="normal"><ref refid="stb__image_8h_1a2d9ec9850cd12aefe7641b456266a4c2" kindref="member">STBIDEF</ref><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="stb__image_8h_1aaaa17a529bec51403cc23dc2e7c36d79" kindref="member">stbi_zlib_decode_malloc_guesssize</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*buffer,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>len,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>initial_size,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*outlen);</highlight></codeline>
<codeline lineno="528" refid="stb__image_8h_1a038b0e741859a482b8b9d60167e54d27" refkind="member"><highlight class="normal"><ref refid="stb__image_8h_1a2d9ec9850cd12aefe7641b456266a4c2" kindref="member">STBIDEF</ref><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="stb__image_8h_1a038b0e741859a482b8b9d60167e54d27" kindref="member">stbi_zlib_decode_malloc_guesssize_headerflag</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*buffer,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>len,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>initial_size,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*outlen,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>parse_header);</highlight></codeline>
<codeline lineno="529" refid="stb__image_8h_1a4919b67b12e0e3acc5301f185ca77e2e" refkind="member"><highlight class="normal"><ref refid="stb__image_8h_1a2d9ec9850cd12aefe7641b456266a4c2" kindref="member">STBIDEF</ref><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="stb__image_8h_1a4919b67b12e0e3acc5301f185ca77e2e" kindref="member">stbi_zlib_decode_malloc</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*buffer,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>len,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*outlen);</highlight></codeline>
<codeline lineno="530" refid="stb__image_8h_1ae8447830c49bc17f8491e12c1f0ded48" refkind="member"><highlight class="normal"><ref refid="stb__image_8h_1a2d9ec9850cd12aefe7641b456266a4c2" kindref="member">STBIDEF</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><ref refid="stb__image_8h_1ae8447830c49bc17f8491e12c1f0ded48" kindref="member">stbi_zlib_decode_buffer</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*obuffer,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>olen,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*ibuffer,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ilen);</highlight></codeline>
<codeline lineno="531"><highlight class="normal"></highlight></codeline>
<codeline lineno="532" refid="stb__image_8h_1a7fbd65c83495f13f22469fe493775739" refkind="member"><highlight class="normal"><ref refid="stb__image_8h_1a2d9ec9850cd12aefe7641b456266a4c2" kindref="member">STBIDEF</ref><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="stb__image_8h_1a7fbd65c83495f13f22469fe493775739" kindref="member">stbi_zlib_decode_noheader_malloc</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*buffer,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>len,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*outlen);</highlight></codeline>
<codeline lineno="533" refid="stb__image_8h_1a0d12efc011adfff7521f3b924feb0b0e" refkind="member"><highlight class="normal"><ref refid="stb__image_8h_1a2d9ec9850cd12aefe7641b456266a4c2" kindref="member">STBIDEF</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><ref refid="stb__image_8h_1a0d12efc011adfff7521f3b924feb0b0e" kindref="member">stbi_zlib_decode_noheader_buffer</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*obuffer,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>olen,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*ibuffer,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ilen);</highlight></codeline>
<codeline lineno="534"><highlight class="normal"></highlight></codeline>
<codeline lineno="535"><highlight class="normal"></highlight></codeline>
<codeline lineno="536"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="537"><highlight class="normal">}</highlight></codeline>
<codeline lineno="538"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="539"><highlight class="normal"></highlight></codeline>
<codeline lineno="540"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="541"><highlight class="normal"></highlight><highlight class="comment">//</highlight></codeline>
<codeline lineno="543"><highlight class="comment"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>STBI_INCLUDE_STB_IMAGE_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="544"><highlight class="normal"></highlight></codeline>
<codeline lineno="545"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>STB_IMAGE_IMPLEMENTATION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="546"><highlight class="normal"></highlight></codeline>
<codeline lineno="547"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(STBI_ONLY_JPEG)<sp/>||<sp/>defined(STBI_ONLY_PNG)<sp/>||<sp/>defined(STBI_ONLY_BMP)<sp/>\</highlight></codeline>
<codeline lineno="548"><highlight class="preprocessor"><sp/><sp/>||<sp/>defined(STBI_ONLY_TGA)<sp/>||<sp/>defined(STBI_ONLY_GIF)<sp/>||<sp/>defined(STBI_ONLY_PSD)<sp/>\</highlight></codeline>
<codeline lineno="549"><highlight class="preprocessor"><sp/><sp/>||<sp/>defined(STBI_ONLY_HDR)<sp/>||<sp/>defined(STBI_ONLY_PIC)<sp/>||<sp/>defined(STBI_ONLY_PNM)<sp/>\</highlight></codeline>
<codeline lineno="550"><highlight class="preprocessor"><sp/><sp/>||<sp/>defined(STBI_ONLY_ZLIB)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="551"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#ifndef<sp/>STBI_ONLY_JPEG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="552"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#define<sp/>STBI_NO_JPEG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="553"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="554"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#ifndef<sp/>STBI_ONLY_PNG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="555"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#define<sp/>STBI_NO_PNG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="556"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="557"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#ifndef<sp/>STBI_ONLY_BMP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="558"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#define<sp/>STBI_NO_BMP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="559"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="560"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#ifndef<sp/>STBI_ONLY_PSD</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="561"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#define<sp/>STBI_NO_PSD</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="562"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="563"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#ifndef<sp/>STBI_ONLY_TGA</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="564"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#define<sp/>STBI_NO_TGA</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="565"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="566"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#ifndef<sp/>STBI_ONLY_GIF</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="567"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#define<sp/>STBI_NO_GIF</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="568"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="569"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#ifndef<sp/>STBI_ONLY_HDR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="570"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#define<sp/>STBI_NO_HDR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="571"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="572"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#ifndef<sp/>STBI_ONLY_PIC</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="573"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#define<sp/>STBI_NO_PIC</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="574"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="575"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#ifndef<sp/>STBI_ONLY_PNM</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="576"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#define<sp/>STBI_NO_PNM</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="577"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="578"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="579"><highlight class="normal"></highlight></codeline>
<codeline lineno="580"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(STBI_NO_PNG)<sp/>&amp;&amp;<sp/>!defined(STBI_SUPPORT_ZLIB)<sp/>&amp;&amp;<sp/>!defined(STBI_NO_ZLIB)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="581"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>STBI_NO_ZLIB</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="582"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="583"><highlight class="normal"></highlight></codeline>
<codeline lineno="584"><highlight class="normal"></highlight></codeline>
<codeline lineno="585"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdarg.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="586"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stddef.h&gt;</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>ptrdiff_t<sp/>on<sp/>osx</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="587"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdlib.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="588"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="589"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;limits.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="590"><highlight class="normal"></highlight></codeline>
<codeline lineno="591"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>!defined(STBI_NO_LINEAR)<sp/>||<sp/>!defined(STBI_NO_HDR)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="592"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;math.h&gt;</highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>ldexp,<sp/>pow</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="593"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="594"><highlight class="normal"></highlight></codeline>
<codeline lineno="595"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>STBI_NO_STDIO</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="596"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="597"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="598"><highlight class="normal"></highlight></codeline>
<codeline lineno="599"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>STBI_ASSERT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="600"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;assert.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="601"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>STBI_ASSERT(x)<sp/>assert(x)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="602"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="603"><highlight class="normal"></highlight></codeline>
<codeline lineno="604"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="605"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>STBI_EXTERN<sp/>extern<sp/>&quot;C&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="606"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="607"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>STBI_EXTERN<sp/>extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="608"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="609"><highlight class="normal"></highlight></codeline>
<codeline lineno="610"><highlight class="normal"></highlight></codeline>
<codeline lineno="611"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>_MSC_VER</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="612"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="613"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#define<sp/>stbi_inline<sp/>inline</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="614"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="615"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#define<sp/>stbi_inline</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="616"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="617"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="618"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#define<sp/>stbi_inline<sp/>__forceinline</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="619"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="620"><highlight class="normal"></highlight></codeline>
<codeline lineno="621"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>STBI_NO_THREAD_LOCALS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="622"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#if<sp/>defined(__cplusplus)<sp/>&amp;&amp;<sp/><sp/>__cplusplus<sp/>&gt;=<sp/>201103L</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="623"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#define<sp/>STBI_THREAD_LOCAL<sp/><sp/><sp/><sp/><sp/><sp/><sp/>thread_local</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="624"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#elif<sp/>defined(__GNUC__)<sp/>&amp;&amp;<sp/>__GNUC__<sp/>&lt;<sp/>5</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="625"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#define<sp/>STBI_THREAD_LOCAL<sp/><sp/><sp/><sp/><sp/><sp/><sp/>__thread</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="626"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#elif<sp/>defined(_MSC_VER)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="627"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#define<sp/>STBI_THREAD_LOCAL<sp/><sp/><sp/><sp/><sp/><sp/><sp/>__declspec(thread)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="628"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#elif<sp/>defined<sp/>(__STDC_VERSION__)<sp/>&amp;&amp;<sp/>__STDC_VERSION__<sp/>&gt;=<sp/>201112L<sp/>&amp;&amp;<sp/>!defined(__STDC_NO_THREADS__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="629"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#define<sp/>STBI_THREAD_LOCAL<sp/><sp/><sp/><sp/><sp/><sp/><sp/>_Thread_local</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="630"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="631"><highlight class="normal"></highlight></codeline>
<codeline lineno="632"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#ifndef<sp/>STBI_THREAD_LOCAL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="633"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#if<sp/>defined(__GNUC__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="634"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#define<sp/>STBI_THREAD_LOCAL<sp/><sp/><sp/><sp/><sp/><sp/><sp/>__thread</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="635"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="636"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="637"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="638"><highlight class="normal"></highlight></codeline>
<codeline lineno="639"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(_MSC_VER)<sp/>||<sp/>defined(__SYMBIAN32__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="640"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>stbi__uint16;</highlight></codeline>
<codeline lineno="641"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">signed</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>stbi__int16;</highlight></codeline>
<codeline lineno="642"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/>stbi__uint32;</highlight></codeline>
<codeline lineno="643"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">signed</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/>stbi__int32;</highlight></codeline>
<codeline lineno="644"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="645"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdint.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="646"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>uint16_t<sp/>stbi__uint16;</highlight></codeline>
<codeline lineno="647"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>int16_t<sp/><sp/>stbi__int16;</highlight></codeline>
<codeline lineno="648"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>uint32_t<sp/>stbi__uint32;</highlight></codeline>
<codeline lineno="649"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>int32_t<sp/><sp/>stbi__int32;</highlight></codeline>
<codeline lineno="650"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="651"><highlight class="normal"></highlight></codeline>
<codeline lineno="652"><highlight class="normal"></highlight><highlight class="comment">//<sp/>should<sp/>produce<sp/>compiler<sp/>error<sp/>if<sp/>size<sp/>is<sp/>wrong</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="653"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>validate_uint32[</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(stbi__uint32)==4<sp/>?<sp/>1<sp/>:<sp/>-1];</highlight></codeline>
<codeline lineno="654"><highlight class="normal"></highlight></codeline>
<codeline lineno="655"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_MSC_VER</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="656"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>STBI_NOTUSED(v)<sp/><sp/>(void)(v)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="657"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="658"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>STBI_NOTUSED(v)<sp/><sp/>(void)sizeof(v)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="659"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="660"><highlight class="normal"></highlight></codeline>
<codeline lineno="661"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_MSC_VER</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="662"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>STBI_HAS_LROTL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="663"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="664"><highlight class="normal"></highlight></codeline>
<codeline lineno="665"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>STBI_HAS_LROTL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="666"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#define<sp/>stbi_lrot(x,y)<sp/><sp/>_lrotl(x,y)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="667"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="668"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#define<sp/>stbi_lrot(x,y)<sp/><sp/>(((x)<sp/>&lt;&lt;<sp/>(y))<sp/>|<sp/>((x)<sp/>&gt;&gt;<sp/>(-(y)<sp/>&amp;<sp/>31)))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="669"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="670"><highlight class="normal"></highlight></codeline>
<codeline lineno="671"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(STBI_MALLOC)<sp/>&amp;&amp;<sp/>defined(STBI_FREE)<sp/>&amp;&amp;<sp/>(defined(STBI_REALLOC)<sp/>||<sp/>defined(STBI_REALLOC_SIZED))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="672"><highlight class="normal"></highlight><highlight class="comment">//<sp/>ok</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="673"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>!defined(STBI_MALLOC)<sp/>&amp;&amp;<sp/>!defined(STBI_FREE)<sp/>&amp;&amp;<sp/>!defined(STBI_REALLOC)<sp/>&amp;&amp;<sp/>!defined(STBI_REALLOC_SIZED)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="674"><highlight class="normal"></highlight><highlight class="comment">//<sp/>ok</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="675"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="676"><highlight class="normal"></highlight><highlight class="preprocessor">#error<sp/>&quot;Must<sp/>define<sp/>all<sp/>or<sp/>none<sp/>of<sp/>STBI_MALLOC,<sp/>STBI_FREE,<sp/>and<sp/>STBI_REALLOC<sp/>(or<sp/>STBI_REALLOC_SIZED).&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="677"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="678"><highlight class="normal"></highlight></codeline>
<codeline lineno="679"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>STBI_MALLOC</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="680"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>STBI_MALLOC(sz)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>malloc(sz)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="681"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>STBI_REALLOC(p,newsz)<sp/><sp/><sp/><sp/><sp/>realloc(p,newsz)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="682"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>STBI_FREE(p)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(p)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="683"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="684"><highlight class="normal"></highlight></codeline>
<codeline lineno="685"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>STBI_REALLOC_SIZED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="686"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>STBI_REALLOC_SIZED(p,oldsz,newsz)<sp/>STBI_REALLOC(p,newsz)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="687"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="688"><highlight class="normal"></highlight></codeline>
<codeline lineno="689"><highlight class="normal"></highlight><highlight class="comment">//<sp/>x86/x64<sp/>detection</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="690"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__x86_64__)<sp/>||<sp/>defined(_M_X64)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="691"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>STBI__X64_TARGET</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="692"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>defined(__i386)<sp/>||<sp/>defined(_M_IX86)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="693"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>STBI__X86_TARGET</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="694"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="695"><highlight class="normal"></highlight></codeline>
<codeline lineno="696"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__GNUC__)<sp/>&amp;&amp;<sp/>defined(STBI__X86_TARGET)<sp/>&amp;&amp;<sp/>!defined(__SSE2__)<sp/>&amp;&amp;<sp/>!defined(STBI_NO_SIMD)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="697"><highlight class="normal"></highlight><highlight class="comment">//<sp/>gcc<sp/>doesn&apos;t<sp/>support<sp/>sse2<sp/>intrinsics<sp/>unless<sp/>you<sp/>compile<sp/>with<sp/>-msse2,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="698"><highlight class="normal"></highlight><highlight class="comment">//<sp/>which<sp/>in<sp/>turn<sp/>means<sp/>it<sp/>gets<sp/>to<sp/>use<sp/>SSE2<sp/>everywhere.<sp/>This<sp/>is<sp/>unfortunate,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="699"><highlight class="normal"></highlight><highlight class="comment">//<sp/>but<sp/>previous<sp/>attempts<sp/>to<sp/>provide<sp/>the<sp/>SSE2<sp/>functions<sp/>with<sp/>runtime</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="700"><highlight class="normal"></highlight><highlight class="comment">//<sp/>detection<sp/>caused<sp/>numerous<sp/>issues.<sp/>The<sp/>way<sp/>architecture<sp/>extensions<sp/>are</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="701"><highlight class="normal"></highlight><highlight class="comment">//<sp/>exposed<sp/>in<sp/>GCC/Clang<sp/>is,<sp/>sadly,<sp/>not<sp/>really<sp/>suited<sp/>for<sp/>one-file<sp/>libs.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="702"><highlight class="normal"></highlight><highlight class="comment">//<sp/>New<sp/>behavior:<sp/>if<sp/>compiled<sp/>with<sp/>-msse2,<sp/>we<sp/>use<sp/>SSE2<sp/>without<sp/>any</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="703"><highlight class="normal"></highlight><highlight class="comment">//<sp/>detection;<sp/>if<sp/>not,<sp/>we<sp/>don&apos;t<sp/>use<sp/>it<sp/>at<sp/>all.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="704"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>STBI_NO_SIMD</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="705"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="706"><highlight class="normal"></highlight></codeline>
<codeline lineno="707"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__MINGW32__)<sp/>&amp;&amp;<sp/>defined(STBI__X86_TARGET)<sp/>&amp;&amp;<sp/>!defined(STBI_MINGW_ENABLE_SSE2)<sp/>&amp;&amp;<sp/>!defined(STBI_NO_SIMD)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="708"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Note<sp/>that<sp/>__MINGW32__<sp/>doesn&apos;t<sp/>actually<sp/>mean<sp/>32-bit,<sp/>so<sp/>we<sp/>have<sp/>to<sp/>avoid<sp/>STBI__X64_TARGET</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="709"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="710"><highlight class="normal"></highlight><highlight class="comment">//<sp/>32-bit<sp/>MinGW<sp/>wants<sp/>ESP<sp/>to<sp/>be<sp/>16-byte<sp/>aligned,<sp/>but<sp/>this<sp/>is<sp/>not<sp/>in<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="711"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Windows<sp/>ABI<sp/>and<sp/>VC++<sp/>as<sp/>well<sp/>as<sp/>Windows<sp/>DLLs<sp/>don&apos;t<sp/>maintain<sp/>that<sp/>invariant.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="712"><highlight class="normal"></highlight><highlight class="comment">//<sp/>As<sp/>a<sp/>result,<sp/>enabling<sp/>SSE2<sp/>on<sp/>32-bit<sp/>MinGW<sp/>is<sp/>dangerous<sp/>when<sp/>not</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="713"><highlight class="normal"></highlight><highlight class="comment">//<sp/>simultaneously<sp/>enabling<sp/>&quot;-mstackrealign&quot;.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="714"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="715"><highlight class="normal"></highlight><highlight class="comment">//<sp/>See<sp/>https://github.com/nothings/stb/issues/81<sp/>for<sp/>more<sp/>information.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="716"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="717"><highlight class="normal"></highlight><highlight class="comment">//<sp/>So<sp/>default<sp/>to<sp/>no<sp/>SSE2<sp/>on<sp/>32-bit<sp/>MinGW.<sp/>If<sp/>you&apos;ve<sp/>read<sp/>this<sp/>far<sp/>and<sp/>added</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="718"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-mstackrealign<sp/>to<sp/>your<sp/>build<sp/>settings,<sp/>feel<sp/>free<sp/>to<sp/>#define<sp/>STBI_MINGW_ENABLE_SSE2.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="719"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>STBI_NO_SIMD</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="720"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="721"><highlight class="normal"></highlight></codeline>
<codeline lineno="722"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>!defined(STBI_NO_SIMD)<sp/>&amp;&amp;<sp/>(defined(STBI__X86_TARGET)<sp/>||<sp/>defined(STBI__X64_TARGET))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="723"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>STBI_SSE2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="724"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;emmintrin.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="725"><highlight class="normal"></highlight></codeline>
<codeline lineno="726"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_MSC_VER</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="727"><highlight class="normal"></highlight></codeline>
<codeline lineno="728"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>_MSC_VER<sp/>&gt;=<sp/>1400<sp/><sp/></highlight><highlight class="comment">//<sp/>not<sp/>VC6</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="729"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;intrin.h&gt;</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>__cpuid</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="730"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>stbi__cpuid3(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="731"><highlight class="normal">{</highlight></codeline>
<codeline lineno="732"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>info[4];</highlight></codeline>
<codeline lineno="733"><highlight class="normal"><sp/><sp/><sp/>__cpuid(info,1);</highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>info[3];</highlight></codeline>
<codeline lineno="735"><highlight class="normal">}</highlight></codeline>
<codeline lineno="736"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="737"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>stbi__cpuid3(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="738"><highlight class="normal">{</highlight></codeline>
<codeline lineno="739"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>res;</highlight></codeline>
<codeline lineno="740"><highlight class="normal"><sp/><sp/><sp/>__asm<sp/>{</highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mov<sp/><sp/>eax,1</highlight></codeline>
<codeline lineno="742"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cpuid</highlight></codeline>
<codeline lineno="743"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mov<sp/><sp/>res,edx</highlight></codeline>
<codeline lineno="744"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="745"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>res;</highlight></codeline>
<codeline lineno="746"><highlight class="normal">}</highlight></codeline>
<codeline lineno="747"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="748"><highlight class="normal"></highlight></codeline>
<codeline lineno="749"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>STBI_SIMD_ALIGN(type,<sp/>name)<sp/>__declspec(align(16))<sp/>type<sp/>name</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="750"><highlight class="normal"></highlight></codeline>
<codeline lineno="751"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>!defined(STBI_NO_JPEG)<sp/>&amp;&amp;<sp/>defined(STBI_SSE2)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="752"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>stbi__sse2_available(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="753"><highlight class="normal">{</highlight></codeline>
<codeline lineno="754"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>info3<sp/>=<sp/>stbi__cpuid3();</highlight></codeline>
<codeline lineno="755"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>((info3<sp/>&gt;&gt;<sp/>26)<sp/>&amp;<sp/>1)<sp/>!=<sp/>0;</highlight></codeline>
<codeline lineno="756"><highlight class="normal">}</highlight></codeline>
<codeline lineno="757"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="758"><highlight class="normal"></highlight></codeline>
<codeline lineno="759"><highlight class="normal"></highlight><highlight class="preprocessor">#else<sp/></highlight><highlight class="comment">//<sp/>assume<sp/>GCC-style<sp/>if<sp/>not<sp/>VC++</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="760"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>STBI_SIMD_ALIGN(type,<sp/>name)<sp/>type<sp/>name<sp/>__attribute__((aligned(16)))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="761"><highlight class="normal"></highlight></codeline>
<codeline lineno="762"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>!defined(STBI_NO_JPEG)<sp/>&amp;&amp;<sp/>defined(STBI_SSE2)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="763"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>stbi__sse2_available(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="764"><highlight class="normal">{</highlight></codeline>
<codeline lineno="765"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>we&apos;re<sp/>even<sp/>attempting<sp/>to<sp/>compile<sp/>this<sp/>on<sp/>GCC/Clang,<sp/>that<sp/>means</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="766"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-msse2<sp/>is<sp/>on,<sp/>which<sp/>means<sp/>the<sp/>compiler<sp/>is<sp/>allowed<sp/>to<sp/>use<sp/>SSE2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="767"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>instructions<sp/>at<sp/>will,<sp/>and<sp/>so<sp/>are<sp/>we.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="768"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="769"><highlight class="normal">}</highlight></codeline>
<codeline lineno="770"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="771"><highlight class="normal"></highlight></codeline>
<codeline lineno="772"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="773"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="774"><highlight class="normal"></highlight></codeline>
<codeline lineno="775"><highlight class="normal"></highlight><highlight class="comment">//<sp/>ARM<sp/>NEON</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="776"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(STBI_NO_SIMD)<sp/>&amp;&amp;<sp/>defined(STBI_NEON)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="777"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>STBI_NEON</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="778"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="779"><highlight class="normal"></highlight></codeline>
<codeline lineno="780"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>STBI_NEON</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="781"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;arm_neon.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="782"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_MSC_VER</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="783"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>STBI_SIMD_ALIGN(type,<sp/>name)<sp/>__declspec(align(16))<sp/>type<sp/>name</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="784"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="785"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>STBI_SIMD_ALIGN(type,<sp/>name)<sp/>type<sp/>name<sp/>__attribute__((aligned(16)))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="786"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="787"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="788"><highlight class="normal"></highlight></codeline>
<codeline lineno="789"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>STBI_SIMD_ALIGN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="790"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>STBI_SIMD_ALIGN(type,<sp/>name)<sp/>type<sp/>name</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="791"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="792"><highlight class="normal"></highlight></codeline>
<codeline lineno="793"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>STBI_MAX_DIMENSIONS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="794"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>STBI_MAX_DIMENSIONS<sp/>(1<sp/>&lt;&lt;<sp/>24)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="795"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="796"><highlight class="normal"></highlight></codeline>
<codeline lineno="798"><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="799"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>stbi__context<sp/>struct<sp/>and<sp/>start_xxx<sp/>functions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="800"><highlight class="normal"></highlight></codeline>
<codeline lineno="801"><highlight class="normal"></highlight><highlight class="comment">//<sp/>stbi__context<sp/>structure<sp/>is<sp/>our<sp/>basic<sp/>context<sp/>used<sp/>by<sp/>all<sp/>images,<sp/>so<sp/>it</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="802"><highlight class="normal"></highlight><highlight class="comment">//<sp/>contains<sp/>all<sp/>the<sp/>IO<sp/>context,<sp/>plus<sp/>some<sp/>basic<sp/>image<sp/>information</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="803"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="804"><highlight class="normal">{</highlight></codeline>
<codeline lineno="805"><highlight class="normal"><sp/><sp/><sp/>stbi__uint32<sp/>img_x,<sp/>img_y;</highlight></codeline>
<codeline lineno="806"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>img_n,<sp/>img_out_n;</highlight></codeline>
<codeline lineno="807"><highlight class="normal"></highlight></codeline>
<codeline lineno="808"><highlight class="normal"><sp/><sp/><sp/><ref refid="structstbi__io__callbacks" kindref="compound">stbi_io_callbacks</ref><sp/>io;</highlight></codeline>
<codeline lineno="809"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*io_user_data;</highlight></codeline>
<codeline lineno="810"><highlight class="normal"></highlight></codeline>
<codeline lineno="811"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>read_from_callbacks;</highlight></codeline>
<codeline lineno="812"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>buflen;</highlight></codeline>
<codeline lineno="813"><highlight class="normal"><sp/><sp/><sp/><ref refid="stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d" kindref="member">stbi_uc</ref><sp/>buffer_start[128];</highlight></codeline>
<codeline lineno="814"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>callback_already_read;</highlight></codeline>
<codeline lineno="815"><highlight class="normal"></highlight></codeline>
<codeline lineno="816"><highlight class="normal"><sp/><sp/><sp/><ref refid="stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d" kindref="member">stbi_uc</ref><sp/>*img_buffer,<sp/>*img_buffer_end;</highlight></codeline>
<codeline lineno="817"><highlight class="normal"><sp/><sp/><sp/><ref refid="stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d" kindref="member">stbi_uc</ref><sp/>*img_buffer_original,<sp/>*img_buffer_original_end;</highlight></codeline>
<codeline lineno="818"><highlight class="normal">}<sp/>stbi__context;</highlight></codeline>
<codeline lineno="819"><highlight class="normal"></highlight></codeline>
<codeline lineno="820"><highlight class="normal"></highlight></codeline>
<codeline lineno="821"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>stbi__refill_buffer(stbi__context<sp/>*s);</highlight></codeline>
<codeline lineno="822"><highlight class="normal"></highlight></codeline>
<codeline lineno="823"><highlight class="normal"></highlight><highlight class="comment">//<sp/>initialize<sp/>a<sp/>memory-decode<sp/>context</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="824"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>stbi__start_mem(stbi__context<sp/>*s,<sp/><ref refid="stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d" kindref="member">stbi_uc</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*buffer,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>len)</highlight></codeline>
<codeline lineno="825"><highlight class="normal">{</highlight></codeline>
<codeline lineno="826"><highlight class="normal"><sp/><sp/><sp/>s-&gt;io.read<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="827"><highlight class="normal"><sp/><sp/><sp/>s-&gt;read_from_callbacks<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="828"><highlight class="normal"><sp/><sp/><sp/>s-&gt;callback_already_read<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="829"><highlight class="normal"><sp/><sp/><sp/>s-&gt;img_buffer<sp/>=<sp/>s-&gt;img_buffer_original<sp/>=<sp/>(<ref refid="stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d" kindref="member">stbi_uc</ref><sp/>*)<sp/>buffer;</highlight></codeline>
<codeline lineno="830"><highlight class="normal"><sp/><sp/><sp/>s-&gt;img_buffer_end<sp/>=<sp/>s-&gt;img_buffer_original_end<sp/>=<sp/>(<ref refid="stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d" kindref="member">stbi_uc</ref><sp/>*)<sp/>buffer+len;</highlight></codeline>
<codeline lineno="831"><highlight class="normal">}</highlight></codeline>
<codeline lineno="832"><highlight class="normal"></highlight></codeline>
<codeline lineno="833"><highlight class="normal"></highlight><highlight class="comment">//<sp/>initialize<sp/>a<sp/>callback-based<sp/>context</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="834"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>stbi__start_callbacks(stbi__context<sp/>*s,<sp/><ref refid="structstbi__io__callbacks" kindref="compound">stbi_io_callbacks</ref><sp/>*c,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*user)</highlight></codeline>
<codeline lineno="835"><highlight class="normal">{</highlight></codeline>
<codeline lineno="836"><highlight class="normal"><sp/><sp/><sp/>s-&gt;io<sp/>=<sp/>*c;</highlight></codeline>
<codeline lineno="837"><highlight class="normal"><sp/><sp/><sp/>s-&gt;io_user_data<sp/>=<sp/>user;</highlight></codeline>
<codeline lineno="838"><highlight class="normal"><sp/><sp/><sp/>s-&gt;buflen<sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(s-&gt;buffer_start);</highlight></codeline>
<codeline lineno="839"><highlight class="normal"><sp/><sp/><sp/>s-&gt;read_from_callbacks<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="840"><highlight class="normal"><sp/><sp/><sp/>s-&gt;callback_already_read<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="841"><highlight class="normal"><sp/><sp/><sp/>s-&gt;img_buffer<sp/>=<sp/>s-&gt;img_buffer_original<sp/>=<sp/>s-&gt;buffer_start;</highlight></codeline>
<codeline lineno="842"><highlight class="normal"><sp/><sp/><sp/>stbi__refill_buffer(s);</highlight></codeline>
<codeline lineno="843"><highlight class="normal"><sp/><sp/><sp/>s-&gt;img_buffer_original_end<sp/>=<sp/>s-&gt;img_buffer_end;</highlight></codeline>
<codeline lineno="844"><highlight class="normal">}</highlight></codeline>
<codeline lineno="845"><highlight class="normal"></highlight></codeline>
<codeline lineno="846"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>STBI_NO_STDIO</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="847"><highlight class="normal"></highlight></codeline>
<codeline lineno="848"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>stbi__stdio_read(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*user,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*data,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>size)</highlight></codeline>
<codeline lineno="849"><highlight class="normal">{</highlight></codeline>
<codeline lineno="850"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<sp/>fread(data,1,size,(FILE*)<sp/>user);</highlight></codeline>
<codeline lineno="851"><highlight class="normal">}</highlight></codeline>
<codeline lineno="852"><highlight class="normal"></highlight></codeline>
<codeline lineno="853"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>stbi__stdio_skip(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*user,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n)</highlight></codeline>
<codeline lineno="854"><highlight class="normal">{</highlight></codeline>
<codeline lineno="855"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ch;</highlight></codeline>
<codeline lineno="856"><highlight class="normal"><sp/><sp/><sp/>fseek((FILE*)<sp/>user,<sp/>n,<sp/>SEEK_CUR);</highlight></codeline>
<codeline lineno="857"><highlight class="normal"><sp/><sp/><sp/>ch<sp/>=<sp/>fgetc((FILE*)<sp/>user);<sp/><sp/></highlight><highlight class="comment">/*<sp/>have<sp/>to<sp/>read<sp/>a<sp/>byte<sp/>to<sp/>reset<sp/>feof()&apos;s<sp/>flag<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="858"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ch<sp/>!=<sp/>EOF)<sp/>{</highlight></codeline>
<codeline lineno="859"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ungetc(ch,<sp/>(FILE<sp/>*)<sp/>user);<sp/><sp/></highlight><highlight class="comment">/*<sp/>push<sp/>byte<sp/>back<sp/>onto<sp/>stream<sp/>if<sp/>valid.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="860"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="861"><highlight class="normal">}</highlight></codeline>
<codeline lineno="862"><highlight class="normal"></highlight></codeline>
<codeline lineno="863"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>stbi__stdio_eof(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*user)</highlight></codeline>
<codeline lineno="864"><highlight class="normal">{</highlight></codeline>
<codeline lineno="865"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>feof((FILE*)<sp/>user)<sp/>||<sp/>ferror((FILE<sp/>*)<sp/>user);</highlight></codeline>
<codeline lineno="866"><highlight class="normal">}</highlight></codeline>
<codeline lineno="867"><highlight class="normal"></highlight></codeline>
<codeline lineno="868"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="structstbi__io__callbacks" kindref="compound">stbi_io_callbacks</ref><sp/>stbi__stdio_callbacks<sp/>=</highlight></codeline>
<codeline lineno="869"><highlight class="normal">{</highlight></codeline>
<codeline lineno="870"><highlight class="normal"><sp/><sp/><sp/>stbi__stdio_read,</highlight></codeline>
<codeline lineno="871"><highlight class="normal"><sp/><sp/><sp/>stbi__stdio_skip,</highlight></codeline>
<codeline lineno="872"><highlight class="normal"><sp/><sp/><sp/>stbi__stdio_eof,</highlight></codeline>
<codeline lineno="873"><highlight class="normal">};</highlight></codeline>
<codeline lineno="874"><highlight class="normal"></highlight></codeline>
<codeline lineno="875"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>stbi__start_file(stbi__context<sp/>*s,<sp/>FILE<sp/>*f)</highlight></codeline>
<codeline lineno="876"><highlight class="normal">{</highlight></codeline>
<codeline lineno="877"><highlight class="normal"><sp/><sp/><sp/>stbi__start_callbacks(s,<sp/>&amp;stbi__stdio_callbacks,<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)<sp/>f);</highlight></codeline>
<codeline lineno="878"><highlight class="normal">}</highlight></codeline>
<codeline lineno="879"><highlight class="normal"></highlight></codeline>
<codeline lineno="880"><highlight class="normal"></highlight><highlight class="comment">//static<sp/>void<sp/>stop_file(stbi__context<sp/>*s)<sp/>{<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="881"><highlight class="normal"></highlight></codeline>
<codeline lineno="882"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>!STBI_NO_STDIO</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="883"><highlight class="normal"></highlight></codeline>
<codeline lineno="884"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>stbi__rewind(stbi__context<sp/>*s)</highlight></codeline>
<codeline lineno="885"><highlight class="normal">{</highlight></codeline>
<codeline lineno="886"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>conceptually<sp/>rewind<sp/>SHOULD<sp/>rewind<sp/>to<sp/>the<sp/>beginning<sp/>of<sp/>the<sp/>stream,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="887"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>but<sp/>we<sp/>just<sp/>rewind<sp/>to<sp/>the<sp/>beginning<sp/>of<sp/>the<sp/>initial<sp/>buffer,<sp/>because</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="888"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>we<sp/>only<sp/>use<sp/>it<sp/>after<sp/>doing<sp/>&apos;test&apos;,<sp/>which<sp/>only<sp/>ever<sp/>looks<sp/>at<sp/>at<sp/>most<sp/>92<sp/>bytes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="889"><highlight class="normal"><sp/><sp/><sp/>s-&gt;img_buffer<sp/>=<sp/>s-&gt;img_buffer_original;</highlight></codeline>
<codeline lineno="890"><highlight class="normal"><sp/><sp/><sp/>s-&gt;img_buffer_end<sp/>=<sp/>s-&gt;img_buffer_original_end;</highlight></codeline>
<codeline lineno="891"><highlight class="normal">}</highlight></codeline>
<codeline lineno="892"><highlight class="normal"></highlight></codeline>
<codeline lineno="893"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="894"><highlight class="normal">{</highlight></codeline>
<codeline lineno="895"><highlight class="normal"><sp/><sp/><sp/>STBI_ORDER_RGB,</highlight></codeline>
<codeline lineno="896"><highlight class="normal"><sp/><sp/><sp/>STBI_ORDER_BGR</highlight></codeline>
<codeline lineno="897"><highlight class="normal">};</highlight></codeline>
<codeline lineno="898"><highlight class="normal"></highlight></codeline>
<codeline lineno="899"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="900"><highlight class="normal">{</highlight></codeline>
<codeline lineno="901"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bits_per_channel;</highlight></codeline>
<codeline lineno="902"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_channels;</highlight></codeline>
<codeline lineno="903"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>channel_order;</highlight></codeline>
<codeline lineno="904"><highlight class="normal">}<sp/>stbi__result_info;</highlight></codeline>
<codeline lineno="905"><highlight class="normal"></highlight></codeline>
<codeline lineno="906"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>STBI_NO_JPEG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="907"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stbi__jpeg_test(stbi__context<sp/>*s);</highlight></codeline>
<codeline lineno="908"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>*stbi__jpeg_load(stbi__context<sp/>*s,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*x,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*y,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*comp,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>req_comp,<sp/>stbi__result_info<sp/>*ri);</highlight></codeline>
<codeline lineno="909"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stbi__jpeg_info(stbi__context<sp/>*s,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*x,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*y,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*comp);</highlight></codeline>
<codeline lineno="910"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="911"><highlight class="normal"></highlight></codeline>
<codeline lineno="912"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>STBI_NO_PNG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="913"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stbi__png_test(stbi__context<sp/>*s);</highlight></codeline>
<codeline lineno="914"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>*stbi__png_load(stbi__context<sp/>*s,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*x,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*y,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*comp,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>req_comp,<sp/>stbi__result_info<sp/>*ri);</highlight></codeline>
<codeline lineno="915"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stbi__png_info(stbi__context<sp/>*s,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*x,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*y,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*comp);</highlight></codeline>
<codeline lineno="916"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stbi__png_is16(stbi__context<sp/>*s);</highlight></codeline>
<codeline lineno="917"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="918"><highlight class="normal"></highlight></codeline>
<codeline lineno="919"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>STBI_NO_BMP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="920"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stbi__bmp_test(stbi__context<sp/>*s);</highlight></codeline>
<codeline lineno="921"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>*stbi__bmp_load(stbi__context<sp/>*s,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*x,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*y,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*comp,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>req_comp,<sp/>stbi__result_info<sp/>*ri);</highlight></codeline>
<codeline lineno="922"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stbi__bmp_info(stbi__context<sp/>*s,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*x,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*y,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*comp);</highlight></codeline>
<codeline lineno="923"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="924"><highlight class="normal"></highlight></codeline>
<codeline lineno="925"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>STBI_NO_TGA</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="926"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stbi__tga_test(stbi__context<sp/>*s);</highlight></codeline>
<codeline lineno="927"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>*stbi__tga_load(stbi__context<sp/>*s,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*x,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*y,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*comp,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>req_comp,<sp/>stbi__result_info<sp/>*ri);</highlight></codeline>
<codeline lineno="928"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stbi__tga_info(stbi__context<sp/>*s,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*x,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*y,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*comp);</highlight></codeline>
<codeline lineno="929"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="930"><highlight class="normal"></highlight></codeline>
<codeline lineno="931"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>STBI_NO_PSD</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="932"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stbi__psd_test(stbi__context<sp/>*s);</highlight></codeline>
<codeline lineno="933"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>*stbi__psd_load(stbi__context<sp/>*s,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*x,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*y,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*comp,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>req_comp,<sp/>stbi__result_info<sp/>*ri,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bpc);</highlight></codeline>
<codeline lineno="934"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stbi__psd_info(stbi__context<sp/>*s,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*x,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*y,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*comp);</highlight></codeline>
<codeline lineno="935"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stbi__psd_is16(stbi__context<sp/>*s);</highlight></codeline>
<codeline lineno="936"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="937"><highlight class="normal"></highlight></codeline>
<codeline lineno="938"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>STBI_NO_HDR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="939"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stbi__hdr_test(stbi__context<sp/>*s);</highlight></codeline>
<codeline lineno="940"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/><sp/>*stbi__hdr_load(stbi__context<sp/>*s,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*x,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*y,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*comp,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>req_comp,<sp/>stbi__result_info<sp/>*ri);</highlight></codeline>
<codeline lineno="941"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stbi__hdr_info(stbi__context<sp/>*s,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*x,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*y,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*comp);</highlight></codeline>
<codeline lineno="942"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="943"><highlight class="normal"></highlight></codeline>
<codeline lineno="944"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>STBI_NO_PIC</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="945"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stbi__pic_test(stbi__context<sp/>*s);</highlight></codeline>
<codeline lineno="946"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>*stbi__pic_load(stbi__context<sp/>*s,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*x,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*y,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*comp,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>req_comp,<sp/>stbi__result_info<sp/>*ri);</highlight></codeline>
<codeline lineno="947"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stbi__pic_info(stbi__context<sp/>*s,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*x,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*y,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*comp);</highlight></codeline>
<codeline lineno="948"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="949"><highlight class="normal"></highlight></codeline>
<codeline lineno="950"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>STBI_NO_GIF</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="951"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stbi__gif_test(stbi__context<sp/>*s);</highlight></codeline>
<codeline lineno="952"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>*stbi__gif_load(stbi__context<sp/>*s,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*x,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*y,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*comp,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>req_comp,<sp/>stbi__result_info<sp/>*ri);</highlight></codeline>
<codeline lineno="953"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>*stbi__load_gif_main(stbi__context<sp/>*s,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>**delays,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*x,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*y,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*z,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*comp,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>req_comp);</highlight></codeline>
<codeline lineno="954"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stbi__gif_info(stbi__context<sp/>*s,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*x,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*y,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*comp);</highlight></codeline>
<codeline lineno="955"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="956"><highlight class="normal"></highlight></codeline>
<codeline lineno="957"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>STBI_NO_PNM</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="958"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stbi__pnm_test(stbi__context<sp/>*s);</highlight></codeline>
<codeline lineno="959"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>*stbi__pnm_load(stbi__context<sp/>*s,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*x,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*y,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*comp,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>req_comp,<sp/>stbi__result_info<sp/>*ri);</highlight></codeline>
<codeline lineno="960"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stbi__pnm_info(stbi__context<sp/>*s,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*x,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*y,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*comp);</highlight></codeline>
<codeline lineno="961"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stbi__pnm_is16(stbi__context<sp/>*s);</highlight></codeline>
<codeline lineno="962"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="963"><highlight class="normal"></highlight></codeline>
<codeline lineno="964"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="965"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>STBI_THREAD_LOCAL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="966"><highlight class="normal">STBI_THREAD_LOCAL</highlight></codeline>
<codeline lineno="967"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="968"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*stbi__g_failure_reason;</highlight></codeline>
<codeline lineno="969"><highlight class="normal"></highlight></codeline>
<codeline lineno="970"><highlight class="normal"><ref refid="stb__image_8h_1a2d9ec9850cd12aefe7641b456266a4c2" kindref="member">STBIDEF</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="stb__image_8h_1aa874b3ba909f3281d499894909678336" kindref="member">stbi_failure_reason</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="971"><highlight class="normal">{</highlight></codeline>
<codeline lineno="972"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stbi__g_failure_reason;</highlight></codeline>
<codeline lineno="973"><highlight class="normal">}</highlight></codeline>
<codeline lineno="974"><highlight class="normal"></highlight></codeline>
<codeline lineno="975"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>STBI_NO_FAILURE_STRINGS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="976"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>stbi__err(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*str)</highlight></codeline>
<codeline lineno="977"><highlight class="normal">{</highlight></codeline>
<codeline lineno="978"><highlight class="normal"><sp/><sp/><sp/>stbi__g_failure_reason<sp/>=<sp/>str;</highlight></codeline>
<codeline lineno="979"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="980"><highlight class="normal">}</highlight></codeline>
<codeline lineno="981"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="982"><highlight class="normal"></highlight></codeline>
<codeline lineno="983"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*stbi__malloc(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>size)</highlight></codeline>
<codeline lineno="984"><highlight class="normal">{</highlight></codeline>
<codeline lineno="985"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>STBI_MALLOC(size);</highlight></codeline>
<codeline lineno="986"><highlight class="normal">}</highlight></codeline>
<codeline lineno="987"><highlight class="normal"></highlight></codeline>
<codeline lineno="988"><highlight class="normal"></highlight><highlight class="comment">//<sp/>stb_image<sp/>uses<sp/>ints<sp/>pervasively,<sp/>including<sp/>for<sp/>offset<sp/>calculations.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="989"><highlight class="normal"></highlight><highlight class="comment">//<sp/>therefore<sp/>the<sp/>largest<sp/>decoded<sp/>image<sp/>size<sp/>we<sp/>can<sp/>support<sp/>with<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="990"><highlight class="normal"></highlight><highlight class="comment">//<sp/>current<sp/>code,<sp/>even<sp/>on<sp/>64-bit<sp/>targets,<sp/>is<sp/>INT_MAX.<sp/>this<sp/>is<sp/>not<sp/>a</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="991"><highlight class="normal"></highlight><highlight class="comment">//<sp/>significant<sp/>limitation<sp/>for<sp/>the<sp/>intended<sp/>use<sp/>case.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="992"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="993"><highlight class="normal"></highlight><highlight class="comment">//<sp/>we<sp/>do,<sp/>however,<sp/>need<sp/>to<sp/>make<sp/>sure<sp/>our<sp/>size<sp/>calculations<sp/>don&apos;t</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="994"><highlight class="normal"></highlight><highlight class="comment">//<sp/>overflow.<sp/>hence<sp/>a<sp/>few<sp/>helper<sp/>functions<sp/>for<sp/>size<sp/>calculations<sp/>that</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="995"><highlight class="normal"></highlight><highlight class="comment">//<sp/>multiply<sp/>integers<sp/>together,<sp/>making<sp/>sure<sp/>that<sp/>they&apos;re<sp/>non-negative</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="996"><highlight class="normal"></highlight><highlight class="comment">//<sp/>and<sp/>no<sp/>overflow<sp/>occurs.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="997"><highlight class="normal"></highlight></codeline>
<codeline lineno="998"><highlight class="normal"></highlight><highlight class="comment">//<sp/>return<sp/>1<sp/>if<sp/>the<sp/>sum<sp/>is<sp/>valid,<sp/>0<sp/>on<sp/>overflow.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="999"><highlight class="normal"></highlight><highlight class="comment">//<sp/>negative<sp/>terms<sp/>are<sp/>considered<sp/>invalid.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1000"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>stbi__addsizes_valid(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>a,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>b)</highlight></codeline>
<codeline lineno="1001"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1002"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(b<sp/>&lt;<sp/>0)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="1003"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>now<sp/>0<sp/>&lt;=<sp/>b<sp/>&lt;=<sp/>INT_MAX,<sp/>hence<sp/>also</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1004"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>0<sp/>&lt;=<sp/>INT_MAX<sp/>-<sp/>b<sp/>&lt;=<sp/>INTMAX.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1005"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>And<sp/>&quot;a<sp/>+<sp/>b<sp/>&lt;=<sp/>INT_MAX&quot;<sp/>(which<sp/>might<sp/>overflow)<sp/>is<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1006"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>same<sp/>as<sp/>a<sp/>&lt;=<sp/>INT_MAX<sp/>-<sp/>b<sp/>(no<sp/>overflow)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1007"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>a<sp/>&lt;=<sp/>INT_MAX<sp/>-<sp/>b;</highlight></codeline>
<codeline lineno="1008"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1009"><highlight class="normal"></highlight></codeline>
<codeline lineno="1010"><highlight class="normal"></highlight><highlight class="comment">//<sp/>returns<sp/>1<sp/>if<sp/>the<sp/>product<sp/>is<sp/>valid,<sp/>0<sp/>on<sp/>overflow.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1011"><highlight class="normal"></highlight><highlight class="comment">//<sp/>negative<sp/>factors<sp/>are<sp/>considered<sp/>invalid.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1012"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>stbi__mul2sizes_valid(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>a,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>b)</highlight></codeline>
<codeline lineno="1013"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1014"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(a<sp/>&lt;<sp/>0<sp/>||<sp/>b<sp/>&lt;<sp/>0)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="1015"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(b<sp/>==<sp/>0)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;<sp/></highlight><highlight class="comment">//<sp/>mul-by-0<sp/>is<sp/>always<sp/>safe</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1016"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>portable<sp/>way<sp/>to<sp/>check<sp/>for<sp/>no<sp/>overflows<sp/>in<sp/>a*b</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1017"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>a<sp/>&lt;=<sp/>INT_MAX/b;</highlight></codeline>
<codeline lineno="1018"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1019"><highlight class="normal"></highlight></codeline>
<codeline lineno="1020"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>!defined(STBI_NO_JPEG)<sp/>||<sp/>!defined(STBI_NO_PNG)<sp/>||<sp/>!defined(STBI_NO_TGA)<sp/>||<sp/>!defined(STBI_NO_HDR)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1021"><highlight class="normal"></highlight><highlight class="comment">//<sp/>returns<sp/>1<sp/>if<sp/>&quot;a*b<sp/>+<sp/>add&quot;<sp/>has<sp/>no<sp/>negative<sp/>terms/factors<sp/>and<sp/>doesn&apos;t<sp/>overflow</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1022"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>stbi__mad2sizes_valid(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>a,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>b,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>add)</highlight></codeline>
<codeline lineno="1023"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1024"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stbi__mul2sizes_valid(a,<sp/>b)<sp/>&amp;&amp;<sp/>stbi__addsizes_valid(a*b,<sp/>add);</highlight></codeline>
<codeline lineno="1025"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1026"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1027"><highlight class="normal"></highlight></codeline>
<codeline lineno="1028"><highlight class="normal"></highlight><highlight class="comment">//<sp/>returns<sp/>1<sp/>if<sp/>&quot;a*b*c<sp/>+<sp/>add&quot;<sp/>has<sp/>no<sp/>negative<sp/>terms/factors<sp/>and<sp/>doesn&apos;t<sp/>overflow</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1029"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>stbi__mad3sizes_valid(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>a,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>b,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>c,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>add)</highlight></codeline>
<codeline lineno="1030"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1031"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stbi__mul2sizes_valid(a,<sp/>b)<sp/>&amp;&amp;<sp/>stbi__mul2sizes_valid(a*b,<sp/>c)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="1032"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stbi__addsizes_valid(a*b*c,<sp/>add);</highlight></codeline>
<codeline lineno="1033"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1034"><highlight class="normal"></highlight></codeline>
<codeline lineno="1035"><highlight class="normal"></highlight><highlight class="comment">//<sp/>returns<sp/>1<sp/>if<sp/>&quot;a*b*c*d<sp/>+<sp/>add&quot;<sp/>has<sp/>no<sp/>negative<sp/>terms/factors<sp/>and<sp/>doesn&apos;t<sp/>overflow</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1036"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>!defined(STBI_NO_LINEAR)<sp/>||<sp/>!defined(STBI_NO_HDR)<sp/>||<sp/>!defined(STBI_NO_PNM)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1037"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>stbi__mad4sizes_valid(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>a,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>b,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>c,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>d,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>add)</highlight></codeline>
<codeline lineno="1038"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1039"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stbi__mul2sizes_valid(a,<sp/>b)<sp/>&amp;&amp;<sp/>stbi__mul2sizes_valid(a*b,<sp/>c)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="1040"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stbi__mul2sizes_valid(a*b*c,<sp/>d)<sp/>&amp;&amp;<sp/>stbi__addsizes_valid(a*b*c*d,<sp/>add);</highlight></codeline>
<codeline lineno="1041"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1042"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1043"><highlight class="normal"></highlight></codeline>
<codeline lineno="1044"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>!defined(STBI_NO_JPEG)<sp/>||<sp/>!defined(STBI_NO_PNG)<sp/>||<sp/>!defined(STBI_NO_TGA)<sp/>||<sp/>!defined(STBI_NO_HDR)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1045"><highlight class="normal"></highlight><highlight class="comment">//<sp/>mallocs<sp/>with<sp/>size<sp/>overflow<sp/>checking</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1046"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*stbi__malloc_mad2(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>a,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>b,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>add)</highlight></codeline>
<codeline lineno="1047"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1048"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!stbi__mad2sizes_valid(a,<sp/>b,<sp/>add))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="1049"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stbi__malloc(a*b<sp/>+<sp/>add);</highlight></codeline>
<codeline lineno="1050"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1051"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1052"><highlight class="normal"></highlight></codeline>
<codeline lineno="1053"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*stbi__malloc_mad3(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>a,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>b,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>c,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>add)</highlight></codeline>
<codeline lineno="1054"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1055"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!stbi__mad3sizes_valid(a,<sp/>b,<sp/>c,<sp/>add))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="1056"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stbi__malloc(a*b*c<sp/>+<sp/>add);</highlight></codeline>
<codeline lineno="1057"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1058"><highlight class="normal"></highlight></codeline>
<codeline lineno="1059"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>!defined(STBI_NO_LINEAR)<sp/>||<sp/>!defined(STBI_NO_HDR)<sp/>||<sp/>!defined(STBI_NO_PNM)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1060"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*stbi__malloc_mad4(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>a,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>b,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>c,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>d,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>add)</highlight></codeline>
<codeline lineno="1061"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1062"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!stbi__mad4sizes_valid(a,<sp/>b,<sp/>c,<sp/>d,<sp/>add))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="1063"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stbi__malloc(a*b*c*d<sp/>+<sp/>add);</highlight></codeline>
<codeline lineno="1064"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1065"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1066"><highlight class="normal"></highlight></codeline>
<codeline lineno="1067"><highlight class="normal"></highlight><highlight class="comment">//<sp/>returns<sp/>1<sp/>if<sp/>the<sp/>sum<sp/>of<sp/>two<sp/>signed<sp/>ints<sp/>is<sp/>valid<sp/>(between<sp/>-2^31<sp/>and<sp/>2^31-1<sp/>inclusive),<sp/>0<sp/>on<sp/>overflow.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1068"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>stbi__addints_valid(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>a,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>b)</highlight></codeline>
<codeline lineno="1069"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1070"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((a<sp/>&gt;=<sp/>0)<sp/>!=<sp/>(b<sp/>&gt;=<sp/>0))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;<sp/></highlight><highlight class="comment">//<sp/>a<sp/>and<sp/>b<sp/>have<sp/>different<sp/>signs,<sp/>so<sp/>no<sp/>overflow</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1071"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(a<sp/>&lt;<sp/>0<sp/>&amp;&amp;<sp/>b<sp/>&lt;<sp/>0)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>a<sp/>&gt;=<sp/>INT_MIN<sp/>-<sp/>b;<sp/></highlight><highlight class="comment">//<sp/>same<sp/>as<sp/>a<sp/>+<sp/>b<sp/>&gt;=<sp/>INT_MIN;<sp/>INT_MIN<sp/>-<sp/>b<sp/>cannot<sp/>overflow<sp/>since<sp/>b<sp/>&lt;<sp/>0.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1072"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>a<sp/>&lt;=<sp/>INT_MAX<sp/>-<sp/>b;</highlight></codeline>
<codeline lineno="1073"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1074"><highlight class="normal"></highlight></codeline>
<codeline lineno="1075"><highlight class="normal"></highlight><highlight class="comment">//<sp/>returns<sp/>1<sp/>if<sp/>the<sp/>product<sp/>of<sp/>two<sp/>signed<sp/>shorts<sp/>is<sp/>valid,<sp/>0<sp/>on<sp/>overflow.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1076"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>stbi__mul2shorts_valid(</highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>a,<sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>b)</highlight></codeline>
<codeline lineno="1077"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1078"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(b<sp/>==<sp/>0<sp/>||<sp/>b<sp/>==<sp/>-1)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;<sp/></highlight><highlight class="comment">//<sp/>multiplication<sp/>by<sp/>0<sp/>is<sp/>always<sp/>0;<sp/>check<sp/>for<sp/>-1<sp/>so<sp/>SHRT_MIN/b<sp/>doesn&apos;t<sp/>overflow</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1079"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((a<sp/>&gt;=<sp/>0)<sp/>==<sp/>(b<sp/>&gt;=<sp/>0))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>a<sp/>&lt;=<sp/>SHRT_MAX/b;<sp/></highlight><highlight class="comment">//<sp/>product<sp/>is<sp/>positive,<sp/>so<sp/>similar<sp/>to<sp/>mul2sizes_valid</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1080"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(b<sp/>&lt;<sp/>0)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>a<sp/>&lt;=<sp/>SHRT_MIN<sp/>/<sp/>b;<sp/></highlight><highlight class="comment">//<sp/>same<sp/>as<sp/>a<sp/>*<sp/>b<sp/>&gt;=<sp/>SHRT_MIN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1081"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>a<sp/>&gt;=<sp/>SHRT_MIN<sp/>/<sp/>b;</highlight></codeline>
<codeline lineno="1082"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1083"><highlight class="normal"></highlight></codeline>
<codeline lineno="1084"><highlight class="normal"></highlight><highlight class="comment">//<sp/>stbi__err<sp/>-<sp/>error</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1085"><highlight class="normal"></highlight><highlight class="comment">//<sp/>stbi__errpf<sp/>-<sp/>error<sp/>returning<sp/>pointer<sp/>to<sp/>float</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1086"><highlight class="normal"></highlight><highlight class="comment">//<sp/>stbi__errpuc<sp/>-<sp/>error<sp/>returning<sp/>pointer<sp/>to<sp/>unsigned<sp/>char</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1087"><highlight class="normal"></highlight></codeline>
<codeline lineno="1088"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>STBI_NO_FAILURE_STRINGS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1089"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#define<sp/>stbi__err(x,y)<sp/><sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1090"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>defined(STBI_FAILURE_USERMSG)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1091"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#define<sp/>stbi__err(x,y)<sp/><sp/>stbi__err(y)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1092"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1093"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#define<sp/>stbi__err(x,y)<sp/><sp/>stbi__err(x)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1094"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1095"><highlight class="normal"></highlight></codeline>
<codeline lineno="1096"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>stbi__errpf(x,y)<sp/><sp/><sp/>((float<sp/>*)(size_t)<sp/>(stbi__err(x,y)?NULL:NULL))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1097"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>stbi__errpuc(x,y)<sp/><sp/>((unsigned<sp/>char<sp/>*)(size_t)<sp/>(stbi__err(x,y)?NULL:NULL))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1098"><highlight class="normal"></highlight></codeline>
<codeline lineno="1099"><highlight class="normal"><ref refid="stb__image_8h_1a2d9ec9850cd12aefe7641b456266a4c2" kindref="member">STBIDEF</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="stb__image_8h_1ad3e11bb44412a7ba348acfbad09caacb" kindref="member">stbi_image_free</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*retval_from_stbi_load)</highlight></codeline>
<codeline lineno="1100"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1101"><highlight class="normal"><sp/><sp/><sp/>STBI_FREE(retval_from_stbi_load);</highlight></codeline>
<codeline lineno="1102"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1103"><highlight class="normal"></highlight></codeline>
<codeline lineno="1104"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>STBI_NO_LINEAR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1105"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/><sp/>*stbi__ldr_to_hdr(<ref refid="stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d" kindref="member">stbi_uc</ref><sp/>*data,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>comp);</highlight></codeline>
<codeline lineno="1106"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1107"><highlight class="normal"></highlight></codeline>
<codeline lineno="1108"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>STBI_NO_HDR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1109"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d" kindref="member">stbi_uc</ref><sp/>*stbi__hdr_to_ldr(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/><sp/>*data,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>comp);</highlight></codeline>
<codeline lineno="1110"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1111"><highlight class="normal"></highlight></codeline>
<codeline lineno="1112"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>stbi__vertically_flip_on_load_global<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1113"><highlight class="normal"></highlight></codeline>
<codeline lineno="1114"><highlight class="normal"><ref refid="stb__image_8h_1a2d9ec9850cd12aefe7641b456266a4c2" kindref="member">STBIDEF</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="stb__image_8h_1ab89c177fc52f1bb2dc1c05e48129a0a4" kindref="member">stbi_set_flip_vertically_on_load</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>flag_true_if_should_flip)</highlight></codeline>
<codeline lineno="1115"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1116"><highlight class="normal"><sp/><sp/><sp/>stbi__vertically_flip_on_load_global<sp/>=<sp/>flag_true_if_should_flip;</highlight></codeline>
<codeline lineno="1117"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1118"><highlight class="normal"></highlight></codeline>
<codeline lineno="1119"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>STBI_THREAD_LOCAL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1120"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>stbi__vertically_flip_on_load<sp/><sp/>stbi__vertically_flip_on_load_global</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1121"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1122"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>STBI_THREAD_LOCAL<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>stbi__vertically_flip_on_load_local,<sp/>stbi__vertically_flip_on_load_set;</highlight></codeline>
<codeline lineno="1123"><highlight class="normal"></highlight></codeline>
<codeline lineno="1124"><highlight class="normal"><ref refid="stb__image_8h_1a2d9ec9850cd12aefe7641b456266a4c2" kindref="member">STBIDEF</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="stb__image_8h_1ad683202a3f6ec89729b5ad9220ae98ee" kindref="member">stbi_set_flip_vertically_on_load_thread</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>flag_true_if_should_flip)</highlight></codeline>
<codeline lineno="1125"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1126"><highlight class="normal"><sp/><sp/><sp/>stbi__vertically_flip_on_load_local<sp/>=<sp/>flag_true_if_should_flip;</highlight></codeline>
<codeline lineno="1127"><highlight class="normal"><sp/><sp/><sp/>stbi__vertically_flip_on_load_set<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="1128"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1129"><highlight class="normal"></highlight></codeline>
<codeline lineno="1130"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>stbi__vertically_flip_on_load<sp/><sp/>(stbi__vertically_flip_on_load_set<sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="1131"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>?<sp/>stbi__vertically_flip_on_load_local<sp/><sp/>\</highlight></codeline>
<codeline lineno="1132"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>stbi__vertically_flip_on_load_global)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1133"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>STBI_THREAD_LOCAL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1134"><highlight class="normal"></highlight></codeline>
<codeline lineno="1135"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*stbi__load_main(stbi__context<sp/>*s,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*x,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*y,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*comp,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>req_comp,<sp/>stbi__result_info<sp/>*ri,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bpc)</highlight></codeline>
<codeline lineno="1136"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1137"><highlight class="normal"><sp/><sp/><sp/>memset(ri,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*ri));<sp/></highlight><highlight class="comment">//<sp/>make<sp/>sure<sp/>it&apos;s<sp/>initialized<sp/>if<sp/>we<sp/>add<sp/>new<sp/>fields</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1138"><highlight class="normal"><sp/><sp/><sp/>ri-&gt;bits_per_channel<sp/>=<sp/>8;<sp/></highlight><highlight class="comment">//<sp/>default<sp/>is<sp/>8<sp/>so<sp/>most<sp/>paths<sp/>don&apos;t<sp/>have<sp/>to<sp/>be<sp/>changed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1139"><highlight class="normal"><sp/><sp/><sp/>ri-&gt;channel_order<sp/>=<sp/>STBI_ORDER_RGB;<sp/></highlight><highlight class="comment">//<sp/>all<sp/>current<sp/>input<sp/>&amp;<sp/>output<sp/>are<sp/>this,<sp/>but<sp/>this<sp/>is<sp/>here<sp/>so<sp/>we<sp/>can<sp/>add<sp/>BGR<sp/>order</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1140"><highlight class="normal"><sp/><sp/><sp/>ri-&gt;num_channels<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1141"><highlight class="normal"></highlight></codeline>
<codeline lineno="1142"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>test<sp/>the<sp/>formats<sp/>with<sp/>a<sp/>very<sp/>explicit<sp/>header<sp/>first<sp/>(at<sp/>least<sp/>a<sp/>FOURCC</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1143"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>or<sp/>distinctive<sp/>magic<sp/>number<sp/>first)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1144"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#ifndef<sp/>STBI_NO_PNG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1145"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(stbi__png_test(s))<sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stbi__png_load(s,x,y,comp,req_comp,<sp/>ri);</highlight></codeline>
<codeline lineno="1146"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1147"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#ifndef<sp/>STBI_NO_BMP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1148"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(stbi__bmp_test(s))<sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stbi__bmp_load(s,x,y,comp,req_comp,<sp/>ri);</highlight></codeline>
<codeline lineno="1149"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1150"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#ifndef<sp/>STBI_NO_GIF</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1151"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(stbi__gif_test(s))<sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stbi__gif_load(s,x,y,comp,req_comp,<sp/>ri);</highlight></codeline>
<codeline lineno="1152"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1153"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#ifndef<sp/>STBI_NO_PSD</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1154"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(stbi__psd_test(s))<sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stbi__psd_load(s,x,y,comp,req_comp,<sp/>ri,<sp/>bpc);</highlight></codeline>
<codeline lineno="1155"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1156"><highlight class="normal"><sp/><sp/><sp/>STBI_NOTUSED(bpc);</highlight></codeline>
<codeline lineno="1157"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1158"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#ifndef<sp/>STBI_NO_PIC</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1159"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(stbi__pic_test(s))<sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stbi__pic_load(s,x,y,comp,req_comp,<sp/>ri);</highlight></codeline>
<codeline lineno="1160"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1161"><highlight class="normal"></highlight></codeline>
<codeline lineno="1162"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>then<sp/>the<sp/>formats<sp/>that<sp/>can<sp/>end<sp/>up<sp/>attempting<sp/>to<sp/>load<sp/>with<sp/>just<sp/>1<sp/>or<sp/>2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1163"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>bytes<sp/>matching<sp/>expectations;<sp/>these<sp/>are<sp/>prone<sp/>to<sp/>false<sp/>positives,<sp/>so</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1164"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>try<sp/>them<sp/>later</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1165"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#ifndef<sp/>STBI_NO_JPEG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1166"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(stbi__jpeg_test(s))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stbi__jpeg_load(s,x,y,comp,req_comp,<sp/>ri);</highlight></codeline>
<codeline lineno="1167"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1168"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#ifndef<sp/>STBI_NO_PNM</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1169"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(stbi__pnm_test(s))<sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stbi__pnm_load(s,x,y,comp,req_comp,<sp/>ri);</highlight></codeline>
<codeline lineno="1170"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1171"><highlight class="normal"></highlight></codeline>
<codeline lineno="1172"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#ifndef<sp/>STBI_NO_HDR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1173"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(stbi__hdr_test(s))<sp/>{</highlight></codeline>
<codeline lineno="1174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*hdr<sp/>=<sp/>stbi__hdr_load(s,<sp/>x,y,comp,req_comp,<sp/>ri);</highlight></codeline>
<codeline lineno="1175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stbi__hdr_to_ldr(hdr,<sp/>*x,<sp/>*y,<sp/>req_comp<sp/>?<sp/>req_comp<sp/>:<sp/>*comp);</highlight></codeline>
<codeline lineno="1176"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1177"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1178"><highlight class="normal"></highlight></codeline>
<codeline lineno="1179"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#ifndef<sp/>STBI_NO_TGA</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1180"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>test<sp/>tga<sp/>last<sp/>because<sp/>it&apos;s<sp/>a<sp/>crappy<sp/>test!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1181"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(stbi__tga_test(s))</highlight></codeline>
<codeline lineno="1182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stbi__tga_load(s,x,y,comp,req_comp,<sp/>ri);</highlight></codeline>
<codeline lineno="1183"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1184"><highlight class="normal"></highlight></codeline>
<codeline lineno="1185"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stbi__errpuc(</highlight><highlight class="stringliteral">&quot;unknown<sp/>image<sp/>type&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Image<sp/>not<sp/>of<sp/>any<sp/>known<sp/>type,<sp/>or<sp/>corrupt&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1186"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1187"><highlight class="normal"></highlight></codeline>
<codeline lineno="1188"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d" kindref="member">stbi_uc</ref><sp/>*stbi__convert_16_to_8(stbi__uint16<sp/>*orig,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>w,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>h,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>channels)</highlight></codeline>
<codeline lineno="1189"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1190"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="1191"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>img_len<sp/>=<sp/>w<sp/>*<sp/>h<sp/>*<sp/>channels;</highlight></codeline>
<codeline lineno="1192"><highlight class="normal"><sp/><sp/><sp/><ref refid="stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d" kindref="member">stbi_uc</ref><sp/>*reduced;</highlight></codeline>
<codeline lineno="1193"><highlight class="normal"></highlight></codeline>
<codeline lineno="1194"><highlight class="normal"><sp/><sp/><sp/>reduced<sp/>=<sp/>(<ref refid="stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d" kindref="member">stbi_uc</ref><sp/>*)<sp/>stbi__malloc(img_len);</highlight></codeline>
<codeline lineno="1195"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(reduced<sp/>==<sp/>NULL)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stbi__errpuc(</highlight><highlight class="stringliteral">&quot;outofmem&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Out<sp/>of<sp/>memory&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1196"><highlight class="normal"></highlight></codeline>
<codeline lineno="1197"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>img_len;<sp/>++i)</highlight></codeline>
<codeline lineno="1198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>reduced[i]<sp/>=<sp/>(<ref refid="stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d" kindref="member">stbi_uc</ref>)((orig[i]<sp/>&gt;&gt;<sp/>8)<sp/>&amp;<sp/>0xFF);<sp/></highlight><highlight class="comment">//<sp/>top<sp/>half<sp/>of<sp/>each<sp/>byte<sp/>is<sp/>sufficient<sp/>approx<sp/>of<sp/>16-&gt;8<sp/>bit<sp/>scaling</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1199"><highlight class="normal"></highlight></codeline>
<codeline lineno="1200"><highlight class="normal"><sp/><sp/><sp/>STBI_FREE(orig);</highlight></codeline>
<codeline lineno="1201"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>reduced;</highlight></codeline>
<codeline lineno="1202"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1203"><highlight class="normal"></highlight></codeline>
<codeline lineno="1204"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>stbi__uint16<sp/>*stbi__convert_8_to_16(<ref refid="stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d" kindref="member">stbi_uc</ref><sp/>*orig,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>w,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>h,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>channels)</highlight></codeline>
<codeline lineno="1205"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1206"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="1207"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>img_len<sp/>=<sp/>w<sp/>*<sp/>h<sp/>*<sp/>channels;</highlight></codeline>
<codeline lineno="1208"><highlight class="normal"><sp/><sp/><sp/>stbi__uint16<sp/>*enlarged;</highlight></codeline>
<codeline lineno="1209"><highlight class="normal"></highlight></codeline>
<codeline lineno="1210"><highlight class="normal"><sp/><sp/><sp/>enlarged<sp/>=<sp/>(stbi__uint16<sp/>*)<sp/>stbi__malloc(img_len*2);</highlight></codeline>
<codeline lineno="1211"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(enlarged<sp/>==<sp/>NULL)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(stbi__uint16<sp/>*)<sp/>stbi__errpuc(</highlight><highlight class="stringliteral">&quot;outofmem&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Out<sp/>of<sp/>memory&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1212"><highlight class="normal"></highlight></codeline>
<codeline lineno="1213"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>img_len;<sp/>++i)</highlight></codeline>
<codeline lineno="1214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>enlarged[i]<sp/>=<sp/>(stbi__uint16)((orig[i]<sp/>&lt;&lt;<sp/>8)<sp/>+<sp/>orig[i]);<sp/></highlight><highlight class="comment">//<sp/>replicate<sp/>to<sp/>high<sp/>and<sp/>low<sp/>byte,<sp/>maps<sp/>0-&gt;0,<sp/>255-&gt;0xffff</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1215"><highlight class="normal"></highlight></codeline>
<codeline lineno="1216"><highlight class="normal"><sp/><sp/><sp/>STBI_FREE(orig);</highlight></codeline>
<codeline lineno="1217"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>enlarged;</highlight></codeline>
<codeline lineno="1218"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1219"><highlight class="normal"></highlight></codeline>
<codeline lineno="1220"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>stbi__vertical_flip(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*image,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>w,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>h,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bytes_per_pixel)</highlight></codeline>
<codeline lineno="1221"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1222"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>row;</highlight></codeline>
<codeline lineno="1223"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>bytes_per_row<sp/>=<sp/>(size_t)w<sp/>*<sp/>bytes_per_pixel;</highlight></codeline>
<codeline lineno="1224"><highlight class="normal"><sp/><sp/><sp/><ref refid="stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d" kindref="member">stbi_uc</ref><sp/>temp[2048];</highlight></codeline>
<codeline lineno="1225"><highlight class="normal"><sp/><sp/><sp/><ref refid="stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d" kindref="member">stbi_uc</ref><sp/>*bytes<sp/>=<sp/>(<ref refid="stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d" kindref="member">stbi_uc</ref><sp/>*)image;</highlight></codeline>
<codeline lineno="1226"><highlight class="normal"></highlight></codeline>
<codeline lineno="1227"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(row<sp/>=<sp/>0;<sp/>row<sp/>&lt;<sp/>(h&gt;&gt;1);<sp/>row++)<sp/>{</highlight></codeline>
<codeline lineno="1228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d" kindref="member">stbi_uc</ref><sp/>*row0<sp/>=<sp/>bytes<sp/>+<sp/>row*bytes_per_row;</highlight></codeline>
<codeline lineno="1229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d" kindref="member">stbi_uc</ref><sp/>*row1<sp/>=<sp/>bytes<sp/>+<sp/>(h<sp/>-<sp/>row<sp/>-<sp/>1)*bytes_per_row;</highlight></codeline>
<codeline lineno="1230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>swap<sp/>row0<sp/>with<sp/>row1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>bytes_left<sp/>=<sp/>bytes_per_row;</highlight></codeline>
<codeline lineno="1232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(bytes_left)<sp/>{</highlight></codeline>
<codeline lineno="1233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>bytes_copy<sp/>=<sp/>(bytes_left<sp/>&lt;<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(temp))<sp/>?<sp/>bytes_left<sp/>:<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(temp);</highlight></codeline>
<codeline lineno="1234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(temp,<sp/>row0,<sp/>bytes_copy);</highlight></codeline>
<codeline lineno="1235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(row0,<sp/>row1,<sp/>bytes_copy);</highlight></codeline>
<codeline lineno="1236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(row1,<sp/>temp,<sp/>bytes_copy);</highlight></codeline>
<codeline lineno="1237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>row0<sp/>+=<sp/>bytes_copy;</highlight></codeline>
<codeline lineno="1238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>row1<sp/>+=<sp/>bytes_copy;</highlight></codeline>
<codeline lineno="1239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bytes_left<sp/>-=<sp/>bytes_copy;</highlight></codeline>
<codeline lineno="1240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1241"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1242"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1243"><highlight class="normal"></highlight></codeline>
<codeline lineno="1244"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>STBI_NO_GIF</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1245"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>stbi__vertical_flip_slices(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*image,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>w,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>h,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>z,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bytes_per_pixel)</highlight></codeline>
<codeline lineno="1246"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1247"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>slice;</highlight></codeline>
<codeline lineno="1248"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>slice_size<sp/>=<sp/>w<sp/>*<sp/>h<sp/>*<sp/>bytes_per_pixel;</highlight></codeline>
<codeline lineno="1249"><highlight class="normal"></highlight></codeline>
<codeline lineno="1250"><highlight class="normal"><sp/><sp/><sp/><ref refid="stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d" kindref="member">stbi_uc</ref><sp/>*bytes<sp/>=<sp/>(<ref refid="stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d" kindref="member">stbi_uc</ref><sp/>*)image;</highlight></codeline>
<codeline lineno="1251"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(slice<sp/>=<sp/>0;<sp/>slice<sp/>&lt;<sp/>z;<sp/>++slice)<sp/>{</highlight></codeline>
<codeline lineno="1252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stbi__vertical_flip(bytes,<sp/>w,<sp/>h,<sp/>bytes_per_pixel);</highlight></codeline>
<codeline lineno="1253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>bytes<sp/>+=<sp/>slice_size;</highlight></codeline>
<codeline lineno="1254"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1255"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1256"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1257"><highlight class="normal"></highlight></codeline>
<codeline lineno="1258"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*stbi__load_and_postprocess_8bit(stbi__context<sp/>*s,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*x,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*y,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*comp,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>req_comp)</highlight></codeline>
<codeline lineno="1259"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1260"><highlight class="normal"><sp/><sp/><sp/>stbi__result_info<sp/>ri;</highlight></codeline>
<codeline lineno="1261"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*result<sp/>=<sp/>stbi__load_main(s,<sp/>x,<sp/>y,<sp/>comp,<sp/>req_comp,<sp/>&amp;ri,<sp/>8);</highlight></codeline>
<codeline lineno="1262"><highlight class="normal"></highlight></codeline>
<codeline lineno="1263"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(result<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="1264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="1265"><highlight class="normal"></highlight></codeline>
<codeline lineno="1266"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>it<sp/>is<sp/>the<sp/>responsibility<sp/>of<sp/>the<sp/>loaders<sp/>to<sp/>make<sp/>sure<sp/>we<sp/>get<sp/>either<sp/>8<sp/>or<sp/>16<sp/>bit.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1267"><highlight class="normal"><sp/><sp/><sp/>STBI_ASSERT(ri.bits_per_channel<sp/>==<sp/>8<sp/>||<sp/>ri.bits_per_channel<sp/>==<sp/>16);</highlight></codeline>
<codeline lineno="1268"><highlight class="normal"></highlight></codeline>
<codeline lineno="1269"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ri.bits_per_channel<sp/>!=<sp/>8)<sp/>{</highlight></codeline>
<codeline lineno="1270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/>stbi__convert_16_to_8((stbi__uint16<sp/>*)<sp/>result,<sp/>*x,<sp/>*y,<sp/>req_comp<sp/>==<sp/>0<sp/>?<sp/>*comp<sp/>:<sp/>req_comp);</highlight></codeline>
<codeline lineno="1271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ri.bits_per_channel<sp/>=<sp/>8;</highlight></codeline>
<codeline lineno="1272"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1273"><highlight class="normal"></highlight></codeline>
<codeline lineno="1274"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>@TODO:<sp/>move<sp/>stbi__convert_format<sp/>to<sp/>here</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1275"><highlight class="normal"></highlight></codeline>
<codeline lineno="1276"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(stbi__vertically_flip_on_load)<sp/>{</highlight></codeline>
<codeline lineno="1277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>channels<sp/>=<sp/>req_comp<sp/>?<sp/>req_comp<sp/>:<sp/>*comp;</highlight></codeline>
<codeline lineno="1278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stbi__vertical_flip(result,<sp/>*x,<sp/>*y,<sp/>channels<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d" kindref="member">stbi_uc</ref>));</highlight></codeline>
<codeline lineno="1279"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1280"><highlight class="normal"></highlight></codeline>
<codeline lineno="1281"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)<sp/>result;</highlight></codeline>
<codeline lineno="1282"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1283"><highlight class="normal"></highlight></codeline>
<codeline lineno="1284"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>stbi__uint16<sp/>*stbi__load_and_postprocess_16bit(stbi__context<sp/>*s,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*x,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*y,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*comp,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>req_comp)</highlight></codeline>
<codeline lineno="1285"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1286"><highlight class="normal"><sp/><sp/><sp/>stbi__result_info<sp/>ri;</highlight></codeline>
<codeline lineno="1287"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*result<sp/>=<sp/>stbi__load_main(s,<sp/>x,<sp/>y,<sp/>comp,<sp/>req_comp,<sp/>&amp;ri,<sp/>16);</highlight></codeline>
<codeline lineno="1288"><highlight class="normal"></highlight></codeline>
<codeline lineno="1289"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(result<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="1290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="1291"><highlight class="normal"></highlight></codeline>
<codeline lineno="1292"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>it<sp/>is<sp/>the<sp/>responsibility<sp/>of<sp/>the<sp/>loaders<sp/>to<sp/>make<sp/>sure<sp/>we<sp/>get<sp/>either<sp/>8<sp/>or<sp/>16<sp/>bit.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1293"><highlight class="normal"><sp/><sp/><sp/>STBI_ASSERT(ri.bits_per_channel<sp/>==<sp/>8<sp/>||<sp/>ri.bits_per_channel<sp/>==<sp/>16);</highlight></codeline>
<codeline lineno="1294"><highlight class="normal"></highlight></codeline>
<codeline lineno="1295"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ri.bits_per_channel<sp/>!=<sp/>16)<sp/>{</highlight></codeline>
<codeline lineno="1296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/>stbi__convert_8_to_16((<ref refid="stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d" kindref="member">stbi_uc</ref><sp/>*)<sp/>result,<sp/>*x,<sp/>*y,<sp/>req_comp<sp/>==<sp/>0<sp/>?<sp/>*comp<sp/>:<sp/>req_comp);</highlight></codeline>
<codeline lineno="1297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ri.bits_per_channel<sp/>=<sp/>16;</highlight></codeline>
<codeline lineno="1298"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1299"><highlight class="normal"></highlight></codeline>
<codeline lineno="1300"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>@TODO:<sp/>move<sp/>stbi__convert_format16<sp/>to<sp/>here</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1301"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>@TODO:<sp/>special<sp/>case<sp/>RGB-to-Y<sp/>(and<sp/>RGBA-to-YA)<sp/>for<sp/>8-bit-to-16-bit<sp/>case<sp/>to<sp/>keep<sp/>more<sp/>precision</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1302"><highlight class="normal"></highlight></codeline>
<codeline lineno="1303"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(stbi__vertically_flip_on_load)<sp/>{</highlight></codeline>
<codeline lineno="1304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>channels<sp/>=<sp/>req_comp<sp/>?<sp/>req_comp<sp/>:<sp/>*comp;</highlight></codeline>
<codeline lineno="1305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stbi__vertical_flip(result,<sp/>*x,<sp/>*y,<sp/>channels<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(stbi__uint16));</highlight></codeline>
<codeline lineno="1306"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1307"><highlight class="normal"></highlight></codeline>
<codeline lineno="1308"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(stbi__uint16<sp/>*)<sp/>result;</highlight></codeline>
<codeline lineno="1309"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1310"><highlight class="normal"></highlight></codeline>
<codeline lineno="1311"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>!defined(STBI_NO_HDR)<sp/>&amp;&amp;<sp/>!defined(STBI_NO_LINEAR)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1312"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>stbi__float_postprocess(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*result,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*x,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*y,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*comp,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>req_comp)</highlight></codeline>
<codeline lineno="1313"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1314"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(stbi__vertically_flip_on_load<sp/>&amp;&amp;<sp/>result<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="1315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>channels<sp/>=<sp/>req_comp<sp/>?<sp/>req_comp<sp/>:<sp/>*comp;</highlight></codeline>
<codeline lineno="1316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stbi__vertical_flip(result,<sp/>*x,<sp/>*y,<sp/>channels<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1317"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1318"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1319"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1320"><highlight class="normal"></highlight></codeline>
<codeline lineno="1321"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>STBI_NO_STDIO</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1322"><highlight class="normal"></highlight></codeline>
<codeline lineno="1323"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(_WIN32)<sp/>&amp;&amp;<sp/>defined(STBI_WINDOWS_UTF8)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1324"><highlight class="normal">STBI_EXTERN<sp/>__declspec(dllimport)<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__stdcall<sp/>MultiByteToWideChar(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>cp,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>flags,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*str,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>cbmb,<sp/></highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal"><sp/>*widestr,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>cchwide);</highlight></codeline>
<codeline lineno="1325"><highlight class="normal">STBI_EXTERN<sp/>__declspec(dllimport)<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__stdcall<sp/>WideCharToMultiByte(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>cp,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>flags,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal"><sp/>*widestr,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>cchwide,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*str,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>cbmb,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*defchar,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*used_default);</highlight></codeline>
<codeline lineno="1326"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1327"><highlight class="normal"></highlight></codeline>
<codeline lineno="1328"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(_WIN32)<sp/>&amp;&amp;<sp/>defined(STBI_WINDOWS_UTF8)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1329"><highlight class="normal"><ref refid="stb__image_8h_1a2d9ec9850cd12aefe7641b456266a4c2" kindref="member">STBIDEF</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>stbi_convert_wchar_to_utf8(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*buffer,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>bufferlen,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal">*<sp/>input)</highlight></codeline>
<codeline lineno="1330"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1331"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>WideCharToMultiByte(65001<sp/></highlight><highlight class="comment">/*<sp/>UTF8<sp/>*/</highlight><highlight class="normal">,<sp/>0,<sp/>input,<sp/>-1,<sp/>buffer,<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<sp/>bufferlen,<sp/>NULL,<sp/>NULL);</highlight></codeline>
<codeline lineno="1332"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1333"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1334"><highlight class="normal"></highlight></codeline>
<codeline lineno="1335"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>FILE<sp/>*stbi__fopen(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*filename,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*mode)</highlight></codeline>
<codeline lineno="1336"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1337"><highlight class="normal"><sp/><sp/><sp/>FILE<sp/>*f;</highlight></codeline>
<codeline lineno="1338"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(_WIN32)<sp/>&amp;&amp;<sp/>defined(STBI_WINDOWS_UTF8)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1339"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal"><sp/>wMode[64];</highlight></codeline>
<codeline lineno="1340"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal"><sp/>wFilename[1024];</highlight></codeline>
<codeline lineno="1341"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(0<sp/>==<sp/>MultiByteToWideChar(65001<sp/></highlight><highlight class="comment">/*<sp/>UTF8<sp/>*/</highlight><highlight class="normal">,<sp/>0,<sp/>filename,<sp/>-1,<sp/>wFilename,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(wFilename)/</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*wFilename)))</highlight></codeline>
<codeline lineno="1342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="1343"><highlight class="normal"></highlight></codeline>
<codeline lineno="1344"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(0<sp/>==<sp/>MultiByteToWideChar(65001<sp/></highlight><highlight class="comment">/*<sp/>UTF8<sp/>*/</highlight><highlight class="normal">,<sp/>0,<sp/>mode,<sp/>-1,<sp/>wMode,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(wMode)/</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*wMode)))</highlight></codeline>
<codeline lineno="1345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="1346"><highlight class="normal"></highlight></codeline>
<codeline lineno="1347"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(_MSC_VER)<sp/>&amp;&amp;<sp/>_MSC_VER<sp/>&gt;=<sp/>1400</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1348"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(0<sp/>!=<sp/>_wfopen_s(&amp;f,<sp/>wFilename,<sp/>wMode))</highlight></codeline>
<codeline lineno="1349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1350"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1351"><highlight class="normal"><sp/><sp/><sp/>f<sp/>=<sp/>_wfopen(wFilename,<sp/>wMode);</highlight></codeline>
<codeline lineno="1352"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1353"><highlight class="normal"></highlight></codeline>
<codeline lineno="1354"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>defined(_MSC_VER)<sp/>&amp;&amp;<sp/>_MSC_VER<sp/>&gt;=<sp/>1400</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1355"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(0<sp/>!=<sp/>fopen_s(&amp;f,<sp/>filename,<sp/>mode))</highlight></codeline>
<codeline lineno="1356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>f=0;</highlight></codeline>
<codeline lineno="1357"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1358"><highlight class="normal"><sp/><sp/><sp/>f<sp/>=<sp/>fopen(filename,<sp/>mode);</highlight></codeline>
<codeline lineno="1359"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1360"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>f;</highlight></codeline>
<codeline lineno="1361"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1362"><highlight class="normal"></highlight></codeline>
<codeline lineno="1363"><highlight class="normal"></highlight></codeline>
<codeline lineno="1364"><highlight class="normal"><ref refid="stb__image_8h_1a2d9ec9850cd12aefe7641b456266a4c2" kindref="member">STBIDEF</ref><sp/><ref refid="stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d" kindref="member">stbi_uc</ref><sp/>*<ref refid="stb__image_8h_1aefdc7387857a14894bbf321e9ea4f048" kindref="member">stbi_load</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*filename,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*x,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*y,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*comp,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>req_comp)</highlight></codeline>
<codeline lineno="1365"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1366"><highlight class="normal"><sp/><sp/><sp/>FILE<sp/>*f<sp/>=<sp/>stbi__fopen(filename,<sp/></highlight><highlight class="stringliteral">&quot;rb&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1367"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*result;</highlight></codeline>
<codeline lineno="1368"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!f)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stbi__errpuc(</highlight><highlight class="stringliteral">&quot;can&apos;t<sp/>fopen&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Unable<sp/>to<sp/>open<sp/>file&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1369"><highlight class="normal"><sp/><sp/><sp/>result<sp/>=<sp/><ref refid="stb__image_8h_1aa9994764695597161e8f3776e97caa99" kindref="member">stbi_load_from_file</ref>(f,x,y,comp,req_comp);</highlight></codeline>
<codeline lineno="1370"><highlight class="normal"><sp/><sp/><sp/>fclose(f);</highlight></codeline>
<codeline lineno="1371"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="1372"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1373"><highlight class="normal"></highlight></codeline>
<codeline lineno="1374"><highlight class="normal"><ref refid="stb__image_8h_1a2d9ec9850cd12aefe7641b456266a4c2" kindref="member">STBIDEF</ref><sp/><ref refid="stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d" kindref="member">stbi_uc</ref><sp/>*<ref refid="stb__image_8h_1aa9994764695597161e8f3776e97caa99" kindref="member">stbi_load_from_file</ref>(FILE<sp/>*f,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*x,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*y,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*comp,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>req_comp)</highlight></codeline>
<codeline lineno="1375"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1376"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*result;</highlight></codeline>
<codeline lineno="1377"><highlight class="normal"><sp/><sp/><sp/>stbi__context<sp/>s;</highlight></codeline>
<codeline lineno="1378"><highlight class="normal"><sp/><sp/><sp/>stbi__start_file(&amp;s,f);</highlight></codeline>
<codeline lineno="1379"><highlight class="normal"><sp/><sp/><sp/>result<sp/>=<sp/>stbi__load_and_postprocess_8bit(&amp;s,x,y,comp,req_comp);</highlight></codeline>
<codeline lineno="1380"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(result)<sp/>{</highlight></codeline>
<codeline lineno="1381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>need<sp/>to<sp/>&apos;unget&apos;<sp/>all<sp/>the<sp/>characters<sp/>in<sp/>the<sp/>IO<sp/>buffer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fseek(f,<sp/>-<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<sp/>(s.img_buffer_end<sp/>-<sp/>s.img_buffer),<sp/>SEEK_CUR);</highlight></codeline>
<codeline lineno="1383"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1384"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="1385"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1386"><highlight class="normal"></highlight></codeline>
<codeline lineno="1387"><highlight class="normal"><ref refid="stb__image_8h_1a2d9ec9850cd12aefe7641b456266a4c2" kindref="member">STBIDEF</ref><sp/>stbi__uint16<sp/>*<ref refid="stb__image_8h_1a9ca2591f0987284129e82bf9dbcf7c6c" kindref="member">stbi_load_from_file_16</ref>(FILE<sp/>*f,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*x,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*y,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*comp,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>req_comp)</highlight></codeline>
<codeline lineno="1388"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1389"><highlight class="normal"><sp/><sp/><sp/>stbi__uint16<sp/>*result;</highlight></codeline>
<codeline lineno="1390"><highlight class="normal"><sp/><sp/><sp/>stbi__context<sp/>s;</highlight></codeline>
<codeline lineno="1391"><highlight class="normal"><sp/><sp/><sp/>stbi__start_file(&amp;s,f);</highlight></codeline>
<codeline lineno="1392"><highlight class="normal"><sp/><sp/><sp/>result<sp/>=<sp/>stbi__load_and_postprocess_16bit(&amp;s,x,y,comp,req_comp);</highlight></codeline>
<codeline lineno="1393"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(result)<sp/>{</highlight></codeline>
<codeline lineno="1394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>need<sp/>to<sp/>&apos;unget&apos;<sp/>all<sp/>the<sp/>characters<sp/>in<sp/>the<sp/>IO<sp/>buffer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fseek(f,<sp/>-<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<sp/>(s.img_buffer_end<sp/>-<sp/>s.img_buffer),<sp/>SEEK_CUR);</highlight></codeline>
<codeline lineno="1396"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1397"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="1398"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1399"><highlight class="normal"></highlight></codeline>
<codeline lineno="1400"><highlight class="normal"><ref refid="stb__image_8h_1a2d9ec9850cd12aefe7641b456266a4c2" kindref="member">STBIDEF</ref><sp/><ref refid="stb__image_8h_1a648037d4c55689328ba08c8f5d293df2" kindref="member">stbi_us</ref><sp/>*<ref refid="stb__image_8h_1a8a58b6bcd805afa1bdb14f988dd37fee" kindref="member">stbi_load_16</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*filename,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*x,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*y,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*comp,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>req_comp)</highlight></codeline>
<codeline lineno="1401"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1402"><highlight class="normal"><sp/><sp/><sp/>FILE<sp/>*f<sp/>=<sp/>stbi__fopen(filename,<sp/></highlight><highlight class="stringliteral">&quot;rb&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1403"><highlight class="normal"><sp/><sp/><sp/>stbi__uint16<sp/>*result;</highlight></codeline>
<codeline lineno="1404"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!f)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="stb__image_8h_1a648037d4c55689328ba08c8f5d293df2" kindref="member">stbi_us</ref><sp/>*)<sp/>stbi__errpuc(</highlight><highlight class="stringliteral">&quot;can&apos;t<sp/>fopen&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Unable<sp/>to<sp/>open<sp/>file&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1405"><highlight class="normal"><sp/><sp/><sp/>result<sp/>=<sp/><ref refid="stb__image_8h_1a9ca2591f0987284129e82bf9dbcf7c6c" kindref="member">stbi_load_from_file_16</ref>(f,x,y,comp,req_comp);</highlight></codeline>
<codeline lineno="1406"><highlight class="normal"><sp/><sp/><sp/>fclose(f);</highlight></codeline>
<codeline lineno="1407"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="1408"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1409"><highlight class="normal"></highlight></codeline>
<codeline lineno="1410"><highlight class="normal"></highlight></codeline>
<codeline lineno="1411"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1412"><highlight class="normal"></highlight></codeline>
<codeline lineno="1413"><highlight class="normal"><ref refid="stb__image_8h_1a2d9ec9850cd12aefe7641b456266a4c2" kindref="member">STBIDEF</ref><sp/><ref refid="stb__image_8h_1a648037d4c55689328ba08c8f5d293df2" kindref="member">stbi_us</ref><sp/>*<ref refid="stb__image_8h_1ad30fd870ed2138ce8f38c9dd29b2f76a" kindref="member">stbi_load_16_from_memory</ref>(<ref refid="stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d" kindref="member">stbi_uc</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*buffer,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>len,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*x,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*y,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*channels_in_file,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>desired_channels)</highlight></codeline>
<codeline lineno="1414"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1415"><highlight class="normal"><sp/><sp/><sp/>stbi__context<sp/>s;</highlight></codeline>
<codeline lineno="1416"><highlight class="normal"><sp/><sp/><sp/>stbi__start_mem(&amp;s,buffer,len);</highlight></codeline>
<codeline lineno="1417"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stbi__load_and_postprocess_16bit(&amp;s,x,y,channels_in_file,desired_channels);</highlight></codeline>
<codeline lineno="1418"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1419"><highlight class="normal"></highlight></codeline>
<codeline lineno="1420"><highlight class="normal"><ref refid="stb__image_8h_1a2d9ec9850cd12aefe7641b456266a4c2" kindref="member">STBIDEF</ref><sp/><ref refid="stb__image_8h_1a648037d4c55689328ba08c8f5d293df2" kindref="member">stbi_us</ref><sp/>*<ref refid="stb__image_8h_1a82bcc0957b6a4ebfdfa3d7f04fbaed18" kindref="member">stbi_load_16_from_callbacks</ref>(<ref refid="structstbi__io__callbacks" kindref="compound">stbi_io_callbacks</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*clbk,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*user,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*x,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*y,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*channels_in_file,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>desired_channels)</highlight></codeline>
<codeline lineno="1421"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1422"><highlight class="normal"><sp/><sp/><sp/>stbi__context<sp/>s;</highlight></codeline>
<codeline lineno="1423"><highlight class="normal"><sp/><sp/><sp/>stbi__start_callbacks(&amp;s,<sp/>(<ref refid="structstbi__io__callbacks" kindref="compound">stbi_io_callbacks</ref><sp/>*)clbk,<sp/>user);</highlight></codeline>
<codeline lineno="1424"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stbi__load_and_postprocess_16bit(&amp;s,x,y,channels_in_file,desired_channels);</highlight></codeline>
<codeline lineno="1425"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1426"><highlight class="normal"></highlight></codeline>
<codeline lineno="1427"><highlight class="normal"><ref refid="stb__image_8h_1a2d9ec9850cd12aefe7641b456266a4c2" kindref="member">STBIDEF</ref><sp/><ref refid="stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d" kindref="member">stbi_uc</ref><sp/>*<ref refid="stb__image_8h_1acae25d31bfae29d75482f07fecf2935f" kindref="member">stbi_load_from_memory</ref>(<ref refid="stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d" kindref="member">stbi_uc</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*buffer,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>len,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*x,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*y,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*comp,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>req_comp)</highlight></codeline>
<codeline lineno="1428"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1429"><highlight class="normal"><sp/><sp/><sp/>stbi__context<sp/>s;</highlight></codeline>
<codeline lineno="1430"><highlight class="normal"><sp/><sp/><sp/>stbi__start_mem(&amp;s,buffer,len);</highlight></codeline>
<codeline lineno="1431"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stbi__load_and_postprocess_8bit(&amp;s,x,y,comp,req_comp);</highlight></codeline>
<codeline lineno="1432"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1433"><highlight class="normal"></highlight></codeline>
<codeline lineno="1434"><highlight class="normal"><ref refid="stb__image_8h_1a2d9ec9850cd12aefe7641b456266a4c2" kindref="member">STBIDEF</ref><sp/><ref refid="stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d" kindref="member">stbi_uc</ref><sp/>*<ref refid="stb__image_8h_1a95ebc5c42c1a753200be8d465e933af7" kindref="member">stbi_load_from_callbacks</ref>(<ref refid="structstbi__io__callbacks" kindref="compound">stbi_io_callbacks</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*clbk,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*user,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*x,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*y,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*comp,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>req_comp)</highlight></codeline>
<codeline lineno="1435"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1436"><highlight class="normal"><sp/><sp/><sp/>stbi__context<sp/>s;</highlight></codeline>
<codeline lineno="1437"><highlight class="normal"><sp/><sp/><sp/>stbi__start_callbacks(&amp;s,<sp/>(<ref refid="structstbi__io__callbacks" kindref="compound">stbi_io_callbacks</ref><sp/>*)<sp/>clbk,<sp/>user);</highlight></codeline>
<codeline lineno="1438"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stbi__load_and_postprocess_8bit(&amp;s,x,y,comp,req_comp);</highlight></codeline>
<codeline lineno="1439"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1440"><highlight class="normal"></highlight></codeline>
<codeline lineno="1441"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>STBI_NO_GIF</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1442"><highlight class="normal"><ref refid="stb__image_8h_1a2d9ec9850cd12aefe7641b456266a4c2" kindref="member">STBIDEF</ref><sp/><ref refid="stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d" kindref="member">stbi_uc</ref><sp/>*<ref refid="stb__image_8h_1ab81ccbc3526368d651117ef48df82b01" kindref="member">stbi_load_gif_from_memory</ref>(<ref refid="stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d" kindref="member">stbi_uc</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*buffer,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>len,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>**delays,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*x,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*y,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*z,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*comp,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>req_comp)</highlight></codeline>
<codeline lineno="1443"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1444"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*result;</highlight></codeline>
<codeline lineno="1445"><highlight class="normal"><sp/><sp/><sp/>stbi__context<sp/>s;</highlight></codeline>
<codeline lineno="1446"><highlight class="normal"><sp/><sp/><sp/>stbi__start_mem(&amp;s,buffer,len);</highlight></codeline>
<codeline lineno="1447"><highlight class="normal"></highlight></codeline>
<codeline lineno="1448"><highlight class="normal"><sp/><sp/><sp/>result<sp/>=<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)<sp/>stbi__load_gif_main(&amp;s,<sp/>delays,<sp/>x,<sp/>y,<sp/>z,<sp/>comp,<sp/>req_comp);</highlight></codeline>
<codeline lineno="1449"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(stbi__vertically_flip_on_load)<sp/>{</highlight></codeline>
<codeline lineno="1450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stbi__vertical_flip_slices(<sp/>result,<sp/>*x,<sp/>*y,<sp/>*z,<sp/>*comp<sp/>);</highlight></codeline>
<codeline lineno="1451"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1452"><highlight class="normal"></highlight></codeline>
<codeline lineno="1453"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="1454"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1455"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1456"><highlight class="normal"></highlight></codeline>
<codeline lineno="1457"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>STBI_NO_LINEAR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1458"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*stbi__loadf_main(stbi__context<sp/>*s,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*x,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*y,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*comp,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>req_comp)</highlight></codeline>
<codeline lineno="1459"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1460"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*data;</highlight></codeline>
<codeline lineno="1461"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#ifndef<sp/>STBI_NO_HDR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1462"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(stbi__hdr_test(s))<sp/>{</highlight></codeline>
<codeline lineno="1463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stbi__result_info<sp/>ri;</highlight></codeline>
<codeline lineno="1464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*hdr_data<sp/>=<sp/>stbi__hdr_load(s,x,y,comp,req_comp,<sp/>&amp;ri);</highlight></codeline>
<codeline lineno="1465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(hdr_data)</highlight></codeline>
<codeline lineno="1466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stbi__float_postprocess(hdr_data,x,y,comp,req_comp);</highlight></codeline>
<codeline lineno="1467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>hdr_data;</highlight></codeline>
<codeline lineno="1468"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1469"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1470"><highlight class="normal"><sp/><sp/><sp/>data<sp/>=<sp/>stbi__load_and_postprocess_8bit(s,<sp/>x,<sp/>y,<sp/>comp,<sp/>req_comp);</highlight></codeline>
<codeline lineno="1471"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(data)</highlight></codeline>
<codeline lineno="1472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stbi__ldr_to_hdr(data,<sp/>*x,<sp/>*y,<sp/>req_comp<sp/>?<sp/>req_comp<sp/>:<sp/>*comp);</highlight></codeline>
<codeline lineno="1473"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stbi__errpf(</highlight><highlight class="stringliteral">&quot;unknown<sp/>image<sp/>type&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Image<sp/>not<sp/>of<sp/>any<sp/>known<sp/>type,<sp/>or<sp/>corrupt&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1474"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1475"><highlight class="normal"></highlight></codeline>
<codeline lineno="1476"><highlight class="normal"><ref refid="stb__image_8h_1a2d9ec9850cd12aefe7641b456266a4c2" kindref="member">STBIDEF</ref><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*<ref refid="stb__image_8h_1a5d47fb76ce1e34eb0729ad932c9c48e2" kindref="member">stbi_loadf_from_memory</ref>(<ref refid="stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d" kindref="member">stbi_uc</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*buffer,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>len,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*x,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*y,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*comp,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>req_comp)</highlight></codeline>
<codeline lineno="1477"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1478"><highlight class="normal"><sp/><sp/><sp/>stbi__context<sp/>s;</highlight></codeline>
<codeline lineno="1479"><highlight class="normal"><sp/><sp/><sp/>stbi__start_mem(&amp;s,buffer,len);</highlight></codeline>
<codeline lineno="1480"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stbi__loadf_main(&amp;s,x,y,comp,req_comp);</highlight></codeline>
<codeline lineno="1481"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1482"><highlight class="normal"></highlight></codeline>
<codeline lineno="1483"><highlight class="normal"><ref refid="stb__image_8h_1a2d9ec9850cd12aefe7641b456266a4c2" kindref="member">STBIDEF</ref><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*<ref refid="stb__image_8h_1a6e7fd261af79ecef2208df3a6cc806bb" kindref="member">stbi_loadf_from_callbacks</ref>(<ref refid="structstbi__io__callbacks" kindref="compound">stbi_io_callbacks</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*clbk,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*user,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*x,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*y,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*comp,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>req_comp)</highlight></codeline>
<codeline lineno="1484"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1485"><highlight class="normal"><sp/><sp/><sp/>stbi__context<sp/>s;</highlight></codeline>
<codeline lineno="1486"><highlight class="normal"><sp/><sp/><sp/>stbi__start_callbacks(&amp;s,<sp/>(<ref refid="structstbi__io__callbacks" kindref="compound">stbi_io_callbacks</ref><sp/>*)<sp/>clbk,<sp/>user);</highlight></codeline>
<codeline lineno="1487"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stbi__loadf_main(&amp;s,x,y,comp,req_comp);</highlight></codeline>
<codeline lineno="1488"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1489"><highlight class="normal"></highlight></codeline>
<codeline lineno="1490"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>STBI_NO_STDIO</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1491"><highlight class="normal"><ref refid="stb__image_8h_1a2d9ec9850cd12aefe7641b456266a4c2" kindref="member">STBIDEF</ref><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*<ref refid="stb__image_8h_1af4f17acd30945a75901fdc022f90575f" kindref="member">stbi_loadf</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*filename,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*x,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*y,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*comp,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>req_comp)</highlight></codeline>
<codeline lineno="1492"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1493"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*result;</highlight></codeline>
<codeline lineno="1494"><highlight class="normal"><sp/><sp/><sp/>FILE<sp/>*f<sp/>=<sp/>stbi__fopen(filename,<sp/></highlight><highlight class="stringliteral">&quot;rb&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1495"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!f)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stbi__errpf(</highlight><highlight class="stringliteral">&quot;can&apos;t<sp/>fopen&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Unable<sp/>to<sp/>open<sp/>file&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1496"><highlight class="normal"><sp/><sp/><sp/>result<sp/>=<sp/><ref refid="stb__image_8h_1ace82446ecd7b5c760cde062179660f46" kindref="member">stbi_loadf_from_file</ref>(f,x,y,comp,req_comp);</highlight></codeline>
<codeline lineno="1497"><highlight class="normal"><sp/><sp/><sp/>fclose(f);</highlight></codeline>
<codeline lineno="1498"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="1499"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1500"><highlight class="normal"></highlight></codeline>
<codeline lineno="1501"><highlight class="normal"><ref refid="stb__image_8h_1a2d9ec9850cd12aefe7641b456266a4c2" kindref="member">STBIDEF</ref><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*<ref refid="stb__image_8h_1ace82446ecd7b5c760cde062179660f46" kindref="member">stbi_loadf_from_file</ref>(FILE<sp/>*f,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*x,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*y,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*comp,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>req_comp)</highlight></codeline>
<codeline lineno="1502"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1503"><highlight class="normal"><sp/><sp/><sp/>stbi__context<sp/>s;</highlight></codeline>
<codeline lineno="1504"><highlight class="normal"><sp/><sp/><sp/>stbi__start_file(&amp;s,f);</highlight></codeline>
<codeline lineno="1505"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stbi__loadf_main(&amp;s,x,y,comp,req_comp);</highlight></codeline>
<codeline lineno="1506"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1507"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>!STBI_NO_STDIO</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1508"><highlight class="normal"></highlight></codeline>
<codeline lineno="1509"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>!STBI_NO_LINEAR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1510"><highlight class="normal"></highlight></codeline>
<codeline lineno="1511"><highlight class="normal"></highlight><highlight class="comment">//<sp/>these<sp/>is-hdr-or-not<sp/>is<sp/>defined<sp/>independent<sp/>of<sp/>whether<sp/>STBI_NO_LINEAR<sp/>is</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1512"><highlight class="normal"></highlight><highlight class="comment">//<sp/>defined,<sp/>for<sp/>API<sp/>simplicity;<sp/>if<sp/>STBI_NO_LINEAR<sp/>is<sp/>defined,<sp/>it<sp/>always</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1513"><highlight class="normal"></highlight><highlight class="comment">//<sp/>reports<sp/>false!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1514"><highlight class="normal"></highlight></codeline>
<codeline lineno="1515"><highlight class="normal"><ref refid="stb__image_8h_1a2d9ec9850cd12aefe7641b456266a4c2" kindref="member">STBIDEF</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="stb__image_8h_1a5cbc6f5cbb3b2d0d87ee959fcee9d23e" kindref="member">stbi_is_hdr_from_memory</ref>(<ref refid="stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d" kindref="member">stbi_uc</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*buffer,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>len)</highlight></codeline>
<codeline lineno="1516"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1517"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#ifndef<sp/>STBI_NO_HDR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1518"><highlight class="normal"><sp/><sp/><sp/>stbi__context<sp/>s;</highlight></codeline>
<codeline lineno="1519"><highlight class="normal"><sp/><sp/><sp/>stbi__start_mem(&amp;s,buffer,len);</highlight></codeline>
<codeline lineno="1520"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stbi__hdr_test(&amp;s);</highlight></codeline>
<codeline lineno="1521"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1522"><highlight class="normal"><sp/><sp/><sp/>STBI_NOTUSED(buffer);</highlight></codeline>
<codeline lineno="1523"><highlight class="normal"><sp/><sp/><sp/>STBI_NOTUSED(len);</highlight></codeline>
<codeline lineno="1524"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="1525"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1526"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1527"><highlight class="normal"></highlight></codeline>
<codeline lineno="1528"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>STBI_NO_STDIO</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1529"><highlight class="normal"><ref refid="stb__image_8h_1a2d9ec9850cd12aefe7641b456266a4c2" kindref="member">STBIDEF</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stb__image_8h_1ae70f9a302f7e87fd971075e7f758d55c" kindref="member">stbi_is_hdr</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*filename)</highlight></codeline>
<codeline lineno="1530"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1531"><highlight class="normal"><sp/><sp/><sp/>FILE<sp/>*f<sp/>=<sp/>stbi__fopen(filename,<sp/></highlight><highlight class="stringliteral">&quot;rb&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1532"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>result=0;</highlight></codeline>
<codeline lineno="1533"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(f)<sp/>{</highlight></codeline>
<codeline lineno="1534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/><ref refid="stb__image_8h_1aaf10d41631e1e9214fde1688bdbd8524" kindref="member">stbi_is_hdr_from_file</ref>(f);</highlight></codeline>
<codeline lineno="1535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fclose(f);</highlight></codeline>
<codeline lineno="1536"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1537"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="1538"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1539"><highlight class="normal"></highlight></codeline>
<codeline lineno="1540"><highlight class="normal"><ref refid="stb__image_8h_1a2d9ec9850cd12aefe7641b456266a4c2" kindref="member">STBIDEF</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="stb__image_8h_1aaf10d41631e1e9214fde1688bdbd8524" kindref="member">stbi_is_hdr_from_file</ref>(FILE<sp/>*f)</highlight></codeline>
<codeline lineno="1541"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1542"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#ifndef<sp/>STBI_NO_HDR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1543"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>pos<sp/>=<sp/>ftell(f);</highlight></codeline>
<codeline lineno="1544"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>res;</highlight></codeline>
<codeline lineno="1545"><highlight class="normal"><sp/><sp/><sp/>stbi__context<sp/>s;</highlight></codeline>
<codeline lineno="1546"><highlight class="normal"><sp/><sp/><sp/>stbi__start_file(&amp;s,f);</highlight></codeline>
<codeline lineno="1547"><highlight class="normal"><sp/><sp/><sp/>res<sp/>=<sp/>stbi__hdr_test(&amp;s);</highlight></codeline>
<codeline lineno="1548"><highlight class="normal"><sp/><sp/><sp/>fseek(f,<sp/>pos,<sp/>SEEK_SET);</highlight></codeline>
<codeline lineno="1549"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>res;</highlight></codeline>
<codeline lineno="1550"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1551"><highlight class="normal"><sp/><sp/><sp/>STBI_NOTUSED(f);</highlight></codeline>
<codeline lineno="1552"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="1553"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1554"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1555"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>!STBI_NO_STDIO</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1556"><highlight class="normal"></highlight></codeline>
<codeline lineno="1557"><highlight class="normal"><ref refid="stb__image_8h_1a2d9ec9850cd12aefe7641b456266a4c2" kindref="member">STBIDEF</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stb__image_8h_1af0e94f316fe1848f632517ca3c11d077" kindref="member">stbi_is_hdr_from_callbacks</ref>(<ref refid="structstbi__io__callbacks" kindref="compound">stbi_io_callbacks</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*clbk,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*user)</highlight></codeline>
<codeline lineno="1558"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1559"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#ifndef<sp/>STBI_NO_HDR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1560"><highlight class="normal"><sp/><sp/><sp/>stbi__context<sp/>s;</highlight></codeline>
<codeline lineno="1561"><highlight class="normal"><sp/><sp/><sp/>stbi__start_callbacks(&amp;s,<sp/>(<ref refid="structstbi__io__callbacks" kindref="compound">stbi_io_callbacks</ref><sp/>*)<sp/>clbk,<sp/>user);</highlight></codeline>
<codeline lineno="1562"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stbi__hdr_test(&amp;s);</highlight></codeline>
<codeline lineno="1563"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1564"><highlight class="normal"><sp/><sp/><sp/>STBI_NOTUSED(clbk);</highlight></codeline>
<codeline lineno="1565"><highlight class="normal"><sp/><sp/><sp/>STBI_NOTUSED(user);</highlight></codeline>
<codeline lineno="1566"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="1567"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1568"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1569"><highlight class="normal"></highlight></codeline>
<codeline lineno="1570"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>STBI_NO_LINEAR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1571"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>stbi__l2h_gamma=2.2f,<sp/>stbi__l2h_scale=1.0f;</highlight></codeline>
<codeline lineno="1572"><highlight class="normal"></highlight></codeline>
<codeline lineno="1573"><highlight class="normal"><ref refid="stb__image_8h_1a2d9ec9850cd12aefe7641b456266a4c2" kindref="member">STBIDEF</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><ref refid="stb__image_8h_1a1feccdcf726dcc6b5502e3efa85b7dbb" kindref="member">stbi_ldr_to_hdr_gamma</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>gamma)<sp/>{<sp/>stbi__l2h_gamma<sp/>=<sp/>gamma;<sp/>}</highlight></codeline>
<codeline lineno="1574"><highlight class="normal"><ref refid="stb__image_8h_1a2d9ec9850cd12aefe7641b456266a4c2" kindref="member">STBIDEF</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><ref refid="stb__image_8h_1af946583656a362a316b40c0421c20561" kindref="member">stbi_ldr_to_hdr_scale</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>scale)<sp/>{<sp/>stbi__l2h_scale<sp/>=<sp/>scale;<sp/>}</highlight></codeline>
<codeline lineno="1575"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1576"><highlight class="normal"></highlight></codeline>
<codeline lineno="1577"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>stbi__h2l_gamma_i=1.0f/2.2f,<sp/>stbi__h2l_scale_i=1.0f;</highlight></codeline>
<codeline lineno="1578"><highlight class="normal"></highlight></codeline>
<codeline lineno="1579"><highlight class="normal"><ref refid="stb__image_8h_1a2d9ec9850cd12aefe7641b456266a4c2" kindref="member">STBIDEF</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><ref refid="stb__image_8h_1ab18889e43518d6b4421b705782bb1b5e" kindref="member">stbi_hdr_to_ldr_gamma</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>gamma)<sp/>{<sp/>stbi__h2l_gamma_i<sp/>=<sp/>1/gamma;<sp/>}</highlight></codeline>
<codeline lineno="1580"><highlight class="normal"><ref refid="stb__image_8h_1a2d9ec9850cd12aefe7641b456266a4c2" kindref="member">STBIDEF</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><ref refid="stb__image_8h_1ae21cc1184eeb5cc814699f1ed62c5258" kindref="member">stbi_hdr_to_ldr_scale</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>scale)<sp/>{<sp/>stbi__h2l_scale_i<sp/>=<sp/>1/scale;<sp/>}</highlight></codeline>
<codeline lineno="1581"><highlight class="normal"></highlight></codeline>
<codeline lineno="1582"><highlight class="normal"></highlight></codeline>
<codeline lineno="1584"><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1585"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Common<sp/>code<sp/>used<sp/>by<sp/>all<sp/>image<sp/>loaders</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1586"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1587"><highlight class="normal"></highlight></codeline>
<codeline lineno="1588"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1589"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1590"><highlight class="normal"><sp/><sp/><sp/>STBI__SCAN_load=0,</highlight></codeline>
<codeline lineno="1591"><highlight class="normal"><sp/><sp/><sp/>STBI__SCAN_type,</highlight></codeline>
<codeline lineno="1592"><highlight class="normal"><sp/><sp/><sp/>STBI__SCAN_header</highlight></codeline>
<codeline lineno="1593"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1594"><highlight class="normal"></highlight></codeline>
<codeline lineno="1595"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>stbi__refill_buffer(stbi__context<sp/>*s)</highlight></codeline>
<codeline lineno="1596"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1597"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n<sp/>=<sp/>(s-&gt;io.read)(s-&gt;io_user_data,(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)s-&gt;buffer_start,s-&gt;buflen);</highlight></codeline>
<codeline lineno="1598"><highlight class="normal"><sp/><sp/><sp/>s-&gt;callback_already_read<sp/>+=<sp/>(int)<sp/>(s-&gt;img_buffer<sp/>-<sp/>s-&gt;img_buffer_original);</highlight></codeline>
<codeline lineno="1599"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(n<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1600"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>at<sp/>end<sp/>of<sp/>file,<sp/>treat<sp/>same<sp/>as<sp/>if<sp/>from<sp/>memory,<sp/>but<sp/>need<sp/>to<sp/>handle<sp/>case</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1601"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>where<sp/>s-&gt;img_buffer<sp/>isn&apos;t<sp/>pointing<sp/>to<sp/>safe<sp/>memory,<sp/>e.g.<sp/>0-byte<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1602"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>s-&gt;read_from_callbacks<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1603"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>s-&gt;img_buffer<sp/>=<sp/>s-&gt;buffer_start;</highlight></codeline>
<codeline lineno="1604"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>s-&gt;img_buffer_end<sp/>=<sp/>s-&gt;buffer_start+1;</highlight></codeline>
<codeline lineno="1605"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*s-&gt;img_buffer<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1606"><highlight class="normal"><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1607"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>s-&gt;img_buffer<sp/>=<sp/>s-&gt;buffer_start;</highlight></codeline>
<codeline lineno="1608"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>s-&gt;img_buffer_end<sp/>=<sp/>s-&gt;buffer_start<sp/>+<sp/>n;</highlight></codeline>
<codeline lineno="1609"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1610"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1611"><highlight class="normal"></highlight></codeline>
<codeline lineno="1612"><highlight class="normal">stbi_inline<sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d" kindref="member">stbi_uc</ref><sp/>stbi__get8(stbi__context<sp/>*s)</highlight></codeline>
<codeline lineno="1613"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1614"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(s-&gt;img_buffer<sp/>&lt;<sp/>s-&gt;img_buffer_end)</highlight></codeline>
<codeline lineno="1615"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*s-&gt;img_buffer++;</highlight></codeline>
<codeline lineno="1616"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(s-&gt;read_from_callbacks)<sp/>{</highlight></codeline>
<codeline lineno="1617"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stbi__refill_buffer(s);</highlight></codeline>
<codeline lineno="1618"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*s-&gt;img_buffer++;</highlight></codeline>
<codeline lineno="1619"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1620"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="1621"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1622"><highlight class="normal"></highlight></codeline>
<codeline lineno="1623"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(STBI_NO_JPEG)<sp/>&amp;&amp;<sp/>defined(STBI_NO_HDR)<sp/>&amp;&amp;<sp/>defined(STBI_NO_PIC)<sp/>&amp;&amp;<sp/>defined(STBI_NO_PNM)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1624"><highlight class="normal"></highlight><highlight class="comment">//<sp/>nothing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1625"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1626"><highlight class="normal">stbi_inline<sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>stbi__at_eof(stbi__context<sp/>*s)</highlight></codeline>
<codeline lineno="1627"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1628"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(s-&gt;io.read)<sp/>{</highlight></codeline>
<codeline lineno="1629"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(s-&gt;io.eof)(s-&gt;io_user_data))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="1630"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>feof()<sp/>is<sp/>true,<sp/>check<sp/>if<sp/>buffer<sp/>=<sp/>end</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1631"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>special<sp/>case:<sp/>we&apos;ve<sp/>only<sp/>got<sp/>the<sp/>special<sp/>0<sp/>character<sp/>at<sp/>the<sp/>end</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1632"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(s-&gt;read_from_callbacks<sp/>==<sp/>0)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="1633"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1634"><highlight class="normal"></highlight></codeline>
<codeline lineno="1635"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>s-&gt;img_buffer<sp/>&gt;=<sp/>s-&gt;img_buffer_end;</highlight></codeline>
<codeline lineno="1636"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1637"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1638"><highlight class="normal"></highlight></codeline>
<codeline lineno="1639"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(STBI_NO_JPEG)<sp/>&amp;&amp;<sp/>defined(STBI_NO_PNG)<sp/>&amp;&amp;<sp/>defined(STBI_NO_BMP)<sp/>&amp;&amp;<sp/>defined(STBI_NO_PSD)<sp/>&amp;&amp;<sp/>defined(STBI_NO_TGA)<sp/>&amp;&amp;<sp/>defined(STBI_NO_GIF)<sp/>&amp;&amp;<sp/>defined(STBI_NO_PIC)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1640"><highlight class="normal"></highlight><highlight class="comment">//<sp/>nothing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1641"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1642"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>stbi__skip(stbi__context<sp/>*s,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n)</highlight></codeline>
<codeline lineno="1643"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1644"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(n<sp/>==<sp/>0)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;<sp/><sp/></highlight><highlight class="comment">//<sp/>already<sp/>there!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1645"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(n<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1646"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>s-&gt;img_buffer<sp/>=<sp/>s-&gt;img_buffer_end;</highlight></codeline>
<codeline lineno="1647"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1648"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1649"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(s-&gt;io.read)<sp/>{</highlight></codeline>
<codeline lineno="1650"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>blen<sp/>=<sp/>(int)<sp/>(s-&gt;img_buffer_end<sp/>-<sp/>s-&gt;img_buffer);</highlight></codeline>
<codeline lineno="1651"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(blen<sp/>&lt;<sp/>n)<sp/>{</highlight></codeline>
<codeline lineno="1652"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s-&gt;img_buffer<sp/>=<sp/>s-&gt;img_buffer_end;</highlight></codeline>
<codeline lineno="1653"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(s-&gt;io.skip)(s-&gt;io_user_data,<sp/>n<sp/>-<sp/>blen);</highlight></codeline>
<codeline lineno="1654"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1655"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1656"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1657"><highlight class="normal"><sp/><sp/><sp/>s-&gt;img_buffer<sp/>+=<sp/>n;</highlight></codeline>
<codeline lineno="1658"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1659"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1660"><highlight class="normal"></highlight></codeline>
<codeline lineno="1661"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(STBI_NO_PNG)<sp/>&amp;&amp;<sp/>defined(STBI_NO_TGA)<sp/>&amp;&amp;<sp/>defined(STBI_NO_HDR)<sp/>&amp;&amp;<sp/>defined(STBI_NO_PNM)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1662"><highlight class="normal"></highlight><highlight class="comment">//<sp/>nothing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1663"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1664"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>stbi__getn(stbi__context<sp/>*s,<sp/><ref refid="stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d" kindref="member">stbi_uc</ref><sp/>*buffer,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n)</highlight></codeline>
<codeline lineno="1665"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1666"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(s-&gt;io.read)<sp/>{</highlight></codeline>
<codeline lineno="1667"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>blen<sp/>=<sp/>(int)<sp/>(s-&gt;img_buffer_end<sp/>-<sp/>s-&gt;img_buffer);</highlight></codeline>
<codeline lineno="1668"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(blen<sp/>&lt;<sp/>n)<sp/>{</highlight></codeline>
<codeline lineno="1669"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>res,<sp/>count;</highlight></codeline>
<codeline lineno="1670"><highlight class="normal"></highlight></codeline>
<codeline lineno="1671"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(buffer,<sp/>s-&gt;img_buffer,<sp/>blen);</highlight></codeline>
<codeline lineno="1672"><highlight class="normal"></highlight></codeline>
<codeline lineno="1673"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>count<sp/>=<sp/>(s-&gt;io.read)(s-&gt;io_user_data,<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)<sp/>buffer<sp/>+<sp/>blen,<sp/>n<sp/>-<sp/>blen);</highlight></codeline>
<codeline lineno="1674"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>res<sp/>=<sp/>(count<sp/>==<sp/>(n-blen));</highlight></codeline>
<codeline lineno="1675"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s-&gt;img_buffer<sp/>=<sp/>s-&gt;img_buffer_end;</highlight></codeline>
<codeline lineno="1676"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>res;</highlight></codeline>
<codeline lineno="1677"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1678"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1679"><highlight class="normal"></highlight></codeline>
<codeline lineno="1680"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(s-&gt;img_buffer+n<sp/>&lt;=<sp/>s-&gt;img_buffer_end)<sp/>{</highlight></codeline>
<codeline lineno="1681"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(buffer,<sp/>s-&gt;img_buffer,<sp/>n);</highlight></codeline>
<codeline lineno="1682"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>s-&gt;img_buffer<sp/>+=<sp/>n;</highlight></codeline>
<codeline lineno="1683"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="1684"><highlight class="normal"><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1685"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="1686"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1687"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1688"><highlight class="normal"></highlight></codeline>
<codeline lineno="1689"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(STBI_NO_JPEG)<sp/>&amp;&amp;<sp/>defined(STBI_NO_PNG)<sp/>&amp;&amp;<sp/>defined(STBI_NO_PSD)<sp/>&amp;&amp;<sp/>defined(STBI_NO_PIC)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1690"><highlight class="normal"></highlight><highlight class="comment">//<sp/>nothing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1691"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1692"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>stbi__get16be(stbi__context<sp/>*s)</highlight></codeline>
<codeline lineno="1693"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1694"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>z<sp/>=<sp/>stbi__get8(s);</highlight></codeline>
<codeline lineno="1695"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(z<sp/>&lt;&lt;<sp/>8)<sp/>+<sp/>stbi__get8(s);</highlight></codeline>
<codeline lineno="1696"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1697"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1698"><highlight class="normal"></highlight></codeline>
<codeline lineno="1699"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(STBI_NO_PNG)<sp/>&amp;&amp;<sp/>defined(STBI_NO_PSD)<sp/>&amp;&amp;<sp/>defined(STBI_NO_PIC)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1700"><highlight class="normal"></highlight><highlight class="comment">//<sp/>nothing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1701"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1702"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>stbi__uint32<sp/>stbi__get32be(stbi__context<sp/>*s)</highlight></codeline>
<codeline lineno="1703"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1704"><highlight class="normal"><sp/><sp/><sp/>stbi__uint32<sp/>z<sp/>=<sp/>stbi__get16be(s);</highlight></codeline>
<codeline lineno="1705"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(z<sp/>&lt;&lt;<sp/>16)<sp/>+<sp/>stbi__get16be(s);</highlight></codeline>
<codeline lineno="1706"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1707"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1708"><highlight class="normal"></highlight></codeline>
<codeline lineno="1709"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(STBI_NO_BMP)<sp/>&amp;&amp;<sp/>defined(STBI_NO_TGA)<sp/>&amp;&amp;<sp/>defined(STBI_NO_GIF)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1710"><highlight class="normal"></highlight><highlight class="comment">//<sp/>nothing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1711"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1712"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>stbi__get16le(stbi__context<sp/>*s)</highlight></codeline>
<codeline lineno="1713"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1714"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>z<sp/>=<sp/>stbi__get8(s);</highlight></codeline>
<codeline lineno="1715"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>z<sp/>+<sp/>(stbi__get8(s)<sp/>&lt;&lt;<sp/>8);</highlight></codeline>
<codeline lineno="1716"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1717"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1718"><highlight class="normal"></highlight></codeline>
<codeline lineno="1719"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>STBI_NO_BMP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1720"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>stbi__uint32<sp/>stbi__get32le(stbi__context<sp/>*s)</highlight></codeline>
<codeline lineno="1721"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1722"><highlight class="normal"><sp/><sp/><sp/>stbi__uint32<sp/>z<sp/>=<sp/>stbi__get16le(s);</highlight></codeline>
<codeline lineno="1723"><highlight class="normal"><sp/><sp/><sp/>z<sp/>+=<sp/>(stbi__uint32)stbi__get16le(s)<sp/>&lt;&lt;<sp/>16;</highlight></codeline>
<codeline lineno="1724"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>z;</highlight></codeline>
<codeline lineno="1725"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1726"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1727"><highlight class="normal"></highlight></codeline>
<codeline lineno="1728"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>STBI__BYTECAST(x)<sp/><sp/>((stbi_uc)<sp/>((x)<sp/>&amp;<sp/>255))<sp/><sp/></highlight><highlight class="comment">//<sp/>truncate<sp/>int<sp/>to<sp/>byte<sp/>without<sp/>warnings</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1729"><highlight class="normal"></highlight></codeline>
<codeline lineno="1730"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(STBI_NO_JPEG)<sp/>&amp;&amp;<sp/>defined(STBI_NO_PNG)<sp/>&amp;&amp;<sp/>defined(STBI_NO_BMP)<sp/>&amp;&amp;<sp/>defined(STBI_NO_PSD)<sp/>&amp;&amp;<sp/>defined(STBI_NO_TGA)<sp/>&amp;&amp;<sp/>defined(STBI_NO_GIF)<sp/>&amp;&amp;<sp/>defined(STBI_NO_PIC)<sp/>&amp;&amp;<sp/>defined(STBI_NO_PNM)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1731"><highlight class="normal"></highlight><highlight class="comment">//<sp/>nothing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1732"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="1734"><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1735"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>generic<sp/>converter<sp/>from<sp/>built-in<sp/>img_n<sp/>to<sp/>req_comp</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1736"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>individual<sp/>types<sp/>do<sp/>this<sp/>automatically<sp/>as<sp/>much<sp/>as<sp/>possible<sp/>(e.g.<sp/>jpeg</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1737"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>does<sp/>all<sp/>cases<sp/>internally<sp/>since<sp/>it<sp/>needs<sp/>to<sp/>colorspace<sp/>convert<sp/>anyway,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1738"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>and<sp/>it<sp/>never<sp/>has<sp/>alpha,<sp/>so<sp/>very<sp/>few<sp/>cases<sp/>).<sp/>png<sp/>can<sp/>automatically</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1739"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>interleave<sp/>an<sp/>alpha=255<sp/>channel,<sp/>but<sp/>falls<sp/>back<sp/>to<sp/>this<sp/>for<sp/>other<sp/>cases</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1740"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1741"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>assume<sp/>data<sp/>buffer<sp/>is<sp/>malloced,<sp/>so<sp/>malloc<sp/>a<sp/>new<sp/>one<sp/>and<sp/>free<sp/>that<sp/>one</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1742"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>only<sp/>failure<sp/>mode<sp/>is<sp/>malloc<sp/>failing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1743"><highlight class="normal"></highlight></codeline>
<codeline lineno="1744"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d" kindref="member">stbi_uc</ref><sp/>stbi__compute_y(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>r,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>g,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>b)</highlight></codeline>
<codeline lineno="1745"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1746"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d" kindref="member">stbi_uc</ref>)<sp/>(((r*77)<sp/>+<sp/>(g*150)<sp/>+<sp/><sp/>(29*b))<sp/>&gt;&gt;<sp/>8);</highlight></codeline>
<codeline lineno="1747"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1748"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1749"><highlight class="normal"></highlight></codeline>
<codeline lineno="1750"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(STBI_NO_PNG)<sp/>&amp;&amp;<sp/>defined(STBI_NO_BMP)<sp/>&amp;&amp;<sp/>defined(STBI_NO_PSD)<sp/>&amp;&amp;<sp/>defined(STBI_NO_TGA)<sp/>&amp;&amp;<sp/>defined(STBI_NO_GIF)<sp/>&amp;&amp;<sp/>defined(STBI_NO_PIC)<sp/>&amp;&amp;<sp/>defined(STBI_NO_PNM)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1751"><highlight class="normal"></highlight><highlight class="comment">//<sp/>nothing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1752"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1753"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*stbi__convert_format(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*data,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>img_n,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>req_comp,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y)</highlight></codeline>
<codeline lineno="1754"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1755"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,j;</highlight></codeline>
<codeline lineno="1756"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*good;</highlight></codeline>
<codeline lineno="1757"><highlight class="normal"></highlight></codeline>
<codeline lineno="1758"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(req_comp<sp/>==<sp/>img_n)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>data;</highlight></codeline>
<codeline lineno="1759"><highlight class="normal"><sp/><sp/><sp/>STBI_ASSERT(req_comp<sp/>&gt;=<sp/>1<sp/>&amp;&amp;<sp/>req_comp<sp/>&lt;=<sp/>4);</highlight></codeline>
<codeline lineno="1760"><highlight class="normal"></highlight></codeline>
<codeline lineno="1761"><highlight class="normal"><sp/><sp/><sp/>good<sp/>=<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)<sp/>stbi__malloc_mad3(req_comp,<sp/>x,<sp/>y,<sp/>0);</highlight></codeline>
<codeline lineno="1762"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(good<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="1763"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>STBI_FREE(data);</highlight></codeline>
<codeline lineno="1764"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stbi__errpuc(</highlight><highlight class="stringliteral">&quot;outofmem&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Out<sp/>of<sp/>memory&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1765"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1766"><highlight class="normal"></highlight></codeline>
<codeline lineno="1767"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(j=0;<sp/>j<sp/>&lt;<sp/>(int)<sp/>y;<sp/>++j)<sp/>{</highlight></codeline>
<codeline lineno="1768"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*src<sp/><sp/>=<sp/>data<sp/>+<sp/>j<sp/>*<sp/>x<sp/>*<sp/>img_n<sp/><sp/><sp/>;</highlight></codeline>
<codeline lineno="1769"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*dest<sp/>=<sp/>good<sp/>+<sp/>j<sp/>*<sp/>x<sp/>*<sp/>req_comp;</highlight></codeline>
<codeline lineno="1770"><highlight class="normal"></highlight></codeline>
<codeline lineno="1771"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#define<sp/>STBI__COMBO(a,b)<sp/><sp/>((a)*8+(b))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1772"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#define<sp/>STBI__CASE(a,b)<sp/><sp/><sp/>case<sp/>STBI__COMBO(a,b):<sp/>for(i=x-1;<sp/>i<sp/>&gt;=<sp/>0;<sp/>--i,<sp/>src<sp/>+=<sp/>a,<sp/>dest<sp/>+=<sp/>b)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1773"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>convert<sp/>source<sp/>image<sp/>with<sp/>img_n<sp/>components<sp/>to<sp/>one<sp/>with<sp/>req_comp<sp/>components;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1774"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>avoid<sp/>switch<sp/>per<sp/>pixel,<sp/>so<sp/>use<sp/>switch<sp/>per<sp/>scanline<sp/>and<sp/>massive<sp/>macros</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1775"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(STBI__COMBO(img_n,<sp/>req_comp))<sp/>{</highlight></codeline>
<codeline lineno="1776"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>STBI__CASE(1,2)<sp/>{<sp/>dest[0]=src[0];<sp/>dest[1]=255;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1777"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>STBI__CASE(1,3)<sp/>{<sp/>dest[0]=dest[1]=dest[2]=src[0];<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1778"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>STBI__CASE(1,4)<sp/>{<sp/>dest[0]=dest[1]=dest[2]=src[0];<sp/>dest[3]=255;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1779"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>STBI__CASE(2,1)<sp/>{<sp/>dest[0]=src[0];<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1780"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>STBI__CASE(2,3)<sp/>{<sp/>dest[0]=dest[1]=dest[2]=src[0];<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1781"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>STBI__CASE(2,4)<sp/>{<sp/>dest[0]=dest[1]=dest[2]=src[0];<sp/>dest[3]=src[1];<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1782"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>STBI__CASE(3,4)<sp/>{<sp/>dest[0]=src[0];dest[1]=src[1];dest[2]=src[2];dest[3]=255;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1783"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>STBI__CASE(3,1)<sp/>{<sp/>dest[0]=stbi__compute_y(src[0],src[1],src[2]);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1784"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>STBI__CASE(3,2)<sp/>{<sp/>dest[0]=stbi__compute_y(src[0],src[1],src[2]);<sp/>dest[1]<sp/>=<sp/>255;<sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1785"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>STBI__CASE(4,1)<sp/>{<sp/>dest[0]=stbi__compute_y(src[0],src[1],src[2]);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1786"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>STBI__CASE(4,2)<sp/>{<sp/>dest[0]=stbi__compute_y(src[0],src[1],src[2]);<sp/>dest[1]<sp/>=<sp/>src[3];<sp/>}<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1787"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>STBI__CASE(4,3)<sp/>{<sp/>dest[0]=src[0];dest[1]=src[1];dest[2]=src[2];<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1788"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:<sp/>STBI_ASSERT(0);<sp/>STBI_FREE(data);<sp/>STBI_FREE(good);<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stbi__errpuc(</highlight><highlight class="stringliteral">&quot;unsupported&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Unsupported<sp/>format<sp/>conversion&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1789"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1790"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#undef<sp/>STBI__CASE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1791"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1792"><highlight class="normal"></highlight></codeline>
<codeline lineno="1793"><highlight class="normal"><sp/><sp/><sp/>STBI_FREE(data);</highlight></codeline>
<codeline lineno="1794"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>good;</highlight></codeline>
<codeline lineno="1795"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1796"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1797"><highlight class="normal"></highlight></codeline>
<codeline lineno="1798"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(STBI_NO_PNG)<sp/>&amp;&amp;<sp/>defined(STBI_NO_PSD)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1799"><highlight class="normal"></highlight><highlight class="comment">//<sp/>nothing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1800"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1801"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>stbi__uint16<sp/>stbi__compute_y_16(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>r,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>g,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>b)</highlight></codeline>
<codeline lineno="1802"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1803"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(stbi__uint16)<sp/>(((r*77)<sp/>+<sp/>(g*150)<sp/>+<sp/><sp/>(29*b))<sp/>&gt;&gt;<sp/>8);</highlight></codeline>
<codeline lineno="1804"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1805"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1806"><highlight class="normal"></highlight></codeline>
<codeline lineno="1807"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(STBI_NO_PNG)<sp/>&amp;&amp;<sp/>defined(STBI_NO_PSD)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1808"><highlight class="normal"></highlight><highlight class="comment">//<sp/>nothing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1809"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1810"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>stbi__uint16<sp/>*stbi__convert_format16(stbi__uint16<sp/>*data,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>img_n,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>req_comp,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y)</highlight></codeline>
<codeline lineno="1811"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1812"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,j;</highlight></codeline>
<codeline lineno="1813"><highlight class="normal"><sp/><sp/><sp/>stbi__uint16<sp/>*good;</highlight></codeline>
<codeline lineno="1814"><highlight class="normal"></highlight></codeline>
<codeline lineno="1815"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(req_comp<sp/>==<sp/>img_n)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>data;</highlight></codeline>
<codeline lineno="1816"><highlight class="normal"><sp/><sp/><sp/>STBI_ASSERT(req_comp<sp/>&gt;=<sp/>1<sp/>&amp;&amp;<sp/>req_comp<sp/>&lt;=<sp/>4);</highlight></codeline>
<codeline lineno="1817"><highlight class="normal"></highlight></codeline>
<codeline lineno="1818"><highlight class="normal"><sp/><sp/><sp/>good<sp/>=<sp/>(stbi__uint16<sp/>*)<sp/>stbi__malloc(req_comp<sp/>*<sp/>x<sp/>*<sp/>y<sp/>*<sp/>2);</highlight></codeline>
<codeline lineno="1819"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(good<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="1820"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>STBI_FREE(data);</highlight></codeline>
<codeline lineno="1821"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(stbi__uint16<sp/>*)<sp/>stbi__errpuc(</highlight><highlight class="stringliteral">&quot;outofmem&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Out<sp/>of<sp/>memory&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1822"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1823"><highlight class="normal"></highlight></codeline>
<codeline lineno="1824"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(j=0;<sp/>j<sp/>&lt;<sp/>(int)<sp/>y;<sp/>++j)<sp/>{</highlight></codeline>
<codeline lineno="1825"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stbi__uint16<sp/>*src<sp/><sp/>=<sp/>data<sp/>+<sp/>j<sp/>*<sp/>x<sp/>*<sp/>img_n<sp/><sp/><sp/>;</highlight></codeline>
<codeline lineno="1826"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stbi__uint16<sp/>*dest<sp/>=<sp/>good<sp/>+<sp/>j<sp/>*<sp/>x<sp/>*<sp/>req_comp;</highlight></codeline>
<codeline lineno="1827"><highlight class="normal"></highlight></codeline>
<codeline lineno="1828"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#define<sp/>STBI__COMBO(a,b)<sp/><sp/>((a)*8+(b))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1829"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#define<sp/>STBI__CASE(a,b)<sp/><sp/><sp/>case<sp/>STBI__COMBO(a,b):<sp/>for(i=x-1;<sp/>i<sp/>&gt;=<sp/>0;<sp/>--i,<sp/>src<sp/>+=<sp/>a,<sp/>dest<sp/>+=<sp/>b)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1830"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>convert<sp/>source<sp/>image<sp/>with<sp/>img_n<sp/>components<sp/>to<sp/>one<sp/>with<sp/>req_comp<sp/>components;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1831"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>avoid<sp/>switch<sp/>per<sp/>pixel,<sp/>so<sp/>use<sp/>switch<sp/>per<sp/>scanline<sp/>and<sp/>massive<sp/>macros</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1832"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(STBI__COMBO(img_n,<sp/>req_comp))<sp/>{</highlight></codeline>
<codeline lineno="1833"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>STBI__CASE(1,2)<sp/>{<sp/>dest[0]=src[0];<sp/>dest[1]=0xffff;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1834"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>STBI__CASE(1,3)<sp/>{<sp/>dest[0]=dest[1]=dest[2]=src[0];<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1835"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>STBI__CASE(1,4)<sp/>{<sp/>dest[0]=dest[1]=dest[2]=src[0];<sp/>dest[3]=0xffff;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1836"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>STBI__CASE(2,1)<sp/>{<sp/>dest[0]=src[0];<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1837"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>STBI__CASE(2,3)<sp/>{<sp/>dest[0]=dest[1]=dest[2]=src[0];<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1838"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>STBI__CASE(2,4)<sp/>{<sp/>dest[0]=dest[1]=dest[2]=src[0];<sp/>dest[3]=src[1];<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1839"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>STBI__CASE(3,4)<sp/>{<sp/>dest[0]=src[0];dest[1]=src[1];dest[2]=src[2];dest[3]=0xffff;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1840"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>STBI__CASE(3,1)<sp/>{<sp/>dest[0]=stbi__compute_y_16(src[0],src[1],src[2]);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1841"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>STBI__CASE(3,2)<sp/>{<sp/>dest[0]=stbi__compute_y_16(src[0],src[1],src[2]);<sp/>dest[1]<sp/>=<sp/>0xffff;<sp/>}<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1842"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>STBI__CASE(4,1)<sp/>{<sp/>dest[0]=stbi__compute_y_16(src[0],src[1],src[2]);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1843"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>STBI__CASE(4,2)<sp/>{<sp/>dest[0]=stbi__compute_y_16(src[0],src[1],src[2]);<sp/>dest[1]<sp/>=<sp/>src[3];<sp/>}<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1844"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>STBI__CASE(4,3)<sp/>{<sp/>dest[0]=src[0];dest[1]=src[1];dest[2]=src[2];<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1845"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:<sp/>STBI_ASSERT(0);<sp/>STBI_FREE(data);<sp/>STBI_FREE(good);<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(stbi__uint16*)<sp/>stbi__errpuc(</highlight><highlight class="stringliteral">&quot;unsupported&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Unsupported<sp/>format<sp/>conversion&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1846"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1847"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#undef<sp/>STBI__CASE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1848"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1849"><highlight class="normal"></highlight></codeline>
<codeline lineno="1850"><highlight class="normal"><sp/><sp/><sp/>STBI_FREE(data);</highlight></codeline>
<codeline lineno="1851"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>good;</highlight></codeline>
<codeline lineno="1852"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1853"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1854"><highlight class="normal"></highlight></codeline>
<codeline lineno="1855"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>STBI_NO_LINEAR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1856"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/><sp/>*stbi__ldr_to_hdr(<ref refid="stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d" kindref="member">stbi_uc</ref><sp/>*data,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>comp)</highlight></codeline>
<codeline lineno="1857"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1858"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,k,n;</highlight></codeline>
<codeline lineno="1859"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*output;</highlight></codeline>
<codeline lineno="1860"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!data)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="1861"><highlight class="normal"><sp/><sp/><sp/>output<sp/>=<sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*)<sp/>stbi__malloc_mad4(x,<sp/>y,<sp/>comp,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">),<sp/>0);</highlight></codeline>
<codeline lineno="1862"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(output<sp/>==<sp/>NULL)<sp/>{<sp/>STBI_FREE(data);<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stbi__errpf(</highlight><highlight class="stringliteral">&quot;outofmem&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Out<sp/>of<sp/>memory&quot;</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="1863"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>compute<sp/>number<sp/>of<sp/>non-alpha<sp/>components</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1864"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(comp<sp/>&amp;<sp/>1)<sp/>n<sp/>=<sp/>comp;<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>n<sp/>=<sp/>comp-1;</highlight></codeline>
<codeline lineno="1865"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i<sp/>&lt;<sp/>x*y;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="1866"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(k=0;<sp/>k<sp/>&lt;<sp/>n;<sp/>++k)<sp/>{</highlight></codeline>
<codeline lineno="1867"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output[i*comp<sp/>+<sp/>k]<sp/>=<sp/>(float)<sp/>(pow(data[i*comp+k]/255.0f,<sp/>stbi__l2h_gamma)<sp/>*<sp/>stbi__l2h_scale);</highlight></codeline>
<codeline lineno="1868"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1869"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1870"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(n<sp/>&lt;<sp/>comp)<sp/>{</highlight></codeline>
<codeline lineno="1871"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i<sp/>&lt;<sp/>x*y;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="1872"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output[i*comp<sp/>+<sp/>n]<sp/>=<sp/>data[i*comp<sp/>+<sp/>n]/255.0f;</highlight></codeline>
<codeline lineno="1873"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1874"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1875"><highlight class="normal"><sp/><sp/><sp/>STBI_FREE(data);</highlight></codeline>
<codeline lineno="1876"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>output;</highlight></codeline>
<codeline lineno="1877"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1878"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1879"><highlight class="normal"></highlight></codeline>
<codeline lineno="1880"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>STBI_NO_HDR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1881"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>stbi__float2int(x)<sp/><sp/><sp/>((int)<sp/>(x))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1882"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d" kindref="member">stbi_uc</ref><sp/>*stbi__hdr_to_ldr(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/><sp/>*data,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>comp)</highlight></codeline>
<codeline lineno="1883"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1884"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,k,n;</highlight></codeline>
<codeline lineno="1885"><highlight class="normal"><sp/><sp/><sp/><ref refid="stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d" kindref="member">stbi_uc</ref><sp/>*output;</highlight></codeline>
<codeline lineno="1886"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!data)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="1887"><highlight class="normal"><sp/><sp/><sp/>output<sp/>=<sp/>(<ref refid="stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d" kindref="member">stbi_uc</ref><sp/>*)<sp/>stbi__malloc_mad3(x,<sp/>y,<sp/>comp,<sp/>0);</highlight></codeline>
<codeline lineno="1888"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(output<sp/>==<sp/>NULL)<sp/>{<sp/>STBI_FREE(data);<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stbi__errpuc(</highlight><highlight class="stringliteral">&quot;outofmem&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Out<sp/>of<sp/>memory&quot;</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="1889"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>compute<sp/>number<sp/>of<sp/>non-alpha<sp/>components</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1890"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(comp<sp/>&amp;<sp/>1)<sp/>n<sp/>=<sp/>comp;<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>n<sp/>=<sp/>comp-1;</highlight></codeline>
<codeline lineno="1891"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i<sp/>&lt;<sp/>x*y;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="1892"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(k=0;<sp/>k<sp/>&lt;<sp/>n;<sp/>++k)<sp/>{</highlight></codeline>
<codeline lineno="1893"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>z<sp/>=<sp/>(float)<sp/>pow(data[i*comp+k]*stbi__h2l_scale_i,<sp/>stbi__h2l_gamma_i)<sp/>*<sp/>255<sp/>+<sp/>0.5f;</highlight></codeline>
<codeline lineno="1894"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(z<sp/>&lt;<sp/>0)<sp/>z<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1895"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(z<sp/>&gt;<sp/>255)<sp/>z<sp/>=<sp/>255;</highlight></codeline>
<codeline lineno="1896"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output[i*comp<sp/>+<sp/>k]<sp/>=<sp/>(<ref refid="stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d" kindref="member">stbi_uc</ref>)<sp/>stbi__float2int(z);</highlight></codeline>
<codeline lineno="1897"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1898"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(k<sp/>&lt;<sp/>comp)<sp/>{</highlight></codeline>
<codeline lineno="1899"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>z<sp/>=<sp/>data[i*comp+k]<sp/>*<sp/>255<sp/>+<sp/>0.5f;</highlight></codeline>
<codeline lineno="1900"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(z<sp/>&lt;<sp/>0)<sp/>z<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1901"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(z<sp/>&gt;<sp/>255)<sp/>z<sp/>=<sp/>255;</highlight></codeline>
<codeline lineno="1902"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output[i*comp<sp/>+<sp/>k]<sp/>=<sp/>(<ref refid="stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d" kindref="member">stbi_uc</ref>)<sp/>stbi__float2int(z);</highlight></codeline>
<codeline lineno="1903"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1904"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1905"><highlight class="normal"><sp/><sp/><sp/>STBI_FREE(data);</highlight></codeline>
<codeline lineno="1906"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>output;</highlight></codeline>
<codeline lineno="1907"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1908"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1909"><highlight class="normal"></highlight></codeline>
<codeline lineno="1911"><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1912"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>&quot;baseline&quot;<sp/>JPEG/JFIF<sp/>decoder</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1913"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1914"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>simple<sp/>implementation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1915"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>-<sp/>doesn&apos;t<sp/>support<sp/>delayed<sp/>output<sp/>of<sp/>y-dimension</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1916"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>-<sp/>simple<sp/>interface<sp/>(only<sp/>one<sp/>output<sp/>format:<sp/>8-bit<sp/>interleaved<sp/>RGB)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1917"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>-<sp/>doesn&apos;t<sp/>try<sp/>to<sp/>recover<sp/>corrupt<sp/>jpegs</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1918"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>-<sp/>doesn&apos;t<sp/>allow<sp/>partial<sp/>loading,<sp/>loading<sp/>multiple<sp/>at<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1919"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>-<sp/>still<sp/>fast<sp/>on<sp/>x86<sp/>(copying<sp/>globals<sp/>into<sp/>locals<sp/>doesn&apos;t<sp/>help<sp/>x86)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1920"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>-<sp/>allocates<sp/>lots<sp/>of<sp/>intermediate<sp/>memory<sp/>(full<sp/>size<sp/>of<sp/>all<sp/>components)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1921"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/>non-interleaved<sp/>case<sp/>requires<sp/>this<sp/>anyway</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1922"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/>allows<sp/>good<sp/>upsampling<sp/>(see<sp/>next)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1923"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>high-quality</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1924"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>-<sp/>upsampled<sp/>channels<sp/>are<sp/>bilinearly<sp/>interpolated,<sp/>even<sp/>across<sp/>blocks</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1925"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>-<sp/>quality<sp/>integer<sp/>IDCT<sp/>derived<sp/>from<sp/>IJG&apos;s<sp/>&apos;slow&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1926"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>performance</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1927"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>-<sp/>fast<sp/>huffman;<sp/>reasonable<sp/>integer<sp/>IDCT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1928"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>-<sp/>some<sp/>SIMD<sp/>kernels<sp/>for<sp/>common<sp/>paths<sp/>on<sp/>targets<sp/>with<sp/>SSE2/NEON</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1929"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>-<sp/>uses<sp/>a<sp/>lot<sp/>of<sp/>intermediate<sp/>memory,<sp/>could<sp/>cache<sp/>poorly</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1930"><highlight class="normal"></highlight></codeline>
<codeline lineno="1931"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>STBI_NO_JPEG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1932"><highlight class="normal"></highlight></codeline>
<codeline lineno="1933"><highlight class="normal"></highlight><highlight class="comment">//<sp/>huffman<sp/>decoding<sp/>acceleration</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1934"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FAST_BITS<sp/><sp/><sp/>9<sp/><sp/></highlight><highlight class="comment">//<sp/>larger<sp/>handles<sp/>more<sp/>cases;<sp/>smaller<sp/>stomps<sp/>less<sp/>cache</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1935"><highlight class="normal"></highlight></codeline>
<codeline lineno="1936"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1937"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1938"><highlight class="normal"><sp/><sp/><sp/><ref refid="stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d" kindref="member">stbi_uc</ref><sp/><sp/>fast[1<sp/>&lt;&lt;<sp/>FAST_BITS];</highlight></codeline>
<codeline lineno="1939"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>weirdly,<sp/>repacking<sp/>this<sp/>into<sp/>AoS<sp/>is<sp/>a<sp/>10%<sp/>speed<sp/>loss,<sp/>instead<sp/>of<sp/>a<sp/>win</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1940"><highlight class="normal"><sp/><sp/><sp/>stbi__uint16<sp/>code[256];</highlight></codeline>
<codeline lineno="1941"><highlight class="normal"><sp/><sp/><sp/><ref refid="stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d" kindref="member">stbi_uc</ref><sp/><sp/>values[256];</highlight></codeline>
<codeline lineno="1942"><highlight class="normal"><sp/><sp/><sp/><ref refid="stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d" kindref="member">stbi_uc</ref><sp/><sp/>size[257];</highlight></codeline>
<codeline lineno="1943"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>maxcode[18];</highlight></codeline>
<codeline lineno="1944"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>delta[17];<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>old<sp/>&apos;firstsymbol&apos;<sp/>-<sp/>old<sp/>&apos;firstcode&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1945"><highlight class="normal">}<sp/>stbi__huffman;</highlight></codeline>
<codeline lineno="1946"><highlight class="normal"></highlight></codeline>
<codeline lineno="1947"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1948"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1949"><highlight class="normal"><sp/><sp/><sp/>stbi__context<sp/>*s;</highlight></codeline>
<codeline lineno="1950"><highlight class="normal"><sp/><sp/><sp/>stbi__huffman<sp/>huff_dc[4];</highlight></codeline>
<codeline lineno="1951"><highlight class="normal"><sp/><sp/><sp/>stbi__huffman<sp/>huff_ac[4];</highlight></codeline>
<codeline lineno="1952"><highlight class="normal"><sp/><sp/><sp/>stbi__uint16<sp/>dequant[4][64];</highlight></codeline>
<codeline lineno="1953"><highlight class="normal"><sp/><sp/><sp/>stbi__int16<sp/>fast_ac[4][1<sp/>&lt;&lt;<sp/>FAST_BITS];</highlight></codeline>
<codeline lineno="1954"><highlight class="normal"></highlight></codeline>
<codeline lineno="1955"><highlight class="normal"></highlight><highlight class="comment">//<sp/>sizes<sp/>for<sp/>components,<sp/>interleaved<sp/>MCUs</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1956"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>img_h_max,<sp/>img_v_max;</highlight></codeline>
<codeline lineno="1957"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>img_mcu_x,<sp/>img_mcu_y;</highlight></codeline>
<codeline lineno="1958"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>img_mcu_w,<sp/>img_mcu_h;</highlight></codeline>
<codeline lineno="1959"><highlight class="normal"></highlight></codeline>
<codeline lineno="1960"><highlight class="normal"></highlight><highlight class="comment">//<sp/>definition<sp/>of<sp/>jpeg<sp/>image<sp/>component</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1961"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1962"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1963"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>id;</highlight></codeline>
<codeline lineno="1964"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>h,v;</highlight></codeline>
<codeline lineno="1965"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tq;</highlight></codeline>
<codeline lineno="1966"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>hd,ha;</highlight></codeline>
<codeline lineno="1967"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dc_pred;</highlight></codeline>
<codeline lineno="1968"><highlight class="normal"></highlight></codeline>
<codeline lineno="1969"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x,y,w2,h2;</highlight></codeline>
<codeline lineno="1970"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d" kindref="member">stbi_uc</ref><sp/>*data;</highlight></codeline>
<codeline lineno="1971"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*raw_data,<sp/>*raw_coeff;</highlight></codeline>
<codeline lineno="1972"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d" kindref="member">stbi_uc</ref><sp/>*linebuf;</highlight></codeline>
<codeline lineno="1973"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/><sp/><sp/>*coeff;<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>progressive<sp/>only</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1974"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>coeff_w,<sp/>coeff_h;<sp/></highlight><highlight class="comment">//<sp/>number<sp/>of<sp/>8x8<sp/>coefficient<sp/>blocks</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1975"><highlight class="normal"><sp/><sp/><sp/>}<sp/>img_comp[4];</highlight></codeline>
<codeline lineno="1976"><highlight class="normal"></highlight></codeline>
<codeline lineno="1977"><highlight class="normal"><sp/><sp/><sp/>stbi__uint32<sp/><sp/><sp/>code_buffer;<sp/></highlight><highlight class="comment">//<sp/>jpeg<sp/>entropy-coded<sp/>buffer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1978"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>code_bits;<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>number<sp/>of<sp/>valid<sp/>bits</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1979"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><sp/>marker;<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>marker<sp/>seen<sp/>while<sp/>filling<sp/>entropy<sp/>buffer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1980"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nomore;<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>flag<sp/>if<sp/>we<sp/>saw<sp/>a<sp/>marker<sp/>so<sp/>must<sp/>stop</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1981"><highlight class="normal"></highlight></codeline>
<codeline lineno="1982"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>progressive;</highlight></codeline>
<codeline lineno="1983"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>spec_start;</highlight></codeline>
<codeline lineno="1984"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>spec_end;</highlight></codeline>
<codeline lineno="1985"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>succ_high;</highlight></codeline>
<codeline lineno="1986"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>succ_low;</highlight></codeline>
<codeline lineno="1987"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eob_run;</highlight></codeline>
<codeline lineno="1988"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>jfif;</highlight></codeline>
<codeline lineno="1989"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>app14_color_transform;<sp/></highlight><highlight class="comment">//<sp/>Adobe<sp/>APP14<sp/>tag</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1990"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rgb;</highlight></codeline>
<codeline lineno="1991"><highlight class="normal"></highlight></codeline>
<codeline lineno="1992"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>scan_n,<sp/>order[4];</highlight></codeline>
<codeline lineno="1993"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>restart_interval,<sp/>todo;</highlight></codeline>
<codeline lineno="1994"><highlight class="normal"></highlight></codeline>
<codeline lineno="1995"><highlight class="normal"></highlight><highlight class="comment">//<sp/>kernels</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1996"><highlight class="normal"><sp/><sp/><sp/>void<sp/>(*idct_block_kernel)(<ref refid="stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d" kindref="member">stbi_uc</ref><sp/>*out,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>out_stride,<sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>data[64]);</highlight></codeline>
<codeline lineno="1997"><highlight class="normal"><sp/><sp/><sp/>void<sp/>(*YCbCr_to_RGB_kernel)(<ref refid="stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d" kindref="member">stbi_uc</ref><sp/>*out,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d" kindref="member">stbi_uc</ref><sp/>*y,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d" kindref="member">stbi_uc</ref><sp/>*pcb,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d" kindref="member">stbi_uc</ref><sp/>*pcr,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>count,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>step);</highlight></codeline>
<codeline lineno="1998"><highlight class="normal"><sp/><sp/><sp/><ref refid="stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d" kindref="member">stbi_uc</ref><sp/>*(*resample_row_hv_2_kernel)(<ref refid="stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d" kindref="member">stbi_uc</ref><sp/>*out,<sp/><ref refid="stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d" kindref="member">stbi_uc</ref><sp/>*in_near,<sp/><ref refid="stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d" kindref="member">stbi_uc</ref><sp/>*in_far,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>w,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>hs);</highlight></codeline>
<codeline lineno="1999"><highlight class="normal">}<sp/>stbi__jpeg;</highlight></codeline>
<codeline lineno="2000"><highlight class="normal"></highlight></codeline>
<codeline lineno="2001"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>stbi__build_huffman(stbi__huffman<sp/>*h,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*count)</highlight></codeline>
<codeline lineno="2002"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2003"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,j,k=0;</highlight></codeline>
<codeline lineno="2004"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>code;</highlight></codeline>
<codeline lineno="2005"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>build<sp/>size<sp/>list<sp/>for<sp/>each<sp/>symbol<sp/>(from<sp/>JPEG<sp/>spec)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2006"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i<sp/>&lt;<sp/>16;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="2007"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(j=0;<sp/>j<sp/>&lt;<sp/>count[i];<sp/>++j)<sp/>{</highlight></codeline>
<codeline lineno="2008"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>h-&gt;size[k++]<sp/>=<sp/>(<ref refid="stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d" kindref="member">stbi_uc</ref>)<sp/>(i+1);</highlight></codeline>
<codeline lineno="2009"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(k<sp/>&gt;=<sp/>257)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stbi__err(</highlight><highlight class="stringliteral">&quot;bad<sp/>size<sp/>list&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;Corrupt<sp/>JPEG&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2010"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2011"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2012"><highlight class="normal"><sp/><sp/><sp/>h-&gt;size[k]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2013"><highlight class="normal"></highlight></codeline>
<codeline lineno="2014"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>compute<sp/>actual<sp/>symbols<sp/>(from<sp/>jpeg<sp/>spec)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2015"><highlight class="normal"><sp/><sp/><sp/>code<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2016"><highlight class="normal"><sp/><sp/><sp/>k<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2017"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(j=1;<sp/>j<sp/>&lt;=<sp/>16;<sp/>++j)<sp/>{</highlight></codeline>
<codeline lineno="2018"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>compute<sp/>delta<sp/>to<sp/>add<sp/>to<sp/>code<sp/>to<sp/>compute<sp/>symbol<sp/>id</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2019"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>h-&gt;delta[j]<sp/>=<sp/>k<sp/>-<sp/>code;</highlight></codeline>
<codeline lineno="2020"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(h-&gt;size[k]<sp/>==<sp/>j)<sp/>{</highlight></codeline>
<codeline lineno="2021"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(h-&gt;size[k]<sp/>==<sp/>j)</highlight></codeline>
<codeline lineno="2022"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>h-&gt;code[k++]<sp/>=<sp/>(stbi__uint16)<sp/>(code++);</highlight></codeline>
<codeline lineno="2023"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(code-1<sp/>&gt;=<sp/>(1u<sp/>&lt;&lt;<sp/>j))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stbi__err(</highlight><highlight class="stringliteral">&quot;bad<sp/>code<sp/>lengths&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;Corrupt<sp/>JPEG&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2024"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2025"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>compute<sp/>largest<sp/>code<sp/>+<sp/>1<sp/>for<sp/>this<sp/>size,<sp/>preshifted<sp/>as<sp/>needed<sp/>later</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2026"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>h-&gt;maxcode[j]<sp/>=<sp/>code<sp/>&lt;&lt;<sp/>(16-j);</highlight></codeline>
<codeline lineno="2027"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>code<sp/>&lt;&lt;=<sp/>1;</highlight></codeline>
<codeline lineno="2028"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2029"><highlight class="normal"><sp/><sp/><sp/>h-&gt;maxcode[j]<sp/>=<sp/>0xffffffff;</highlight></codeline>
<codeline lineno="2030"><highlight class="normal"></highlight></codeline>
<codeline lineno="2031"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>build<sp/>non-spec<sp/>acceleration<sp/>table;<sp/>255<sp/>is<sp/>flag<sp/>for<sp/>not-accelerated</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2032"><highlight class="normal"><sp/><sp/><sp/>memset(h-&gt;fast,<sp/>255,<sp/>1<sp/>&lt;&lt;<sp/>FAST_BITS);</highlight></codeline>
<codeline lineno="2033"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i<sp/>&lt;<sp/>k;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="2034"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>s<sp/>=<sp/>h-&gt;size[i];</highlight></codeline>
<codeline lineno="2035"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(s<sp/>&lt;=<sp/>FAST_BITS)<sp/>{</highlight></codeline>
<codeline lineno="2036"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>c<sp/>=<sp/>h-&gt;code[i]<sp/>&lt;&lt;<sp/>(FAST_BITS-s);</highlight></codeline>
<codeline lineno="2037"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>m<sp/>=<sp/>1<sp/>&lt;&lt;<sp/>(FAST_BITS-s);</highlight></codeline>
<codeline lineno="2038"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(j=0;<sp/>j<sp/>&lt;<sp/>m;<sp/>++j)<sp/>{</highlight></codeline>
<codeline lineno="2039"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>h-&gt;fast[c+j]<sp/>=<sp/>(<ref refid="stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d" kindref="member">stbi_uc</ref>)<sp/>i;</highlight></codeline>
<codeline lineno="2040"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2041"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2042"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2043"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="2044"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2045"><highlight class="normal"></highlight></codeline>
<codeline lineno="2046"><highlight class="normal"></highlight><highlight class="comment">//<sp/>build<sp/>a<sp/>table<sp/>that<sp/>decodes<sp/>both<sp/>magnitude<sp/>and<sp/>value<sp/>of<sp/>small<sp/>ACs<sp/>in</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2047"><highlight class="normal"></highlight><highlight class="comment">//<sp/>one<sp/>go.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2048"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>stbi__build_fast_ac(stbi__int16<sp/>*fast_ac,<sp/>stbi__huffman<sp/>*h)</highlight></codeline>
<codeline lineno="2049"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2050"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="2051"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i<sp/>&lt;<sp/>(1<sp/>&lt;&lt;<sp/>FAST_BITS);<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="2052"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d" kindref="member">stbi_uc</ref><sp/>fast<sp/>=<sp/>h-&gt;fast[i];</highlight></codeline>
<codeline lineno="2053"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fast_ac[i]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2054"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fast<sp/>&lt;<sp/>255)<sp/>{</highlight></codeline>
<codeline lineno="2055"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rs<sp/>=<sp/>h-&gt;values[fast];</highlight></codeline>
<codeline lineno="2056"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>run<sp/>=<sp/>(rs<sp/>&gt;&gt;<sp/>4)<sp/>&amp;<sp/>15;</highlight></codeline>
<codeline lineno="2057"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>magbits<sp/>=<sp/>rs<sp/>&amp;<sp/>15;</highlight></codeline>
<codeline lineno="2058"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>len<sp/>=<sp/>h-&gt;size[fast];</highlight></codeline>
<codeline lineno="2059"><highlight class="normal"></highlight></codeline>
<codeline lineno="2060"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(magbits<sp/>&amp;&amp;<sp/>len<sp/>+<sp/>magbits<sp/>&lt;=<sp/>FAST_BITS)<sp/>{</highlight></codeline>
<codeline lineno="2061"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>magnitude<sp/>code<sp/>followed<sp/>by<sp/>receive_extend<sp/>code</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2062"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k<sp/>=<sp/>((i<sp/>&lt;&lt;<sp/>len)<sp/>&amp;<sp/>((1<sp/>&lt;&lt;<sp/>FAST_BITS)<sp/>-<sp/>1))<sp/>&gt;&gt;<sp/>(FAST_BITS<sp/>-<sp/>magbits);</highlight></codeline>
<codeline lineno="2063"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>m<sp/>=<sp/>1<sp/>&lt;&lt;<sp/>(magbits<sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="2064"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(k<sp/>&lt;<sp/>m)<sp/>k<sp/>+=<sp/>(~0U<sp/>&lt;&lt;<sp/>magbits)<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="2065"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>the<sp/>result<sp/>is<sp/>small<sp/>enough,<sp/>we<sp/>can<sp/>fit<sp/>it<sp/>in<sp/>fast_ac<sp/>table</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2066"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(k<sp/>&gt;=<sp/>-128<sp/>&amp;&amp;<sp/>k<sp/>&lt;=<sp/>127)</highlight></codeline>
<codeline lineno="2067"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fast_ac[i]<sp/>=<sp/>(stbi__int16)<sp/>((k<sp/>*<sp/>256)<sp/>+<sp/>(run<sp/>*<sp/>16)<sp/>+<sp/>(len<sp/>+<sp/>magbits));</highlight></codeline>
<codeline lineno="2068"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2069"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2070"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2071"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2072"><highlight class="normal"></highlight></codeline>
<codeline lineno="2073"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>stbi__grow_buffer_unsafe(stbi__jpeg<sp/>*j)</highlight></codeline>
<codeline lineno="2074"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2075"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2076"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>b<sp/>=<sp/>j-&gt;nomore<sp/>?<sp/>0<sp/>:<sp/>stbi__get8(j-&gt;s);</highlight></codeline>
<codeline lineno="2077"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(b<sp/>==<sp/>0xff)<sp/>{</highlight></codeline>
<codeline lineno="2078"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>c<sp/>=<sp/>stbi__get8(j-&gt;s);</highlight></codeline>
<codeline lineno="2079"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(c<sp/>==<sp/>0xff)<sp/>c<sp/>=<sp/>stbi__get8(j-&gt;s);<sp/></highlight><highlight class="comment">//<sp/>consume<sp/>fill<sp/>bytes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2080"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(c<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="2081"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>j-&gt;marker<sp/>=<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>char)<sp/>c;</highlight></codeline>
<codeline lineno="2082"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>j-&gt;nomore<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="2083"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2084"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2085"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2086"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>j-&gt;code_buffer<sp/>|=<sp/>b<sp/>&lt;&lt;<sp/>(24<sp/>-<sp/>j-&gt;code_bits);</highlight></codeline>
<codeline lineno="2087"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>j-&gt;code_bits<sp/>+=<sp/>8;</highlight></codeline>
<codeline lineno="2088"><highlight class="normal"><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(j-&gt;code_bits<sp/>&lt;=<sp/>24);</highlight></codeline>
<codeline lineno="2089"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2090"><highlight class="normal"></highlight></codeline>
<codeline lineno="2091"><highlight class="normal"></highlight><highlight class="comment">//<sp/>(1<sp/>&lt;&lt;<sp/>n)<sp/>-<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2092"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>stbi__uint32<sp/>stbi__bmask[17]={0,1,3,7,15,31,63,127,255,511,1023,2047,4095,8191,16383,32767,65535};</highlight></codeline>
<codeline lineno="2093"><highlight class="normal"></highlight></codeline>
<codeline lineno="2094"><highlight class="normal"></highlight><highlight class="comment">//<sp/>decode<sp/>a<sp/>jpeg<sp/>huffman<sp/>value<sp/>from<sp/>the<sp/>bitstream</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2095"><highlight class="normal">stbi_inline<sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>stbi__jpeg_huff_decode(stbi__jpeg<sp/>*j,<sp/>stbi__huffman<sp/>*h)</highlight></codeline>
<codeline lineno="2096"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2097"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>temp;</highlight></codeline>
<codeline lineno="2098"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>c,k;</highlight></codeline>
<codeline lineno="2099"><highlight class="normal"></highlight></codeline>
<codeline lineno="2100"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(j-&gt;code_bits<sp/>&lt;<sp/>16)<sp/>stbi__grow_buffer_unsafe(j);</highlight></codeline>
<codeline lineno="2101"><highlight class="normal"></highlight></codeline>
<codeline lineno="2102"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>look<sp/>at<sp/>the<sp/>top<sp/>FAST_BITS<sp/>and<sp/>determine<sp/>what<sp/>symbol<sp/>ID<sp/>it<sp/>is,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2103"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>the<sp/>code<sp/>is<sp/>&lt;=<sp/>FAST_BITS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2104"><highlight class="normal"><sp/><sp/><sp/>c<sp/>=<sp/>(j-&gt;code_buffer<sp/>&gt;&gt;<sp/>(32<sp/>-<sp/>FAST_BITS))<sp/>&amp;<sp/>((1<sp/>&lt;&lt;<sp/>FAST_BITS)-1);</highlight></codeline>
<codeline lineno="2105"><highlight class="normal"><sp/><sp/><sp/>k<sp/>=<sp/>h-&gt;fast[c];</highlight></codeline>
<codeline lineno="2106"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(k<sp/>&lt;<sp/>255)<sp/>{</highlight></codeline>
<codeline lineno="2107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>s<sp/>=<sp/>h-&gt;size[k];</highlight></codeline>
<codeline lineno="2108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(s<sp/>&gt;<sp/>j-&gt;code_bits)</highlight></codeline>
<codeline lineno="2109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="2110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>j-&gt;code_buffer<sp/>&lt;&lt;=<sp/>s;</highlight></codeline>
<codeline lineno="2111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>j-&gt;code_bits<sp/>-=<sp/>s;</highlight></codeline>
<codeline lineno="2112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>h-&gt;values[k];</highlight></codeline>
<codeline lineno="2113"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2114"><highlight class="normal"></highlight></codeline>
<codeline lineno="2115"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>naive<sp/>test<sp/>is<sp/>to<sp/>shift<sp/>the<sp/>code_buffer<sp/>down<sp/>so<sp/>k<sp/>bits<sp/>are</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2116"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>valid,<sp/>then<sp/>test<sp/>against<sp/>maxcode.<sp/>To<sp/>speed<sp/>this<sp/>up,<sp/>we&apos;ve</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2117"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>preshifted<sp/>maxcode<sp/>left<sp/>so<sp/>that<sp/>it<sp/>has<sp/>(16-k)<sp/>0s<sp/>at<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2118"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>end;<sp/>in<sp/>other<sp/>words,<sp/>regardless<sp/>of<sp/>the<sp/>number<sp/>of<sp/>bits,<sp/>it</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2119"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>wants<sp/>to<sp/>be<sp/>compared<sp/>against<sp/>something<sp/>shifted<sp/>to<sp/>have<sp/>16;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2120"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>that<sp/>way<sp/>we<sp/>don&apos;t<sp/>need<sp/>to<sp/>shift<sp/>inside<sp/>the<sp/>loop.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2121"><highlight class="normal"><sp/><sp/><sp/>temp<sp/>=<sp/>j-&gt;code_buffer<sp/>&gt;&gt;<sp/>16;</highlight></codeline>
<codeline lineno="2122"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(k=FAST_BITS+1<sp/>;<sp/>;<sp/>++k)</highlight></codeline>
<codeline lineno="2123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(temp<sp/>&lt;<sp/>h-&gt;maxcode[k])</highlight></codeline>
<codeline lineno="2124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2125"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(k<sp/>==<sp/>17)<sp/>{</highlight></codeline>
<codeline lineno="2126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>error!<sp/>code<sp/>not<sp/>found</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>j-&gt;code_bits<sp/>-=<sp/>16;</highlight></codeline>
<codeline lineno="2128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="2129"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2130"><highlight class="normal"></highlight></codeline>
<codeline lineno="2131"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(k<sp/>&gt;<sp/>j-&gt;code_bits)</highlight></codeline>
<codeline lineno="2132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="2133"><highlight class="normal"></highlight></codeline>
<codeline lineno="2134"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>convert<sp/>the<sp/>huffman<sp/>code<sp/>to<sp/>the<sp/>symbol<sp/>id</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2135"><highlight class="normal"><sp/><sp/><sp/>c<sp/>=<sp/>((j-&gt;code_buffer<sp/>&gt;&gt;<sp/>(32<sp/>-<sp/>k))<sp/>&amp;<sp/>stbi__bmask[k])<sp/>+<sp/>h-&gt;delta[k];</highlight></codeline>
<codeline lineno="2136"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(c<sp/>&lt;<sp/>0<sp/>||<sp/>c<sp/>&gt;=<sp/>256)<sp/></highlight><highlight class="comment">//<sp/>symbol<sp/>id<sp/>out<sp/>of<sp/>bounds!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="2138"><highlight class="normal"><sp/><sp/><sp/>STBI_ASSERT((((j-&gt;code_buffer)<sp/>&gt;&gt;<sp/>(32<sp/>-<sp/>h-&gt;size[c]))<sp/>&amp;<sp/>stbi__bmask[h-&gt;size[c]])<sp/>==<sp/>h-&gt;code[c]);</highlight></codeline>
<codeline lineno="2139"><highlight class="normal"></highlight></codeline>
<codeline lineno="2140"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>convert<sp/>the<sp/>id<sp/>to<sp/>a<sp/>symbol</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2141"><highlight class="normal"><sp/><sp/><sp/>j-&gt;code_bits<sp/>-=<sp/>k;</highlight></codeline>
<codeline lineno="2142"><highlight class="normal"><sp/><sp/><sp/>j-&gt;code_buffer<sp/>&lt;&lt;=<sp/>k;</highlight></codeline>
<codeline lineno="2143"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>h-&gt;values[c];</highlight></codeline>
<codeline lineno="2144"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2145"><highlight class="normal"></highlight></codeline>
<codeline lineno="2146"><highlight class="normal"></highlight><highlight class="comment">//<sp/>bias[n]<sp/>=<sp/>(-1&lt;&lt;n)<sp/>+<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2147"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>stbi__jbias[16]<sp/>=<sp/>{0,-1,-3,-7,-15,-31,-63,-127,-255,-511,-1023,-2047,-4095,-8191,-16383,-32767};</highlight></codeline>
<codeline lineno="2148"><highlight class="normal"></highlight></codeline>
<codeline lineno="2149"><highlight class="normal"></highlight><highlight class="comment">//<sp/>combined<sp/>JPEG<sp/>&apos;receive&apos;<sp/>and<sp/>JPEG<sp/>&apos;extend&apos;,<sp/>since<sp/>baseline</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2150"><highlight class="normal"></highlight><highlight class="comment">//<sp/>always<sp/>extends<sp/>everything<sp/>it<sp/>receives.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2151"><highlight class="normal">stbi_inline<sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>stbi__extend_receive(stbi__jpeg<sp/>*j,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n)</highlight></codeline>
<codeline lineno="2152"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2153"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k;</highlight></codeline>
<codeline lineno="2154"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sgn;</highlight></codeline>
<codeline lineno="2155"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(j-&gt;code_bits<sp/>&lt;<sp/>n)<sp/>stbi__grow_buffer_unsafe(j);</highlight></codeline>
<codeline lineno="2156"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(j-&gt;code_bits<sp/>&lt;<sp/>n)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;<sp/></highlight><highlight class="comment">//<sp/>ran<sp/>out<sp/>of<sp/>bits<sp/>from<sp/>stream,<sp/>return<sp/>0s<sp/>intead<sp/>of<sp/>continuing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2157"><highlight class="normal"></highlight></codeline>
<codeline lineno="2158"><highlight class="normal"><sp/><sp/><sp/>sgn<sp/>=<sp/>j-&gt;code_buffer<sp/>&gt;&gt;<sp/>31;<sp/></highlight><highlight class="comment">//<sp/>sign<sp/>bit<sp/>always<sp/>in<sp/>MSB;<sp/>0<sp/>if<sp/>MSB<sp/>clear<sp/>(positive),<sp/>1<sp/>if<sp/>MSB<sp/>set<sp/>(negative)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2159"><highlight class="normal"><sp/><sp/><sp/>k<sp/>=<sp/>stbi_lrot(j-&gt;code_buffer,<sp/>n);</highlight></codeline>
<codeline lineno="2160"><highlight class="normal"><sp/><sp/><sp/>j-&gt;code_buffer<sp/>=<sp/>k<sp/>&amp;<sp/>~stbi__bmask[n];</highlight></codeline>
<codeline lineno="2161"><highlight class="normal"><sp/><sp/><sp/>k<sp/>&amp;=<sp/>stbi__bmask[n];</highlight></codeline>
<codeline lineno="2162"><highlight class="normal"><sp/><sp/><sp/>j-&gt;code_bits<sp/>-=<sp/>n;</highlight></codeline>
<codeline lineno="2163"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>k<sp/>+<sp/>(stbi__jbias[n]<sp/>&amp;<sp/>(sgn<sp/>-<sp/>1));</highlight></codeline>
<codeline lineno="2164"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2165"><highlight class="normal"></highlight></codeline>
<codeline lineno="2166"><highlight class="normal"></highlight><highlight class="comment">//<sp/>get<sp/>some<sp/>unsigned<sp/>bits</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2167"><highlight class="normal">stbi_inline<sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>stbi__jpeg_get_bits(stbi__jpeg<sp/>*j,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n)</highlight></codeline>
<codeline lineno="2168"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2169"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k;</highlight></codeline>
<codeline lineno="2170"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(j-&gt;code_bits<sp/>&lt;<sp/>n)<sp/>stbi__grow_buffer_unsafe(j);</highlight></codeline>
<codeline lineno="2171"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(j-&gt;code_bits<sp/>&lt;<sp/>n)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;<sp/></highlight><highlight class="comment">//<sp/>ran<sp/>out<sp/>of<sp/>bits<sp/>from<sp/>stream,<sp/>return<sp/>0s<sp/>intead<sp/>of<sp/>continuing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2172"><highlight class="normal"><sp/><sp/><sp/>k<sp/>=<sp/>stbi_lrot(j-&gt;code_buffer,<sp/>n);</highlight></codeline>
<codeline lineno="2173"><highlight class="normal"><sp/><sp/><sp/>j-&gt;code_buffer<sp/>=<sp/>k<sp/>&amp;<sp/>~stbi__bmask[n];</highlight></codeline>
<codeline lineno="2174"><highlight class="normal"><sp/><sp/><sp/>k<sp/>&amp;=<sp/>stbi__bmask[n];</highlight></codeline>
<codeline lineno="2175"><highlight class="normal"><sp/><sp/><sp/>j-&gt;code_bits<sp/>-=<sp/>n;</highlight></codeline>
<codeline lineno="2176"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>k;</highlight></codeline>
<codeline lineno="2177"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2178"><highlight class="normal"></highlight></codeline>
<codeline lineno="2179"><highlight class="normal">stbi_inline<sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>stbi__jpeg_get_bit(stbi__jpeg<sp/>*j)</highlight></codeline>
<codeline lineno="2180"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2181"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k;</highlight></codeline>
<codeline lineno="2182"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(j-&gt;code_bits<sp/>&lt;<sp/>1)<sp/>stbi__grow_buffer_unsafe(j);</highlight></codeline>
<codeline lineno="2183"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(j-&gt;code_bits<sp/>&lt;<sp/>1)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;<sp/></highlight><highlight class="comment">//<sp/>ran<sp/>out<sp/>of<sp/>bits<sp/>from<sp/>stream,<sp/>return<sp/>0s<sp/>intead<sp/>of<sp/>continuing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2184"><highlight class="normal"><sp/><sp/><sp/>k<sp/>=<sp/>j-&gt;code_buffer;</highlight></codeline>
<codeline lineno="2185"><highlight class="normal"><sp/><sp/><sp/>j-&gt;code_buffer<sp/>&lt;&lt;=<sp/>1;</highlight></codeline>
<codeline lineno="2186"><highlight class="normal"><sp/><sp/><sp/>--j-&gt;code_bits;</highlight></codeline>
<codeline lineno="2187"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>k<sp/>&amp;<sp/>0x80000000;</highlight></codeline>
<codeline lineno="2188"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2189"><highlight class="normal"></highlight></codeline>
<codeline lineno="2190"><highlight class="normal"></highlight><highlight class="comment">//<sp/>given<sp/>a<sp/>value<sp/>that&apos;s<sp/>at<sp/>position<sp/>X<sp/>in<sp/>the<sp/>zigzag<sp/>stream,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2191"><highlight class="normal"></highlight><highlight class="comment">//<sp/>where<sp/>does<sp/>it<sp/>appear<sp/>in<sp/>the<sp/>8x8<sp/>matrix<sp/>coded<sp/>as<sp/>row-major?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2192"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d" kindref="member">stbi_uc</ref><sp/>stbi__jpeg_dezigzag[64+15]<sp/>=</highlight></codeline>
<codeline lineno="2193"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2194"><highlight class="normal"><sp/><sp/><sp/><sp/>0,<sp/><sp/>1,<sp/><sp/>8,<sp/>16,<sp/><sp/>9,<sp/><sp/>2,<sp/><sp/>3,<sp/>10,</highlight></codeline>
<codeline lineno="2195"><highlight class="normal"><sp/><sp/><sp/>17,<sp/>24,<sp/>32,<sp/>25,<sp/>18,<sp/>11,<sp/><sp/>4,<sp/><sp/>5,</highlight></codeline>
<codeline lineno="2196"><highlight class="normal"><sp/><sp/><sp/>12,<sp/>19,<sp/>26,<sp/>33,<sp/>40,<sp/>48,<sp/>41,<sp/>34,</highlight></codeline>
<codeline lineno="2197"><highlight class="normal"><sp/><sp/><sp/>27,<sp/>20,<sp/>13,<sp/><sp/>6,<sp/><sp/>7,<sp/>14,<sp/>21,<sp/>28,</highlight></codeline>
<codeline lineno="2198"><highlight class="normal"><sp/><sp/><sp/>35,<sp/>42,<sp/>49,<sp/>56,<sp/>57,<sp/>50,<sp/>43,<sp/>36,</highlight></codeline>
<codeline lineno="2199"><highlight class="normal"><sp/><sp/><sp/>29,<sp/>22,<sp/>15,<sp/>23,<sp/>30,<sp/>37,<sp/>44,<sp/>51,</highlight></codeline>
<codeline lineno="2200"><highlight class="normal"><sp/><sp/><sp/>58,<sp/>59,<sp/>52,<sp/>45,<sp/>38,<sp/>31,<sp/>39,<sp/>46,</highlight></codeline>
<codeline lineno="2201"><highlight class="normal"><sp/><sp/><sp/>53,<sp/>60,<sp/>61,<sp/>54,<sp/>47,<sp/>55,<sp/>62,<sp/>63,</highlight></codeline>
<codeline lineno="2202"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>let<sp/>corrupt<sp/>input<sp/>sample<sp/>past<sp/>end</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2203"><highlight class="normal"><sp/><sp/><sp/>63,<sp/>63,<sp/>63,<sp/>63,<sp/>63,<sp/>63,<sp/>63,<sp/>63,</highlight></codeline>
<codeline lineno="2204"><highlight class="normal"><sp/><sp/><sp/>63,<sp/>63,<sp/>63,<sp/>63,<sp/>63,<sp/>63,<sp/>63</highlight></codeline>
<codeline lineno="2205"><highlight class="normal">};</highlight></codeline>
<codeline lineno="2206"><highlight class="normal"></highlight></codeline>
<codeline lineno="2207"><highlight class="normal"></highlight><highlight class="comment">//<sp/>decode<sp/>one<sp/>64-entry<sp/>block--</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2208"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>stbi__jpeg_decode_block(stbi__jpeg<sp/>*j,<sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>data[64],<sp/>stbi__huffman<sp/>*hdc,<sp/>stbi__huffman<sp/>*hac,<sp/>stbi__int16<sp/>*fac,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>b,<sp/>stbi__uint16<sp/>*dequant)</highlight></codeline>
<codeline lineno="2209"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2210"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>diff,dc,k;</highlight></codeline>
<codeline lineno="2211"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>t;</highlight></codeline>
<codeline lineno="2212"><highlight class="normal"></highlight></codeline>
<codeline lineno="2213"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(j-&gt;code_bits<sp/>&lt;<sp/>16)<sp/>stbi__grow_buffer_unsafe(j);</highlight></codeline>
<codeline lineno="2214"><highlight class="normal"><sp/><sp/><sp/>t<sp/>=<sp/>stbi__jpeg_huff_decode(j,<sp/>hdc);</highlight></codeline>
<codeline lineno="2215"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(t<sp/>&lt;<sp/>0<sp/>||<sp/>t<sp/>&gt;<sp/>15)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stbi__err(</highlight><highlight class="stringliteral">&quot;bad<sp/>huffman<sp/>code&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;Corrupt<sp/>JPEG&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2216"><highlight class="normal"></highlight></codeline>
<codeline lineno="2217"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>0<sp/>all<sp/>the<sp/>ac<sp/>values<sp/>now<sp/>so<sp/>we<sp/>can<sp/>do<sp/>it<sp/>32-bits<sp/>at<sp/>a<sp/>time</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2218"><highlight class="normal"><sp/><sp/><sp/>memset(data,0,64*</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(data[0]));</highlight></codeline>
<codeline lineno="2219"><highlight class="normal"></highlight></codeline>
<codeline lineno="2220"><highlight class="normal"><sp/><sp/><sp/>diff<sp/>=<sp/>t<sp/>?<sp/>stbi__extend_receive(j,<sp/>t)<sp/>:<sp/>0;</highlight></codeline>
<codeline lineno="2221"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!stbi__addints_valid(j-&gt;img_comp[b].dc_pred,<sp/>diff))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stbi__err(</highlight><highlight class="stringliteral">&quot;bad<sp/>delta&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;Corrupt<sp/>JPEG&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2222"><highlight class="normal"><sp/><sp/><sp/>dc<sp/>=<sp/>j-&gt;img_comp[b].dc_pred<sp/>+<sp/>diff;</highlight></codeline>
<codeline lineno="2223"><highlight class="normal"><sp/><sp/><sp/>j-&gt;img_comp[b].dc_pred<sp/>=<sp/>dc;</highlight></codeline>
<codeline lineno="2224"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!stbi__mul2shorts_valid(dc,<sp/>dequant[0]))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stbi__err(</highlight><highlight class="stringliteral">&quot;can&apos;t<sp/>merge<sp/>dc<sp/>and<sp/>ac&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Corrupt<sp/>JPEG&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2225"><highlight class="normal"><sp/><sp/><sp/>data[0]<sp/>=<sp/>(short)<sp/>(dc<sp/>*<sp/>dequant[0]);</highlight></codeline>
<codeline lineno="2226"><highlight class="normal"></highlight></codeline>
<codeline lineno="2227"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>decode<sp/>AC<sp/>components,<sp/>see<sp/>JPEG<sp/>spec</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2228"><highlight class="normal"><sp/><sp/><sp/>k<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="2229"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>zig;</highlight></codeline>
<codeline lineno="2231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>c,r,s;</highlight></codeline>
<codeline lineno="2232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(j-&gt;code_bits<sp/>&lt;<sp/>16)<sp/>stbi__grow_buffer_unsafe(j);</highlight></codeline>
<codeline lineno="2233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>c<sp/>=<sp/>(j-&gt;code_buffer<sp/>&gt;&gt;<sp/>(32<sp/>-<sp/>FAST_BITS))<sp/>&amp;<sp/>((1<sp/>&lt;&lt;<sp/>FAST_BITS)-1);</highlight></codeline>
<codeline lineno="2234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>r<sp/>=<sp/>fac[c];</highlight></codeline>
<codeline lineno="2235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(r)<sp/>{<sp/></highlight><highlight class="comment">//<sp/>fast-AC<sp/>path</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>k<sp/>+=<sp/>(r<sp/>&gt;&gt;<sp/>4)<sp/>&amp;<sp/>15;<sp/></highlight><highlight class="comment">//<sp/>run</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s<sp/>=<sp/>r<sp/>&amp;<sp/>15;<sp/></highlight><highlight class="comment">//<sp/>combined<sp/>length</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(s<sp/>&gt;<sp/>j-&gt;code_bits)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stbi__err(</highlight><highlight class="stringliteral">&quot;bad<sp/>huffman<sp/>code&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Combined<sp/>length<sp/>longer<sp/>than<sp/>code<sp/>bits<sp/>available&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>j-&gt;code_buffer<sp/>&lt;&lt;=<sp/>s;</highlight></codeline>
<codeline lineno="2240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>j-&gt;code_bits<sp/>-=<sp/>s;</highlight></codeline>
<codeline lineno="2241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>decode<sp/>into<sp/>unzigzag&apos;d<sp/>location</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>zig<sp/>=<sp/>stbi__jpeg_dezigzag[k++];</highlight></codeline>
<codeline lineno="2243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data[zig]<sp/>=<sp/>(short)<sp/>((r<sp/>&gt;&gt;<sp/>8)<sp/>*<sp/>dequant[zig]);</highlight></codeline>
<codeline lineno="2244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rs<sp/>=<sp/>stbi__jpeg_huff_decode(j,<sp/>hac);</highlight></codeline>
<codeline lineno="2246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rs<sp/>&lt;<sp/>0)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stbi__err(</highlight><highlight class="stringliteral">&quot;bad<sp/>huffman<sp/>code&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;Corrupt<sp/>JPEG&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s<sp/>=<sp/>rs<sp/>&amp;<sp/>15;</highlight></codeline>
<codeline lineno="2248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r<sp/>=<sp/>rs<sp/>&gt;&gt;<sp/>4;</highlight></codeline>
<codeline lineno="2249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(s<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="2250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rs<sp/>!=<sp/>0xf0)<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>end<sp/>block</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>k<sp/>+=<sp/>16;</highlight></codeline>
<codeline lineno="2252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>k<sp/>+=<sp/>r;</highlight></codeline>
<codeline lineno="2254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>decode<sp/>into<sp/>unzigzag&apos;d<sp/>location</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>zig<sp/>=<sp/>stbi__jpeg_dezigzag[k++];</highlight></codeline>
<codeline lineno="2256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data[zig]<sp/>=<sp/>(short)<sp/>(stbi__extend_receive(j,s)<sp/>*<sp/>dequant[zig]);</highlight></codeline>
<codeline lineno="2257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2259"><highlight class="normal"><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(k<sp/>&lt;<sp/>64);</highlight></codeline>
<codeline lineno="2260"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="2261"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2262"><highlight class="normal"></highlight></codeline>
<codeline lineno="2263"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>stbi__jpeg_decode_block_prog_dc(stbi__jpeg<sp/>*j,<sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>data[64],<sp/>stbi__huffman<sp/>*hdc,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>b)</highlight></codeline>
<codeline lineno="2264"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2265"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>diff,dc;</highlight></codeline>
<codeline lineno="2266"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>t;</highlight></codeline>
<codeline lineno="2267"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(j-&gt;spec_end<sp/>!=<sp/>0)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stbi__err(</highlight><highlight class="stringliteral">&quot;can&apos;t<sp/>merge<sp/>dc<sp/>and<sp/>ac&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Corrupt<sp/>JPEG&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2268"><highlight class="normal"></highlight></codeline>
<codeline lineno="2269"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(j-&gt;code_bits<sp/>&lt;<sp/>16)<sp/>stbi__grow_buffer_unsafe(j);</highlight></codeline>
<codeline lineno="2270"><highlight class="normal"></highlight></codeline>
<codeline lineno="2271"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(j-&gt;succ_high<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="2272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>first<sp/>scan<sp/>for<sp/>DC<sp/>coefficient,<sp/>must<sp/>be<sp/>first</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>memset(data,0,64*</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(data[0]));<sp/></highlight><highlight class="comment">//<sp/>0<sp/>all<sp/>the<sp/>ac<sp/>values<sp/>now</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>t<sp/>=<sp/>stbi__jpeg_huff_decode(j,<sp/>hdc);</highlight></codeline>
<codeline lineno="2275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(t<sp/>&lt;<sp/>0<sp/>||<sp/>t<sp/>&gt;<sp/>15)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stbi__err(</highlight><highlight class="stringliteral">&quot;can&apos;t<sp/>merge<sp/>dc<sp/>and<sp/>ac&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Corrupt<sp/>JPEG&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>diff<sp/>=<sp/>t<sp/>?<sp/>stbi__extend_receive(j,<sp/>t)<sp/>:<sp/>0;</highlight></codeline>
<codeline lineno="2277"><highlight class="normal"></highlight></codeline>
<codeline lineno="2278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!stbi__addints_valid(j-&gt;img_comp[b].dc_pred,<sp/>diff))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stbi__err(</highlight><highlight class="stringliteral">&quot;bad<sp/>delta&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Corrupt<sp/>JPEG&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>dc<sp/>=<sp/>j-&gt;img_comp[b].dc_pred<sp/>+<sp/>diff;</highlight></codeline>
<codeline lineno="2280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>j-&gt;img_comp[b].dc_pred<sp/>=<sp/>dc;</highlight></codeline>
<codeline lineno="2281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!stbi__mul2shorts_valid(dc,<sp/>1<sp/>&lt;&lt;<sp/>j-&gt;succ_low))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stbi__err(</highlight><highlight class="stringliteral">&quot;can&apos;t<sp/>merge<sp/>dc<sp/>and<sp/>ac&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Corrupt<sp/>JPEG&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>data[0]<sp/>=<sp/>(short)<sp/>(dc<sp/>*<sp/>(1<sp/>&lt;&lt;<sp/>j-&gt;succ_low));</highlight></codeline>
<codeline lineno="2283"><highlight class="normal"><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>refinement<sp/>scan<sp/>for<sp/>DC<sp/>coefficient</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(stbi__jpeg_get_bit(j))</highlight></codeline>
<codeline lineno="2286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data[0]<sp/>+=<sp/>(</highlight><highlight class="keywordtype">short</highlight><highlight class="normal">)<sp/>(1<sp/>&lt;&lt;<sp/>j-&gt;succ_low);</highlight></codeline>
<codeline lineno="2287"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2288"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="2289"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2290"><highlight class="normal"></highlight></codeline>
<codeline lineno="2291"><highlight class="normal"></highlight><highlight class="comment">//<sp/>@OPTIMIZE:<sp/>store<sp/>non-zigzagged<sp/>during<sp/>the<sp/>decode<sp/>passes,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2292"><highlight class="normal"></highlight><highlight class="comment">//<sp/>and<sp/>only<sp/>de-zigzag<sp/>when<sp/>dequantizing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2293"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>stbi__jpeg_decode_block_prog_ac(stbi__jpeg<sp/>*j,<sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>data[64],<sp/>stbi__huffman<sp/>*hac,<sp/>stbi__int16<sp/>*fac)</highlight></codeline>
<codeline lineno="2294"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2295"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k;</highlight></codeline>
<codeline lineno="2296"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(j-&gt;spec_start<sp/>==<sp/>0)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stbi__err(</highlight><highlight class="stringliteral">&quot;can&apos;t<sp/>merge<sp/>dc<sp/>and<sp/>ac&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Corrupt<sp/>JPEG&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2297"><highlight class="normal"></highlight></codeline>
<codeline lineno="2298"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(j-&gt;succ_high<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="2299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>shift<sp/>=<sp/>j-&gt;succ_low;</highlight></codeline>
<codeline lineno="2300"><highlight class="normal"></highlight></codeline>
<codeline lineno="2301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(j-&gt;eob_run)<sp/>{</highlight></codeline>
<codeline lineno="2302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>--j-&gt;eob_run;</highlight></codeline>
<codeline lineno="2303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="2304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2305"><highlight class="normal"></highlight></codeline>
<codeline lineno="2306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>k<sp/>=<sp/>j-&gt;spec_start;</highlight></codeline>
<codeline lineno="2307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>zig;</highlight></codeline>
<codeline lineno="2309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>c,r,s;</highlight></codeline>
<codeline lineno="2310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(j-&gt;code_bits<sp/>&lt;<sp/>16)<sp/>stbi__grow_buffer_unsafe(j);</highlight></codeline>
<codeline lineno="2311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c<sp/>=<sp/>(j-&gt;code_buffer<sp/>&gt;&gt;<sp/>(32<sp/>-<sp/>FAST_BITS))<sp/>&amp;<sp/>((1<sp/>&lt;&lt;<sp/>FAST_BITS)-1);</highlight></codeline>
<codeline lineno="2312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r<sp/>=<sp/>fac[c];</highlight></codeline>
<codeline lineno="2313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(r)<sp/>{<sp/></highlight><highlight class="comment">//<sp/>fast-AC<sp/>path</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>k<sp/>+=<sp/>(r<sp/>&gt;&gt;<sp/>4)<sp/>&amp;<sp/>15;<sp/></highlight><highlight class="comment">//<sp/>run</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s<sp/>=<sp/>r<sp/>&amp;<sp/>15;<sp/></highlight><highlight class="comment">//<sp/>combined<sp/>length</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(s<sp/>&gt;<sp/>j-&gt;code_bits)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stbi__err(</highlight><highlight class="stringliteral">&quot;bad<sp/>huffman<sp/>code&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Combined<sp/>length<sp/>longer<sp/>than<sp/>code<sp/>bits<sp/>available&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>j-&gt;code_buffer<sp/>&lt;&lt;=<sp/>s;</highlight></codeline>
<codeline lineno="2318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>j-&gt;code_bits<sp/>-=<sp/>s;</highlight></codeline>
<codeline lineno="2319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>zig<sp/>=<sp/>stbi__jpeg_dezigzag[k++];</highlight></codeline>
<codeline lineno="2320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data[zig]<sp/>=<sp/>(short)<sp/>((r<sp/>&gt;&gt;<sp/>8)<sp/>*<sp/>(1<sp/>&lt;&lt;<sp/>shift));</highlight></codeline>
<codeline lineno="2321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rs<sp/>=<sp/>stbi__jpeg_huff_decode(j,<sp/>hac);</highlight></codeline>
<codeline lineno="2323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rs<sp/>&lt;<sp/>0)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stbi__err(</highlight><highlight class="stringliteral">&quot;bad<sp/>huffman<sp/>code&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;Corrupt<sp/>JPEG&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s<sp/>=<sp/>rs<sp/>&amp;<sp/>15;</highlight></codeline>
<codeline lineno="2325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r<sp/>=<sp/>rs<sp/>&gt;&gt;<sp/>4;</highlight></codeline>
<codeline lineno="2326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(s<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="2327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(r<sp/>&lt;<sp/>15)<sp/>{</highlight></codeline>
<codeline lineno="2328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>j-&gt;eob_run<sp/>=<sp/>(1<sp/>&lt;&lt;<sp/>r);</highlight></codeline>
<codeline lineno="2329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(r)</highlight></codeline>
<codeline lineno="2330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>j-&gt;eob_run<sp/>+=<sp/>stbi__jpeg_get_bits(j,<sp/>r);</highlight></codeline>
<codeline lineno="2331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>--j-&gt;eob_run;</highlight></codeline>
<codeline lineno="2332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>k<sp/>+=<sp/>16;</highlight></codeline>
<codeline lineno="2335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>k<sp/>+=<sp/>r;</highlight></codeline>
<codeline lineno="2337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>zig<sp/>=<sp/>stbi__jpeg_dezigzag[k++];</highlight></codeline>
<codeline lineno="2338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data[zig]<sp/>=<sp/>(short)<sp/>(stbi__extend_receive(j,s)<sp/>*<sp/>(1<sp/>&lt;&lt;<sp/>shift));</highlight></codeline>
<codeline lineno="2339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(k<sp/>&lt;=<sp/>j-&gt;spec_end);</highlight></codeline>
<codeline lineno="2342"><highlight class="normal"><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>refinement<sp/>scan<sp/>for<sp/>these<sp/>AC<sp/>coefficients</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2344"><highlight class="normal"></highlight></codeline>
<codeline lineno="2345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>bit<sp/>=<sp/>(short)<sp/>(1<sp/>&lt;&lt;<sp/>j-&gt;succ_low);</highlight></codeline>
<codeline lineno="2346"><highlight class="normal"></highlight></codeline>
<codeline lineno="2347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(j-&gt;eob_run)<sp/>{</highlight></codeline>
<codeline lineno="2348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>--j-&gt;eob_run;</highlight></codeline>
<codeline lineno="2349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(k<sp/>=<sp/>j-&gt;spec_start;<sp/>k<sp/>&lt;=<sp/>j-&gt;spec_end;<sp/>++k)<sp/>{</highlight></codeline>
<codeline lineno="2350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>*p<sp/>=<sp/>&amp;data[stbi__jpeg_dezigzag[k]];</highlight></codeline>
<codeline lineno="2351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*p<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="2352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(stbi__jpeg_get_bit(j))</highlight></codeline>
<codeline lineno="2353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((*p<sp/>&amp;<sp/>bit)==0)<sp/>{</highlight></codeline>
<codeline lineno="2354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*p<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="2355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*p<sp/>+=<sp/>bit;</highlight></codeline>
<codeline lineno="2356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*p<sp/>-=<sp/>bit;</highlight></codeline>
<codeline lineno="2358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>k<sp/>=<sp/>j-&gt;spec_start;</highlight></codeline>
<codeline lineno="2362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>r,s;</highlight></codeline>
<codeline lineno="2364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rs<sp/>=<sp/>stbi__jpeg_huff_decode(j,<sp/>hac);<sp/></highlight><highlight class="comment">//<sp/>@OPTIMIZE<sp/>see<sp/>if<sp/>we<sp/>can<sp/>use<sp/>the<sp/>fast<sp/>path<sp/>here,<sp/>advance-by-r<sp/>is<sp/>so<sp/>slow,<sp/>eh</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rs<sp/>&lt;<sp/>0)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stbi__err(</highlight><highlight class="stringliteral">&quot;bad<sp/>huffman<sp/>code&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;Corrupt<sp/>JPEG&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s<sp/>=<sp/>rs<sp/>&amp;<sp/>15;</highlight></codeline>
<codeline lineno="2367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r<sp/>=<sp/>rs<sp/>&gt;&gt;<sp/>4;</highlight></codeline>
<codeline lineno="2368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(s<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="2369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(r<sp/>&lt;<sp/>15)<sp/>{</highlight></codeline>
<codeline lineno="2370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>j-&gt;eob_run<sp/>=<sp/>(1<sp/>&lt;&lt;<sp/>r)<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="2371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(r)</highlight></codeline>
<codeline lineno="2372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>j-&gt;eob_run<sp/>+=<sp/>stbi__jpeg_get_bits(j,<sp/>r);</highlight></codeline>
<codeline lineno="2373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r<sp/>=<sp/>64;<sp/></highlight><highlight class="comment">//<sp/>force<sp/>end<sp/>of<sp/>block</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>r=15<sp/>s=0<sp/>should<sp/>write<sp/>16<sp/>0s,<sp/>so<sp/>we<sp/>just<sp/>do</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>a<sp/>run<sp/>of<sp/>15<sp/>0s<sp/>and<sp/>then<sp/>write<sp/>s<sp/>(which<sp/>is<sp/>0),</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>so<sp/>we<sp/>don&apos;t<sp/>have<sp/>to<sp/>do<sp/>anything<sp/>special<sp/>here</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(s<sp/>!=<sp/>1)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stbi__err(</highlight><highlight class="stringliteral">&quot;bad<sp/>huffman<sp/>code&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Corrupt<sp/>JPEG&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>sign<sp/>bit</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(stbi__jpeg_get_bit(j))</highlight></codeline>
<codeline lineno="2383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s<sp/>=<sp/>bit;</highlight></codeline>
<codeline lineno="2384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s<sp/>=<sp/>-bit;</highlight></codeline>
<codeline lineno="2386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2387"><highlight class="normal"></highlight></codeline>
<codeline lineno="2388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>advance<sp/>by<sp/>r</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(k<sp/>&lt;=<sp/>j-&gt;spec_end)<sp/>{</highlight></codeline>
<codeline lineno="2390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>*p<sp/>=<sp/>&amp;data[stbi__jpeg_dezigzag[k++]];</highlight></codeline>
<codeline lineno="2391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*p<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="2392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(stbi__jpeg_get_bit(j))</highlight></codeline>
<codeline lineno="2393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((*p<sp/>&amp;<sp/>bit)==0)<sp/>{</highlight></codeline>
<codeline lineno="2394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*p<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="2395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*p<sp/>+=<sp/>bit;</highlight></codeline>
<codeline lineno="2396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*p<sp/>-=<sp/>bit;</highlight></codeline>
<codeline lineno="2398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(r<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="2401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*p<sp/>=<sp/>(short)<sp/>s;</highlight></codeline>
<codeline lineno="2402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>--r;</highlight></codeline>
<codeline lineno="2405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(k<sp/>&lt;=<sp/>j-&gt;spec_end);</highlight></codeline>
<codeline lineno="2408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2409"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2410"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="2411"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2412"><highlight class="normal"></highlight></codeline>
<codeline lineno="2413"><highlight class="normal"></highlight><highlight class="comment">//<sp/>take<sp/>a<sp/>-128..127<sp/>value<sp/>and<sp/>stbi__clamp<sp/>it<sp/>and<sp/>convert<sp/>to<sp/>0..255</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2414"><highlight class="normal">stbi_inline<sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d" kindref="member">stbi_uc</ref><sp/>stbi__clamp(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="2415"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2416"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>trick<sp/>to<sp/>use<sp/>a<sp/>single<sp/>test<sp/>to<sp/>catch<sp/>both<sp/>cases</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2417"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<sp/>x<sp/>&gt;<sp/>255)<sp/>{</highlight></codeline>
<codeline lineno="2418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(x<sp/>&lt;<sp/>0)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="2419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(x<sp/>&gt;<sp/>255)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>255;</highlight></codeline>
<codeline lineno="2420"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2421"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d" kindref="member">stbi_uc</ref>)<sp/>x;</highlight></codeline>
<codeline lineno="2422"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2423"><highlight class="normal"></highlight></codeline>
<codeline lineno="2424"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>stbi__f2f(x)<sp/><sp/>((int)<sp/>(((x)<sp/>*<sp/>4096<sp/>+<sp/>0.5)))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2425"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>stbi__fsh(x)<sp/><sp/>((x)<sp/>*<sp/>4096)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2426"><highlight class="normal"></highlight></codeline>
<codeline lineno="2427"><highlight class="normal"></highlight><highlight class="comment">//<sp/>derived<sp/>from<sp/>jidctint<sp/>--<sp/>DCT_ISLOW</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2428"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>STBI__IDCT_1D(s0,s1,s2,s3,s4,s5,s6,s7)<sp/>\</highlight></codeline>
<codeline lineno="2429"><highlight class="preprocessor"><sp/><sp/><sp/>int<sp/>t0,t1,t2,t3,p1,p2,p3,p4,p5,x0,x1,x2,x3;<sp/>\</highlight></codeline>
<codeline lineno="2430"><highlight class="preprocessor"><sp/><sp/><sp/>p2<sp/>=<sp/>s2;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="2431"><highlight class="preprocessor"><sp/><sp/><sp/>p3<sp/>=<sp/>s6;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="2432"><highlight class="preprocessor"><sp/><sp/><sp/>p1<sp/>=<sp/>(p2+p3)<sp/>*<sp/>stbi__f2f(0.5411961f);<sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="2433"><highlight class="preprocessor"><sp/><sp/><sp/>t2<sp/>=<sp/>p1<sp/>+<sp/>p3*stbi__f2f(-1.847759065f);<sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="2434"><highlight class="preprocessor"><sp/><sp/><sp/>t3<sp/>=<sp/>p1<sp/>+<sp/>p2*stbi__f2f(<sp/>0.765366865f);<sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="2435"><highlight class="preprocessor"><sp/><sp/><sp/>p2<sp/>=<sp/>s0;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="2436"><highlight class="preprocessor"><sp/><sp/><sp/>p3<sp/>=<sp/>s4;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="2437"><highlight class="preprocessor"><sp/><sp/><sp/>t0<sp/>=<sp/>stbi__fsh(p2+p3);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="2438"><highlight class="preprocessor"><sp/><sp/><sp/>t1<sp/>=<sp/>stbi__fsh(p2-p3);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="2439"><highlight class="preprocessor"><sp/><sp/><sp/>x0<sp/>=<sp/>t0+t3;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="2440"><highlight class="preprocessor"><sp/><sp/><sp/>x3<sp/>=<sp/>t0-t3;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="2441"><highlight class="preprocessor"><sp/><sp/><sp/>x1<sp/>=<sp/>t1+t2;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="2442"><highlight class="preprocessor"><sp/><sp/><sp/>x2<sp/>=<sp/>t1-t2;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="2443"><highlight class="preprocessor"><sp/><sp/><sp/>t0<sp/>=<sp/>s7;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="2444"><highlight class="preprocessor"><sp/><sp/><sp/>t1<sp/>=<sp/>s5;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="2445"><highlight class="preprocessor"><sp/><sp/><sp/>t2<sp/>=<sp/>s3;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="2446"><highlight class="preprocessor"><sp/><sp/><sp/>t3<sp/>=<sp/>s1;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="2447"><highlight class="preprocessor"><sp/><sp/><sp/>p3<sp/>=<sp/>t0+t2;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="2448"><highlight class="preprocessor"><sp/><sp/><sp/>p4<sp/>=<sp/>t1+t3;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="2449"><highlight class="preprocessor"><sp/><sp/><sp/>p1<sp/>=<sp/>t0+t3;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="2450"><highlight class="preprocessor"><sp/><sp/><sp/>p2<sp/>=<sp/>t1+t2;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="2451"><highlight class="preprocessor"><sp/><sp/><sp/>p5<sp/>=<sp/>(p3+p4)*stbi__f2f(<sp/>1.175875602f);<sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="2452"><highlight class="preprocessor"><sp/><sp/><sp/>t0<sp/>=<sp/>t0*stbi__f2f(<sp/>0.298631336f);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="2453"><highlight class="preprocessor"><sp/><sp/><sp/>t1<sp/>=<sp/>t1*stbi__f2f(<sp/>2.053119869f);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="2454"><highlight class="preprocessor"><sp/><sp/><sp/>t2<sp/>=<sp/>t2*stbi__f2f(<sp/>3.072711026f);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="2455"><highlight class="preprocessor"><sp/><sp/><sp/>t3<sp/>=<sp/>t3*stbi__f2f(<sp/>1.501321110f);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="2456"><highlight class="preprocessor"><sp/><sp/><sp/>p1<sp/>=<sp/>p5<sp/>+<sp/>p1*stbi__f2f(-0.899976223f);<sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="2457"><highlight class="preprocessor"><sp/><sp/><sp/>p2<sp/>=<sp/>p5<sp/>+<sp/>p2*stbi__f2f(-2.562915447f);<sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="2458"><highlight class="preprocessor"><sp/><sp/><sp/>p3<sp/>=<sp/>p3*stbi__f2f(-1.961570560f);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="2459"><highlight class="preprocessor"><sp/><sp/><sp/>p4<sp/>=<sp/>p4*stbi__f2f(-0.390180644f);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="2460"><highlight class="preprocessor"><sp/><sp/><sp/>t3<sp/>+=<sp/>p1+p4;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="2461"><highlight class="preprocessor"><sp/><sp/><sp/>t2<sp/>+=<sp/>p2+p3;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="2462"><highlight class="preprocessor"><sp/><sp/><sp/>t1<sp/>+=<sp/>p2+p4;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="2463"><highlight class="preprocessor"><sp/><sp/><sp/>t0<sp/>+=<sp/>p1+p3;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2464"><highlight class="normal"></highlight></codeline>
<codeline lineno="2465"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>stbi__idct_block(<ref refid="stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d" kindref="member">stbi_uc</ref><sp/>*out,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>out_stride,<sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>data[64])</highlight></codeline>
<codeline lineno="2466"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2467"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,val[64],*v=val;</highlight></codeline>
<codeline lineno="2468"><highlight class="normal"><sp/><sp/><sp/><ref refid="stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d" kindref="member">stbi_uc</ref><sp/>*o;</highlight></codeline>
<codeline lineno="2469"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>*d<sp/>=<sp/>data;</highlight></codeline>
<codeline lineno="2470"><highlight class="normal"></highlight></codeline>
<codeline lineno="2471"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>columns</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2472"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i<sp/>&lt;<sp/>8;<sp/>++i,++d,<sp/>++v)<sp/>{</highlight></codeline>
<codeline lineno="2473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>all<sp/>zeroes,<sp/>shortcut<sp/>--<sp/>this<sp/>avoids<sp/>dequantizing<sp/>0s<sp/>and<sp/>IDCTing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(d[<sp/>8]==0<sp/>&amp;&amp;<sp/>d[16]==0<sp/>&amp;&amp;<sp/>d[24]==0<sp/>&amp;&amp;<sp/>d[32]==0</highlight></codeline>
<codeline lineno="2475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>d[40]==0<sp/>&amp;&amp;<sp/>d[48]==0<sp/>&amp;&amp;<sp/>d[56]==0)<sp/>{</highlight></codeline>
<codeline lineno="2476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>no<sp/>shortcut<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0<sp/><sp/><sp/><sp/><sp/>seconds</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>(1|2|3|4|5|6|7)==0<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0<sp/><sp/><sp/><sp/><sp/>seconds</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>all<sp/>separate<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-0.047<sp/>seconds</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>1<sp/>&amp;&amp;<sp/>2|3<sp/>&amp;&amp;<sp/>4|5<sp/>&amp;&amp;<sp/>6|7:<sp/><sp/><sp/><sp/>-0.047<sp/>seconds</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dcterm<sp/>=<sp/>d[0]*4;</highlight></codeline>
<codeline lineno="2481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v[0]<sp/>=<sp/>v[8]<sp/>=<sp/>v[16]<sp/>=<sp/>v[24]<sp/>=<sp/>v[32]<sp/>=<sp/>v[40]<sp/>=<sp/>v[48]<sp/>=<sp/>v[56]<sp/>=<sp/>dcterm;</highlight></codeline>
<codeline lineno="2482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>STBI__IDCT_1D(d[<sp/>0],d[<sp/>8],d[16],d[24],d[32],d[40],d[48],d[56])</highlight></codeline>
<codeline lineno="2484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>constants<sp/>scaled<sp/>things<sp/>up<sp/>by<sp/>1&lt;&lt;12;<sp/>let&apos;s<sp/>bring<sp/>them<sp/>back</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>down,<sp/>but<sp/>keep<sp/>2<sp/>extra<sp/>bits<sp/>of<sp/>precision</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x0<sp/>+=<sp/>512;<sp/>x1<sp/>+=<sp/>512;<sp/>x2<sp/>+=<sp/>512;<sp/>x3<sp/>+=<sp/>512;</highlight></codeline>
<codeline lineno="2487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v[<sp/>0]<sp/>=<sp/>(x0+t3)<sp/>&gt;&gt;<sp/>10;</highlight></codeline>
<codeline lineno="2488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v[56]<sp/>=<sp/>(x0-t3)<sp/>&gt;&gt;<sp/>10;</highlight></codeline>
<codeline lineno="2489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v[<sp/>8]<sp/>=<sp/>(x1+t2)<sp/>&gt;&gt;<sp/>10;</highlight></codeline>
<codeline lineno="2490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v[48]<sp/>=<sp/>(x1-t2)<sp/>&gt;&gt;<sp/>10;</highlight></codeline>
<codeline lineno="2491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v[16]<sp/>=<sp/>(x2+t1)<sp/>&gt;&gt;<sp/>10;</highlight></codeline>
<codeline lineno="2492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v[40]<sp/>=<sp/>(x2-t1)<sp/>&gt;&gt;<sp/>10;</highlight></codeline>
<codeline lineno="2493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v[24]<sp/>=<sp/>(x3+t0)<sp/>&gt;&gt;<sp/>10;</highlight></codeline>
<codeline lineno="2494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v[32]<sp/>=<sp/>(x3-t0)<sp/>&gt;&gt;<sp/>10;</highlight></codeline>
<codeline lineno="2495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2496"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2497"><highlight class="normal"></highlight></codeline>
<codeline lineno="2498"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0,<sp/>v=val,<sp/>o=out;<sp/>i<sp/>&lt;<sp/>8;<sp/>++i,v+=8,o+=out_stride)<sp/>{</highlight></codeline>
<codeline lineno="2499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>no<sp/>fast<sp/>case<sp/>since<sp/>the<sp/>first<sp/>1D<sp/>IDCT<sp/>spread<sp/>components<sp/>out</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>STBI__IDCT_1D(v[0],v[1],v[2],v[3],v[4],v[5],v[6],v[7])</highlight></codeline>
<codeline lineno="2501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>constants<sp/>scaled<sp/>things<sp/>up<sp/>by<sp/>1&lt;&lt;12,<sp/>plus<sp/>we<sp/>had<sp/>1&lt;&lt;2<sp/>from<sp/>first</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>loop,<sp/>plus<sp/>horizontal<sp/>and<sp/>vertical<sp/>each<sp/>scale<sp/>by<sp/>sqrt(8)<sp/>so<sp/>together</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>we&apos;ve<sp/>got<sp/>an<sp/>extra<sp/>1&lt;&lt;3,<sp/>so<sp/>1&lt;&lt;17<sp/>total<sp/>we<sp/>need<sp/>to<sp/>remove.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>so<sp/>we<sp/>want<sp/>to<sp/>round<sp/>that,<sp/>which<sp/>means<sp/>adding<sp/>0.5<sp/>*<sp/>1&lt;&lt;17,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>aka<sp/>65536.<sp/>Also,<sp/>we&apos;ll<sp/>end<sp/>up<sp/>with<sp/>-128<sp/>to<sp/>127<sp/>that<sp/>we<sp/>want</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>to<sp/>encode<sp/>as<sp/>0..255<sp/>by<sp/>adding<sp/>128,<sp/>so<sp/>we&apos;ll<sp/>add<sp/>that<sp/>before<sp/>the<sp/>shift</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>x0<sp/>+=<sp/>65536<sp/>+<sp/>(128&lt;&lt;17);</highlight></codeline>
<codeline lineno="2508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>x1<sp/>+=<sp/>65536<sp/>+<sp/>(128&lt;&lt;17);</highlight></codeline>
<codeline lineno="2509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>x2<sp/>+=<sp/>65536<sp/>+<sp/>(128&lt;&lt;17);</highlight></codeline>
<codeline lineno="2510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>x3<sp/>+=<sp/>65536<sp/>+<sp/>(128&lt;&lt;17);</highlight></codeline>
<codeline lineno="2511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>tried<sp/>computing<sp/>the<sp/>shifts<sp/>into<sp/>temps,<sp/>or&apos;ing<sp/>the<sp/>temps<sp/>to<sp/>see</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>any<sp/>were<sp/>out<sp/>of<sp/>range,<sp/>but<sp/>that<sp/>was<sp/>slower</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>o[0]<sp/>=<sp/>stbi__clamp((x0+t3)<sp/>&gt;&gt;<sp/>17);</highlight></codeline>
<codeline lineno="2514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>o[7]<sp/>=<sp/>stbi__clamp((x0-t3)<sp/>&gt;&gt;<sp/>17);</highlight></codeline>
<codeline lineno="2515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>o[1]<sp/>=<sp/>stbi__clamp((x1+t2)<sp/>&gt;&gt;<sp/>17);</highlight></codeline>
<codeline lineno="2516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>o[6]<sp/>=<sp/>stbi__clamp((x1-t2)<sp/>&gt;&gt;<sp/>17);</highlight></codeline>
<codeline lineno="2517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>o[2]<sp/>=<sp/>stbi__clamp((x2+t1)<sp/>&gt;&gt;<sp/>17);</highlight></codeline>
<codeline lineno="2518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>o[5]<sp/>=<sp/>stbi__clamp((x2-t1)<sp/>&gt;&gt;<sp/>17);</highlight></codeline>
<codeline lineno="2519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>o[3]<sp/>=<sp/>stbi__clamp((x3+t0)<sp/>&gt;&gt;<sp/>17);</highlight></codeline>
<codeline lineno="2520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>o[4]<sp/>=<sp/>stbi__clamp((x3-t0)<sp/>&gt;&gt;<sp/>17);</highlight></codeline>
<codeline lineno="2521"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2522"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2523"><highlight class="normal"></highlight></codeline>
<codeline lineno="2524"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>STBI_SSE2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2525"><highlight class="normal"></highlight><highlight class="comment">//<sp/>sse2<sp/>integer<sp/>IDCT.<sp/>not<sp/>the<sp/>fastest<sp/>possible<sp/>implementation<sp/>but<sp/>it</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2526"><highlight class="normal"></highlight><highlight class="comment">//<sp/>produces<sp/>bit-identical<sp/>results<sp/>to<sp/>the<sp/>generic<sp/>C<sp/>version<sp/>so<sp/>it&apos;s</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2527"><highlight class="normal"></highlight><highlight class="comment">//<sp/>fully<sp/>&quot;transparent&quot;.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2528"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>stbi__idct_simd(<ref refid="stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d" kindref="member">stbi_uc</ref><sp/>*out,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>out_stride,<sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>data[64])</highlight></codeline>
<codeline lineno="2529"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2530"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>is<sp/>constructed<sp/>to<sp/>match<sp/>our<sp/>regular<sp/>(generic)<sp/>integer<sp/>IDCT<sp/>exactly.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2531"><highlight class="normal"><sp/><sp/><sp/>__m128i<sp/>row0,<sp/>row1,<sp/>row2,<sp/>row3,<sp/>row4,<sp/>row5,<sp/>row6,<sp/>row7;</highlight></codeline>
<codeline lineno="2532"><highlight class="normal"><sp/><sp/><sp/>__m128i<sp/>tmp;</highlight></codeline>
<codeline lineno="2533"><highlight class="normal"></highlight></codeline>
<codeline lineno="2534"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>dot<sp/>product<sp/>constant:<sp/>even<sp/>elems=x,<sp/>odd<sp/>elems=y</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2535"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#define<sp/>dct_const(x,y)<sp/><sp/>_mm_setr_epi16((x),(y),(x),(y),(x),(y),(x),(y))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2536"><highlight class="normal"></highlight></codeline>
<codeline lineno="2537"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>out(0)<sp/>=<sp/>c0[even]*x<sp/>+<sp/>c0[odd]*y<sp/><sp/><sp/>(c0,<sp/>x,<sp/>y<sp/>16-bit,<sp/>out<sp/>32-bit)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2538"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>out(1)<sp/>=<sp/>c1[even]*x<sp/>+<sp/>c1[odd]*y</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2539"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#define<sp/>dct_rot(out0,out1,<sp/>x,y,c0,c1)<sp/>\</highlight></codeline>
<codeline lineno="2540"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>__m128i<sp/>c0##lo<sp/>=<sp/>_mm_unpacklo_epi16((x),(y));<sp/>\</highlight></codeline>
<codeline lineno="2541"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>__m128i<sp/>c0##hi<sp/>=<sp/>_mm_unpackhi_epi16((x),(y));<sp/>\</highlight></codeline>
<codeline lineno="2542"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>__m128i<sp/>out0##_l<sp/>=<sp/>_mm_madd_epi16(c0##lo,<sp/>c0);<sp/>\</highlight></codeline>
<codeline lineno="2543"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>__m128i<sp/>out0##_h<sp/>=<sp/>_mm_madd_epi16(c0##hi,<sp/>c0);<sp/>\</highlight></codeline>
<codeline lineno="2544"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>__m128i<sp/>out1##_l<sp/>=<sp/>_mm_madd_epi16(c0##lo,<sp/>c1);<sp/>\</highlight></codeline>
<codeline lineno="2545"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>__m128i<sp/>out1##_h<sp/>=<sp/>_mm_madd_epi16(c0##hi,<sp/>c1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2546"><highlight class="normal"></highlight></codeline>
<codeline lineno="2547"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>out<sp/>=<sp/>in<sp/>&lt;&lt;<sp/>12<sp/><sp/>(in<sp/>16-bit,<sp/>out<sp/>32-bit)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2548"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#define<sp/>dct_widen(out,<sp/>in)<sp/>\</highlight></codeline>
<codeline lineno="2549"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>__m128i<sp/>out##_l<sp/>=<sp/>_mm_srai_epi32(_mm_unpacklo_epi16(_mm_setzero_si128(),<sp/>(in)),<sp/>4);<sp/>\</highlight></codeline>
<codeline lineno="2550"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>__m128i<sp/>out##_h<sp/>=<sp/>_mm_srai_epi32(_mm_unpackhi_epi16(_mm_setzero_si128(),<sp/>(in)),<sp/>4)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2551"><highlight class="normal"></highlight></codeline>
<codeline lineno="2552"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>wide<sp/>add</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2553"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#define<sp/>dct_wadd(out,<sp/>a,<sp/>b)<sp/>\</highlight></codeline>
<codeline lineno="2554"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>__m128i<sp/>out##_l<sp/>=<sp/>_mm_add_epi32(a##_l,<sp/>b##_l);<sp/>\</highlight></codeline>
<codeline lineno="2555"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>__m128i<sp/>out##_h<sp/>=<sp/>_mm_add_epi32(a##_h,<sp/>b##_h)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2556"><highlight class="normal"></highlight></codeline>
<codeline lineno="2557"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>wide<sp/>sub</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2558"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#define<sp/>dct_wsub(out,<sp/>a,<sp/>b)<sp/>\</highlight></codeline>
<codeline lineno="2559"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>__m128i<sp/>out##_l<sp/>=<sp/>_mm_sub_epi32(a##_l,<sp/>b##_l);<sp/>\</highlight></codeline>
<codeline lineno="2560"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>__m128i<sp/>out##_h<sp/>=<sp/>_mm_sub_epi32(a##_h,<sp/>b##_h)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2561"><highlight class="normal"></highlight></codeline>
<codeline lineno="2562"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>butterfly<sp/>a/b,<sp/>add<sp/>bias,<sp/>then<sp/>shift<sp/>by<sp/>&quot;s&quot;<sp/>and<sp/>pack</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2563"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#define<sp/>dct_bfly32o(out0,<sp/>out1,<sp/>a,b,bias,s)<sp/>\</highlight></codeline>
<codeline lineno="2564"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>\</highlight></codeline>
<codeline lineno="2565"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__m128i<sp/>abiased_l<sp/>=<sp/>_mm_add_epi32(a##_l,<sp/>bias);<sp/>\</highlight></codeline>
<codeline lineno="2566"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__m128i<sp/>abiased_h<sp/>=<sp/>_mm_add_epi32(a##_h,<sp/>bias);<sp/>\</highlight></codeline>
<codeline lineno="2567"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dct_wadd(sum,<sp/>abiased,<sp/>b);<sp/>\</highlight></codeline>
<codeline lineno="2568"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dct_wsub(dif,<sp/>abiased,<sp/>b);<sp/>\</highlight></codeline>
<codeline lineno="2569"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out0<sp/>=<sp/>_mm_packs_epi32(_mm_srai_epi32(sum_l,<sp/>s),<sp/>_mm_srai_epi32(sum_h,<sp/>s));<sp/>\</highlight></codeline>
<codeline lineno="2570"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out1<sp/>=<sp/>_mm_packs_epi32(_mm_srai_epi32(dif_l,<sp/>s),<sp/>_mm_srai_epi32(dif_h,<sp/>s));<sp/>\</highlight></codeline>
<codeline lineno="2571"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2572"><highlight class="normal"></highlight></codeline>
<codeline lineno="2573"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>8-bit<sp/>interleave<sp/>step<sp/>(for<sp/>transposes)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2574"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#define<sp/>dct_interleave8(a,<sp/>b)<sp/>\</highlight></codeline>
<codeline lineno="2575"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>tmp<sp/>=<sp/>a;<sp/>\</highlight></codeline>
<codeline lineno="2576"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>a<sp/>=<sp/>_mm_unpacklo_epi8(a,<sp/>b);<sp/>\</highlight></codeline>
<codeline lineno="2577"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>b<sp/>=<sp/>_mm_unpackhi_epi8(tmp,<sp/>b)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2578"><highlight class="normal"></highlight></codeline>
<codeline lineno="2579"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>16-bit<sp/>interleave<sp/>step<sp/>(for<sp/>transposes)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2580"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#define<sp/>dct_interleave16(a,<sp/>b)<sp/>\</highlight></codeline>
<codeline lineno="2581"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>tmp<sp/>=<sp/>a;<sp/>\</highlight></codeline>
<codeline lineno="2582"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>a<sp/>=<sp/>_mm_unpacklo_epi16(a,<sp/>b);<sp/>\</highlight></codeline>
<codeline lineno="2583"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>b<sp/>=<sp/>_mm_unpackhi_epi16(tmp,<sp/>b)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2584"><highlight class="normal"></highlight></codeline>
<codeline lineno="2585"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#define<sp/>dct_pass(bias,shift)<sp/>\</highlight></codeline>
<codeline lineno="2586"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>\</highlight></codeline>
<codeline lineno="2587"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>even<sp/>part<sp/>*/</highlight><highlight class="preprocessor"><sp/>\</highlight></codeline>
<codeline lineno="2588"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dct_rot(t2e,t3e,<sp/>row2,row6,<sp/>rot0_0,rot0_1);<sp/>\</highlight></codeline>
<codeline lineno="2589"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__m128i<sp/>sum04<sp/>=<sp/>_mm_add_epi16(row0,<sp/>row4);<sp/>\</highlight></codeline>
<codeline lineno="2590"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__m128i<sp/>dif04<sp/>=<sp/>_mm_sub_epi16(row0,<sp/>row4);<sp/>\</highlight></codeline>
<codeline lineno="2591"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dct_widen(t0e,<sp/>sum04);<sp/>\</highlight></codeline>
<codeline lineno="2592"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dct_widen(t1e,<sp/>dif04);<sp/>\</highlight></codeline>
<codeline lineno="2593"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dct_wadd(x0,<sp/>t0e,<sp/>t3e);<sp/>\</highlight></codeline>
<codeline lineno="2594"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dct_wsub(x3,<sp/>t0e,<sp/>t3e);<sp/>\</highlight></codeline>
<codeline lineno="2595"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dct_wadd(x1,<sp/>t1e,<sp/>t2e);<sp/>\</highlight></codeline>
<codeline lineno="2596"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dct_wsub(x2,<sp/>t1e,<sp/>t2e);<sp/>\</highlight></codeline>
<codeline lineno="2597"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>odd<sp/>part<sp/>*/</highlight><highlight class="preprocessor"><sp/>\</highlight></codeline>
<codeline lineno="2598"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dct_rot(y0o,y2o,<sp/>row7,row3,<sp/>rot2_0,rot2_1);<sp/>\</highlight></codeline>
<codeline lineno="2599"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dct_rot(y1o,y3o,<sp/>row5,row1,<sp/>rot3_0,rot3_1);<sp/>\</highlight></codeline>
<codeline lineno="2600"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__m128i<sp/>sum17<sp/>=<sp/>_mm_add_epi16(row1,<sp/>row7);<sp/>\</highlight></codeline>
<codeline lineno="2601"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__m128i<sp/>sum35<sp/>=<sp/>_mm_add_epi16(row3,<sp/>row5);<sp/>\</highlight></codeline>
<codeline lineno="2602"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dct_rot(y4o,y5o,<sp/>sum17,sum35,<sp/>rot1_0,rot1_1);<sp/>\</highlight></codeline>
<codeline lineno="2603"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dct_wadd(x4,<sp/>y0o,<sp/>y4o);<sp/>\</highlight></codeline>
<codeline lineno="2604"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dct_wadd(x5,<sp/>y1o,<sp/>y5o);<sp/>\</highlight></codeline>
<codeline lineno="2605"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dct_wadd(x6,<sp/>y2o,<sp/>y5o);<sp/>\</highlight></codeline>
<codeline lineno="2606"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dct_wadd(x7,<sp/>y3o,<sp/>y4o);<sp/>\</highlight></codeline>
<codeline lineno="2607"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dct_bfly32o(row0,row7,<sp/>x0,x7,bias,shift);<sp/>\</highlight></codeline>
<codeline lineno="2608"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dct_bfly32o(row1,row6,<sp/>x1,x6,bias,shift);<sp/>\</highlight></codeline>
<codeline lineno="2609"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dct_bfly32o(row2,row5,<sp/>x2,x5,bias,shift);<sp/>\</highlight></codeline>
<codeline lineno="2610"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dct_bfly32o(row3,row4,<sp/>x3,x4,bias,shift);<sp/>\</highlight></codeline>
<codeline lineno="2611"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2612"><highlight class="normal"></highlight></codeline>
<codeline lineno="2613"><highlight class="normal"><sp/><sp/><sp/>__m128i<sp/>rot0_0<sp/>=<sp/>dct_const(stbi__f2f(0.5411961f),<sp/>stbi__f2f(0.5411961f)<sp/>+<sp/>stbi__f2f(-1.847759065f));</highlight></codeline>
<codeline lineno="2614"><highlight class="normal"><sp/><sp/><sp/>__m128i<sp/>rot0_1<sp/>=<sp/>dct_const(stbi__f2f(0.5411961f)<sp/>+<sp/>stbi__f2f(<sp/>0.765366865f),<sp/>stbi__f2f(0.5411961f));</highlight></codeline>
<codeline lineno="2615"><highlight class="normal"><sp/><sp/><sp/>__m128i<sp/>rot1_0<sp/>=<sp/>dct_const(stbi__f2f(1.175875602f)<sp/>+<sp/>stbi__f2f(-0.899976223f),<sp/>stbi__f2f(1.175875602f));</highlight></codeline>
<codeline lineno="2616"><highlight class="normal"><sp/><sp/><sp/>__m128i<sp/>rot1_1<sp/>=<sp/>dct_const(stbi__f2f(1.175875602f),<sp/>stbi__f2f(1.175875602f)<sp/>+<sp/>stbi__f2f(-2.562915447f));</highlight></codeline>
<codeline lineno="2617"><highlight class="normal"><sp/><sp/><sp/>__m128i<sp/>rot2_0<sp/>=<sp/>dct_const(stbi__f2f(-1.961570560f)<sp/>+<sp/>stbi__f2f(<sp/>0.298631336f),<sp/>stbi__f2f(-1.961570560f));</highlight></codeline>
<codeline lineno="2618"><highlight class="normal"><sp/><sp/><sp/>__m128i<sp/>rot2_1<sp/>=<sp/>dct_const(stbi__f2f(-1.961570560f),<sp/>stbi__f2f(-1.961570560f)<sp/>+<sp/>stbi__f2f(<sp/>3.072711026f));</highlight></codeline>
<codeline lineno="2619"><highlight class="normal"><sp/><sp/><sp/>__m128i<sp/>rot3_0<sp/>=<sp/>dct_const(stbi__f2f(-0.390180644f)<sp/>+<sp/>stbi__f2f(<sp/>2.053119869f),<sp/>stbi__f2f(-0.390180644f));</highlight></codeline>
<codeline lineno="2620"><highlight class="normal"><sp/><sp/><sp/>__m128i<sp/>rot3_1<sp/>=<sp/>dct_const(stbi__f2f(-0.390180644f),<sp/>stbi__f2f(-0.390180644f)<sp/>+<sp/>stbi__f2f(<sp/>1.501321110f));</highlight></codeline>
<codeline lineno="2621"><highlight class="normal"></highlight></codeline>
<codeline lineno="2622"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>rounding<sp/>biases<sp/>in<sp/>column/row<sp/>passes,<sp/>see<sp/>stbi__idct_block<sp/>for<sp/>explanation.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2623"><highlight class="normal"><sp/><sp/><sp/>__m128i<sp/>bias_0<sp/>=<sp/>_mm_set1_epi32(512);</highlight></codeline>
<codeline lineno="2624"><highlight class="normal"><sp/><sp/><sp/>__m128i<sp/>bias_1<sp/>=<sp/>_mm_set1_epi32(65536<sp/>+<sp/>(128&lt;&lt;17));</highlight></codeline>
<codeline lineno="2625"><highlight class="normal"></highlight></codeline>
<codeline lineno="2626"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>load</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2627"><highlight class="normal"><sp/><sp/><sp/>row0<sp/>=<sp/>_mm_load_si128((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>__m128i<sp/>*)<sp/>(data<sp/>+<sp/>0*8));</highlight></codeline>
<codeline lineno="2628"><highlight class="normal"><sp/><sp/><sp/>row1<sp/>=<sp/>_mm_load_si128((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>__m128i<sp/>*)<sp/>(data<sp/>+<sp/>1*8));</highlight></codeline>
<codeline lineno="2629"><highlight class="normal"><sp/><sp/><sp/>row2<sp/>=<sp/>_mm_load_si128((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>__m128i<sp/>*)<sp/>(data<sp/>+<sp/>2*8));</highlight></codeline>
<codeline lineno="2630"><highlight class="normal"><sp/><sp/><sp/>row3<sp/>=<sp/>_mm_load_si128((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>__m128i<sp/>*)<sp/>(data<sp/>+<sp/>3*8));</highlight></codeline>
<codeline lineno="2631"><highlight class="normal"><sp/><sp/><sp/>row4<sp/>=<sp/>_mm_load_si128((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>__m128i<sp/>*)<sp/>(data<sp/>+<sp/>4*8));</highlight></codeline>
<codeline lineno="2632"><highlight class="normal"><sp/><sp/><sp/>row5<sp/>=<sp/>_mm_load_si128((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>__m128i<sp/>*)<sp/>(data<sp/>+<sp/>5*8));</highlight></codeline>
<codeline lineno="2633"><highlight class="normal"><sp/><sp/><sp/>row6<sp/>=<sp/>_mm_load_si128((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>__m128i<sp/>*)<sp/>(data<sp/>+<sp/>6*8));</highlight></codeline>
<codeline lineno="2634"><highlight class="normal"><sp/><sp/><sp/>row7<sp/>=<sp/>_mm_load_si128((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>__m128i<sp/>*)<sp/>(data<sp/>+<sp/>7*8));</highlight></codeline>
<codeline lineno="2635"><highlight class="normal"></highlight></codeline>
<codeline lineno="2636"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>column<sp/>pass</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2637"><highlight class="normal"><sp/><sp/><sp/>dct_pass(bias_0,<sp/>10);</highlight></codeline>
<codeline lineno="2638"><highlight class="normal"></highlight></codeline>
<codeline lineno="2639"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2640"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>16bit<sp/>8x8<sp/>transpose<sp/>pass<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2641"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>dct_interleave16(row0,<sp/>row4);</highlight></codeline>
<codeline lineno="2642"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>dct_interleave16(row1,<sp/>row5);</highlight></codeline>
<codeline lineno="2643"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>dct_interleave16(row2,<sp/>row6);</highlight></codeline>
<codeline lineno="2644"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>dct_interleave16(row3,<sp/>row7);</highlight></codeline>
<codeline lineno="2645"><highlight class="normal"></highlight></codeline>
<codeline lineno="2646"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>transpose<sp/>pass<sp/>2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2647"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>dct_interleave16(row0,<sp/>row2);</highlight></codeline>
<codeline lineno="2648"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>dct_interleave16(row1,<sp/>row3);</highlight></codeline>
<codeline lineno="2649"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>dct_interleave16(row4,<sp/>row6);</highlight></codeline>
<codeline lineno="2650"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>dct_interleave16(row5,<sp/>row7);</highlight></codeline>
<codeline lineno="2651"><highlight class="normal"></highlight></codeline>
<codeline lineno="2652"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>transpose<sp/>pass<sp/>3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2653"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>dct_interleave16(row0,<sp/>row1);</highlight></codeline>
<codeline lineno="2654"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>dct_interleave16(row2,<sp/>row3);</highlight></codeline>
<codeline lineno="2655"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>dct_interleave16(row4,<sp/>row5);</highlight></codeline>
<codeline lineno="2656"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>dct_interleave16(row6,<sp/>row7);</highlight></codeline>
<codeline lineno="2657"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2658"><highlight class="normal"></highlight></codeline>
<codeline lineno="2659"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>row<sp/>pass</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2660"><highlight class="normal"><sp/><sp/><sp/>dct_pass(bias_1,<sp/>17);</highlight></codeline>
<codeline lineno="2661"><highlight class="normal"></highlight></codeline>
<codeline lineno="2662"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2663"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>pack</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2664"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__m128i<sp/>p0<sp/>=<sp/>_mm_packus_epi16(row0,<sp/>row1);<sp/></highlight><highlight class="comment">//<sp/>a0a1a2a3...a7b0b1b2b3...b7</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2665"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__m128i<sp/>p1<sp/>=<sp/>_mm_packus_epi16(row2,<sp/>row3);</highlight></codeline>
<codeline lineno="2666"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__m128i<sp/>p2<sp/>=<sp/>_mm_packus_epi16(row4,<sp/>row5);</highlight></codeline>
<codeline lineno="2667"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__m128i<sp/>p3<sp/>=<sp/>_mm_packus_epi16(row6,<sp/>row7);</highlight></codeline>
<codeline lineno="2668"><highlight class="normal"></highlight></codeline>
<codeline lineno="2669"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>8bit<sp/>8x8<sp/>transpose<sp/>pass<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2670"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>dct_interleave8(p0,<sp/>p2);<sp/></highlight><highlight class="comment">//<sp/>a0e0a1e1...</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2671"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>dct_interleave8(p1,<sp/>p3);<sp/></highlight><highlight class="comment">//<sp/>c0g0c1g1...</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2672"><highlight class="normal"></highlight></codeline>
<codeline lineno="2673"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>transpose<sp/>pass<sp/>2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2674"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>dct_interleave8(p0,<sp/>p1);<sp/></highlight><highlight class="comment">//<sp/>a0c0e0g0...</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2675"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>dct_interleave8(p2,<sp/>p3);<sp/></highlight><highlight class="comment">//<sp/>b0d0f0h0...</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2676"><highlight class="normal"></highlight></codeline>
<codeline lineno="2677"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>transpose<sp/>pass<sp/>3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2678"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>dct_interleave8(p0,<sp/>p2);<sp/></highlight><highlight class="comment">//<sp/>a0b0c0d0...</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2679"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>dct_interleave8(p1,<sp/>p3);<sp/></highlight><highlight class="comment">//<sp/>a4b4c4d4...</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2680"><highlight class="normal"></highlight></codeline>
<codeline lineno="2681"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>store</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2682"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_mm_storel_epi64((__m128i<sp/>*)<sp/>out,<sp/>p0);<sp/>out<sp/>+=<sp/>out_stride;</highlight></codeline>
<codeline lineno="2683"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_mm_storel_epi64((__m128i<sp/>*)<sp/>out,<sp/>_mm_shuffle_epi32(p0,<sp/>0x4e));<sp/>out<sp/>+=<sp/>out_stride;</highlight></codeline>
<codeline lineno="2684"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_mm_storel_epi64((__m128i<sp/>*)<sp/>out,<sp/>p2);<sp/>out<sp/>+=<sp/>out_stride;</highlight></codeline>
<codeline lineno="2685"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_mm_storel_epi64((__m128i<sp/>*)<sp/>out,<sp/>_mm_shuffle_epi32(p2,<sp/>0x4e));<sp/>out<sp/>+=<sp/>out_stride;</highlight></codeline>
<codeline lineno="2686"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_mm_storel_epi64((__m128i<sp/>*)<sp/>out,<sp/>p1);<sp/>out<sp/>+=<sp/>out_stride;</highlight></codeline>
<codeline lineno="2687"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_mm_storel_epi64((__m128i<sp/>*)<sp/>out,<sp/>_mm_shuffle_epi32(p1,<sp/>0x4e));<sp/>out<sp/>+=<sp/>out_stride;</highlight></codeline>
<codeline lineno="2688"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_mm_storel_epi64((__m128i<sp/>*)<sp/>out,<sp/>p3);<sp/>out<sp/>+=<sp/>out_stride;</highlight></codeline>
<codeline lineno="2689"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_mm_storel_epi64((__m128i<sp/>*)<sp/>out,<sp/>_mm_shuffle_epi32(p3,<sp/>0x4e));</highlight></codeline>
<codeline lineno="2690"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2691"><highlight class="normal"></highlight></codeline>
<codeline lineno="2692"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>dct_const</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2693"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>dct_rot</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2694"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>dct_widen</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2695"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>dct_wadd</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2696"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>dct_wsub</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2697"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>dct_bfly32o</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2698"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>dct_interleave8</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2699"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>dct_interleave16</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2700"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>dct_pass</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2701"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2702"><highlight class="normal"></highlight></codeline>
<codeline lineno="2703"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>STBI_SSE2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2704"><highlight class="normal"></highlight></codeline>
<codeline lineno="2705"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>STBI_NEON</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2706"><highlight class="normal"></highlight></codeline>
<codeline lineno="2707"><highlight class="normal"></highlight><highlight class="comment">//<sp/>NEON<sp/>integer<sp/>IDCT.<sp/>should<sp/>produce<sp/>bit-identical</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2708"><highlight class="normal"></highlight><highlight class="comment">//<sp/>results<sp/>to<sp/>the<sp/>generic<sp/>C<sp/>version.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2709"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>stbi__idct_simd(<ref refid="stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d" kindref="member">stbi_uc</ref><sp/>*out,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>out_stride,<sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>data[64])</highlight></codeline>
<codeline lineno="2710"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2711"><highlight class="normal"><sp/><sp/><sp/>int16x8_t<sp/>row0,<sp/>row1,<sp/>row2,<sp/>row3,<sp/>row4,<sp/>row5,<sp/>row6,<sp/>row7;</highlight></codeline>
<codeline lineno="2712"><highlight class="normal"></highlight></codeline>
<codeline lineno="2713"><highlight class="normal"><sp/><sp/><sp/>int16x4_t<sp/>rot0_0<sp/>=<sp/>vdup_n_s16(stbi__f2f(0.5411961f));</highlight></codeline>
<codeline lineno="2714"><highlight class="normal"><sp/><sp/><sp/>int16x4_t<sp/>rot0_1<sp/>=<sp/>vdup_n_s16(stbi__f2f(-1.847759065f));</highlight></codeline>
<codeline lineno="2715"><highlight class="normal"><sp/><sp/><sp/>int16x4_t<sp/>rot0_2<sp/>=<sp/>vdup_n_s16(stbi__f2f(<sp/>0.765366865f));</highlight></codeline>
<codeline lineno="2716"><highlight class="normal"><sp/><sp/><sp/>int16x4_t<sp/>rot1_0<sp/>=<sp/>vdup_n_s16(stbi__f2f(<sp/>1.175875602f));</highlight></codeline>
<codeline lineno="2717"><highlight class="normal"><sp/><sp/><sp/>int16x4_t<sp/>rot1_1<sp/>=<sp/>vdup_n_s16(stbi__f2f(-0.899976223f));</highlight></codeline>
<codeline lineno="2718"><highlight class="normal"><sp/><sp/><sp/>int16x4_t<sp/>rot1_2<sp/>=<sp/>vdup_n_s16(stbi__f2f(-2.562915447f));</highlight></codeline>
<codeline lineno="2719"><highlight class="normal"><sp/><sp/><sp/>int16x4_t<sp/>rot2_0<sp/>=<sp/>vdup_n_s16(stbi__f2f(-1.961570560f));</highlight></codeline>
<codeline lineno="2720"><highlight class="normal"><sp/><sp/><sp/>int16x4_t<sp/>rot2_1<sp/>=<sp/>vdup_n_s16(stbi__f2f(-0.390180644f));</highlight></codeline>
<codeline lineno="2721"><highlight class="normal"><sp/><sp/><sp/>int16x4_t<sp/>rot3_0<sp/>=<sp/>vdup_n_s16(stbi__f2f(<sp/>0.298631336f));</highlight></codeline>
<codeline lineno="2722"><highlight class="normal"><sp/><sp/><sp/>int16x4_t<sp/>rot3_1<sp/>=<sp/>vdup_n_s16(stbi__f2f(<sp/>2.053119869f));</highlight></codeline>
<codeline lineno="2723"><highlight class="normal"><sp/><sp/><sp/>int16x4_t<sp/>rot3_2<sp/>=<sp/>vdup_n_s16(stbi__f2f(<sp/>3.072711026f));</highlight></codeline>
<codeline lineno="2724"><highlight class="normal"><sp/><sp/><sp/>int16x4_t<sp/>rot3_3<sp/>=<sp/>vdup_n_s16(stbi__f2f(<sp/>1.501321110f));</highlight></codeline>
<codeline lineno="2725"><highlight class="normal"></highlight></codeline>
<codeline lineno="2726"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>dct_long_mul(out,<sp/>inq,<sp/>coeff)<sp/>\</highlight></codeline>
<codeline lineno="2727"><highlight class="preprocessor"><sp/><sp/><sp/>int32x4_t<sp/>out##_l<sp/>=<sp/>vmull_s16(vget_low_s16(inq),<sp/>coeff);<sp/>\</highlight></codeline>
<codeline lineno="2728"><highlight class="preprocessor"><sp/><sp/><sp/>int32x4_t<sp/>out##_h<sp/>=<sp/>vmull_s16(vget_high_s16(inq),<sp/>coeff)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2729"><highlight class="normal"></highlight></codeline>
<codeline lineno="2730"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>dct_long_mac(out,<sp/>acc,<sp/>inq,<sp/>coeff)<sp/>\</highlight></codeline>
<codeline lineno="2731"><highlight class="preprocessor"><sp/><sp/><sp/>int32x4_t<sp/>out##_l<sp/>=<sp/>vmlal_s16(acc##_l,<sp/>vget_low_s16(inq),<sp/>coeff);<sp/>\</highlight></codeline>
<codeline lineno="2732"><highlight class="preprocessor"><sp/><sp/><sp/>int32x4_t<sp/>out##_h<sp/>=<sp/>vmlal_s16(acc##_h,<sp/>vget_high_s16(inq),<sp/>coeff)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2733"><highlight class="normal"></highlight></codeline>
<codeline lineno="2734"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>dct_widen(out,<sp/>inq)<sp/>\</highlight></codeline>
<codeline lineno="2735"><highlight class="preprocessor"><sp/><sp/><sp/>int32x4_t<sp/>out##_l<sp/>=<sp/>vshll_n_s16(vget_low_s16(inq),<sp/>12);<sp/>\</highlight></codeline>
<codeline lineno="2736"><highlight class="preprocessor"><sp/><sp/><sp/>int32x4_t<sp/>out##_h<sp/>=<sp/>vshll_n_s16(vget_high_s16(inq),<sp/>12)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2737"><highlight class="normal"></highlight></codeline>
<codeline lineno="2738"><highlight class="normal"></highlight><highlight class="comment">//<sp/>wide<sp/>add</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2739"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>dct_wadd(out,<sp/>a,<sp/>b)<sp/>\</highlight></codeline>
<codeline lineno="2740"><highlight class="preprocessor"><sp/><sp/><sp/>int32x4_t<sp/>out##_l<sp/>=<sp/>vaddq_s32(a##_l,<sp/>b##_l);<sp/>\</highlight></codeline>
<codeline lineno="2741"><highlight class="preprocessor"><sp/><sp/><sp/>int32x4_t<sp/>out##_h<sp/>=<sp/>vaddq_s32(a##_h,<sp/>b##_h)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2742"><highlight class="normal"></highlight></codeline>
<codeline lineno="2743"><highlight class="normal"></highlight><highlight class="comment">//<sp/>wide<sp/>sub</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2744"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>dct_wsub(out,<sp/>a,<sp/>b)<sp/>\</highlight></codeline>
<codeline lineno="2745"><highlight class="preprocessor"><sp/><sp/><sp/>int32x4_t<sp/>out##_l<sp/>=<sp/>vsubq_s32(a##_l,<sp/>b##_l);<sp/>\</highlight></codeline>
<codeline lineno="2746"><highlight class="preprocessor"><sp/><sp/><sp/>int32x4_t<sp/>out##_h<sp/>=<sp/>vsubq_s32(a##_h,<sp/>b##_h)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2747"><highlight class="normal"></highlight></codeline>
<codeline lineno="2748"><highlight class="normal"></highlight><highlight class="comment">//<sp/>butterfly<sp/>a/b,<sp/>then<sp/>shift<sp/>using<sp/>&quot;shiftop&quot;<sp/>by<sp/>&quot;s&quot;<sp/>and<sp/>pack</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2749"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>dct_bfly32o(out0,out1,<sp/>a,b,shiftop,s)<sp/>\</highlight></codeline>
<codeline lineno="2750"><highlight class="preprocessor"><sp/><sp/><sp/>{<sp/>\</highlight></codeline>
<codeline lineno="2751"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>dct_wadd(sum,<sp/>a,<sp/>b);<sp/>\</highlight></codeline>
<codeline lineno="2752"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>dct_wsub(dif,<sp/>a,<sp/>b);<sp/>\</highlight></codeline>
<codeline lineno="2753"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>out0<sp/>=<sp/>vcombine_s16(shiftop(sum_l,<sp/>s),<sp/>shiftop(sum_h,<sp/>s));<sp/>\</highlight></codeline>
<codeline lineno="2754"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>out1<sp/>=<sp/>vcombine_s16(shiftop(dif_l,<sp/>s),<sp/>shiftop(dif_h,<sp/>s));<sp/>\</highlight></codeline>
<codeline lineno="2755"><highlight class="preprocessor"><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2756"><highlight class="normal"></highlight></codeline>
<codeline lineno="2757"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>dct_pass(shiftop,<sp/>shift)<sp/>\</highlight></codeline>
<codeline lineno="2758"><highlight class="preprocessor"><sp/><sp/><sp/>{<sp/>\</highlight></codeline>
<codeline lineno="2759"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>even<sp/>part<sp/>*/</highlight><highlight class="preprocessor"><sp/>\</highlight></codeline>
<codeline lineno="2760"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>int16x8_t<sp/>sum26<sp/>=<sp/>vaddq_s16(row2,<sp/>row6);<sp/>\</highlight></codeline>
<codeline lineno="2761"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>dct_long_mul(p1e,<sp/>sum26,<sp/>rot0_0);<sp/>\</highlight></codeline>
<codeline lineno="2762"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>dct_long_mac(t2e,<sp/>p1e,<sp/>row6,<sp/>rot0_1);<sp/>\</highlight></codeline>
<codeline lineno="2763"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>dct_long_mac(t3e,<sp/>p1e,<sp/>row2,<sp/>rot0_2);<sp/>\</highlight></codeline>
<codeline lineno="2764"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>int16x8_t<sp/>sum04<sp/>=<sp/>vaddq_s16(row0,<sp/>row4);<sp/>\</highlight></codeline>
<codeline lineno="2765"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>int16x8_t<sp/>dif04<sp/>=<sp/>vsubq_s16(row0,<sp/>row4);<sp/>\</highlight></codeline>
<codeline lineno="2766"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>dct_widen(t0e,<sp/>sum04);<sp/>\</highlight></codeline>
<codeline lineno="2767"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>dct_widen(t1e,<sp/>dif04);<sp/>\</highlight></codeline>
<codeline lineno="2768"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>dct_wadd(x0,<sp/>t0e,<sp/>t3e);<sp/>\</highlight></codeline>
<codeline lineno="2769"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>dct_wsub(x3,<sp/>t0e,<sp/>t3e);<sp/>\</highlight></codeline>
<codeline lineno="2770"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>dct_wadd(x1,<sp/>t1e,<sp/>t2e);<sp/>\</highlight></codeline>
<codeline lineno="2771"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>dct_wsub(x2,<sp/>t1e,<sp/>t2e);<sp/>\</highlight></codeline>
<codeline lineno="2772"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>odd<sp/>part<sp/>*/</highlight><highlight class="preprocessor"><sp/>\</highlight></codeline>
<codeline lineno="2773"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>int16x8_t<sp/>sum15<sp/>=<sp/>vaddq_s16(row1,<sp/>row5);<sp/>\</highlight></codeline>
<codeline lineno="2774"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>int16x8_t<sp/>sum17<sp/>=<sp/>vaddq_s16(row1,<sp/>row7);<sp/>\</highlight></codeline>
<codeline lineno="2775"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>int16x8_t<sp/>sum35<sp/>=<sp/>vaddq_s16(row3,<sp/>row5);<sp/>\</highlight></codeline>
<codeline lineno="2776"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>int16x8_t<sp/>sum37<sp/>=<sp/>vaddq_s16(row3,<sp/>row7);<sp/>\</highlight></codeline>
<codeline lineno="2777"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>int16x8_t<sp/>sumodd<sp/>=<sp/>vaddq_s16(sum17,<sp/>sum35);<sp/>\</highlight></codeline>
<codeline lineno="2778"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>dct_long_mul(p5o,<sp/>sumodd,<sp/>rot1_0);<sp/>\</highlight></codeline>
<codeline lineno="2779"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>dct_long_mac(p1o,<sp/>p5o,<sp/>sum17,<sp/>rot1_1);<sp/>\</highlight></codeline>
<codeline lineno="2780"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>dct_long_mac(p2o,<sp/>p5o,<sp/>sum35,<sp/>rot1_2);<sp/>\</highlight></codeline>
<codeline lineno="2781"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>dct_long_mul(p3o,<sp/>sum37,<sp/>rot2_0);<sp/>\</highlight></codeline>
<codeline lineno="2782"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>dct_long_mul(p4o,<sp/>sum15,<sp/>rot2_1);<sp/>\</highlight></codeline>
<codeline lineno="2783"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>dct_wadd(sump13o,<sp/>p1o,<sp/>p3o);<sp/>\</highlight></codeline>
<codeline lineno="2784"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>dct_wadd(sump24o,<sp/>p2o,<sp/>p4o);<sp/>\</highlight></codeline>
<codeline lineno="2785"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>dct_wadd(sump23o,<sp/>p2o,<sp/>p3o);<sp/>\</highlight></codeline>
<codeline lineno="2786"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>dct_wadd(sump14o,<sp/>p1o,<sp/>p4o);<sp/>\</highlight></codeline>
<codeline lineno="2787"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>dct_long_mac(x4,<sp/>sump13o,<sp/>row7,<sp/>rot3_0);<sp/>\</highlight></codeline>
<codeline lineno="2788"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>dct_long_mac(x5,<sp/>sump24o,<sp/>row5,<sp/>rot3_1);<sp/>\</highlight></codeline>
<codeline lineno="2789"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>dct_long_mac(x6,<sp/>sump23o,<sp/>row3,<sp/>rot3_2);<sp/>\</highlight></codeline>
<codeline lineno="2790"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>dct_long_mac(x7,<sp/>sump14o,<sp/>row1,<sp/>rot3_3);<sp/>\</highlight></codeline>
<codeline lineno="2791"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>dct_bfly32o(row0,row7,<sp/>x0,x7,shiftop,shift);<sp/>\</highlight></codeline>
<codeline lineno="2792"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>dct_bfly32o(row1,row6,<sp/>x1,x6,shiftop,shift);<sp/>\</highlight></codeline>
<codeline lineno="2793"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>dct_bfly32o(row2,row5,<sp/>x2,x5,shiftop,shift);<sp/>\</highlight></codeline>
<codeline lineno="2794"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>dct_bfly32o(row3,row4,<sp/>x3,x4,shiftop,shift);<sp/>\</highlight></codeline>
<codeline lineno="2795"><highlight class="preprocessor"><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2796"><highlight class="normal"></highlight></codeline>
<codeline lineno="2797"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>load</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2798"><highlight class="normal"><sp/><sp/><sp/>row0<sp/>=<sp/>vld1q_s16(data<sp/>+<sp/>0*8);</highlight></codeline>
<codeline lineno="2799"><highlight class="normal"><sp/><sp/><sp/>row1<sp/>=<sp/>vld1q_s16(data<sp/>+<sp/>1*8);</highlight></codeline>
<codeline lineno="2800"><highlight class="normal"><sp/><sp/><sp/>row2<sp/>=<sp/>vld1q_s16(data<sp/>+<sp/>2*8);</highlight></codeline>
<codeline lineno="2801"><highlight class="normal"><sp/><sp/><sp/>row3<sp/>=<sp/>vld1q_s16(data<sp/>+<sp/>3*8);</highlight></codeline>
<codeline lineno="2802"><highlight class="normal"><sp/><sp/><sp/>row4<sp/>=<sp/>vld1q_s16(data<sp/>+<sp/>4*8);</highlight></codeline>
<codeline lineno="2803"><highlight class="normal"><sp/><sp/><sp/>row5<sp/>=<sp/>vld1q_s16(data<sp/>+<sp/>5*8);</highlight></codeline>
<codeline lineno="2804"><highlight class="normal"><sp/><sp/><sp/>row6<sp/>=<sp/>vld1q_s16(data<sp/>+<sp/>6*8);</highlight></codeline>
<codeline lineno="2805"><highlight class="normal"><sp/><sp/><sp/>row7<sp/>=<sp/>vld1q_s16(data<sp/>+<sp/>7*8);</highlight></codeline>
<codeline lineno="2806"><highlight class="normal"></highlight></codeline>
<codeline lineno="2807"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>add<sp/>DC<sp/>bias</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2808"><highlight class="normal"><sp/><sp/><sp/>row0<sp/>=<sp/>vaddq_s16(row0,<sp/>vsetq_lane_s16(1024,<sp/>vdupq_n_s16(0),<sp/>0));</highlight></codeline>
<codeline lineno="2809"><highlight class="normal"></highlight></codeline>
<codeline lineno="2810"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>column<sp/>pass</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2811"><highlight class="normal"><sp/><sp/><sp/>dct_pass(vrshrn_n_s32,<sp/>10);</highlight></codeline>
<codeline lineno="2812"><highlight class="normal"></highlight></codeline>
<codeline lineno="2813"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>16bit<sp/>8x8<sp/>transpose</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2814"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2815"><highlight class="normal"></highlight><highlight class="comment">//<sp/>these<sp/>three<sp/>map<sp/>to<sp/>a<sp/>single<sp/>VTRN.16,<sp/>VTRN.32,<sp/>and<sp/>VSWP,<sp/>respectively.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2816"><highlight class="normal"></highlight><highlight class="comment">//<sp/>whether<sp/>compilers<sp/>actually<sp/>get<sp/>this<sp/>is<sp/>another<sp/>story,<sp/>sadly.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2817"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>dct_trn16(x,<sp/>y)<sp/>{<sp/>int16x8x2_t<sp/>t<sp/>=<sp/>vtrnq_s16(x,<sp/>y);<sp/>x<sp/>=<sp/>t.val[0];<sp/>y<sp/>=<sp/>t.val[1];<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2818"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>dct_trn32(x,<sp/>y)<sp/>{<sp/>int32x4x2_t<sp/>t<sp/>=<sp/>vtrnq_s32(vreinterpretq_s32_s16(x),<sp/>vreinterpretq_s32_s16(y));<sp/>x<sp/>=<sp/>vreinterpretq_s16_s32(t.val[0]);<sp/>y<sp/>=<sp/>vreinterpretq_s16_s32(t.val[1]);<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2819"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>dct_trn64(x,<sp/>y)<sp/>{<sp/>int16x8_t<sp/>x0<sp/>=<sp/>x;<sp/>int16x8_t<sp/>y0<sp/>=<sp/>y;<sp/>x<sp/>=<sp/>vcombine_s16(vget_low_s16(x0),<sp/>vget_low_s16(y0));<sp/>y<sp/>=<sp/>vcombine_s16(vget_high_s16(x0),<sp/>vget_high_s16(y0));<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2820"><highlight class="normal"></highlight></codeline>
<codeline lineno="2821"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>pass<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2822"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>dct_trn16(row0,<sp/>row1);<sp/></highlight><highlight class="comment">//<sp/>a0b0a2b2a4b4a6b6</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2823"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>dct_trn16(row2,<sp/>row3);</highlight></codeline>
<codeline lineno="2824"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>dct_trn16(row4,<sp/>row5);</highlight></codeline>
<codeline lineno="2825"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>dct_trn16(row6,<sp/>row7);</highlight></codeline>
<codeline lineno="2826"><highlight class="normal"></highlight></codeline>
<codeline lineno="2827"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>pass<sp/>2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2828"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>dct_trn32(row0,<sp/>row2);<sp/></highlight><highlight class="comment">//<sp/>a0b0c0d0a4b4c4d4</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2829"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>dct_trn32(row1,<sp/>row3);</highlight></codeline>
<codeline lineno="2830"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>dct_trn32(row4,<sp/>row6);</highlight></codeline>
<codeline lineno="2831"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>dct_trn32(row5,<sp/>row7);</highlight></codeline>
<codeline lineno="2832"><highlight class="normal"></highlight></codeline>
<codeline lineno="2833"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>pass<sp/>3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2834"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>dct_trn64(row0,<sp/>row4);<sp/></highlight><highlight class="comment">//<sp/>a0b0c0d0e0f0g0h0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2835"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>dct_trn64(row1,<sp/>row5);</highlight></codeline>
<codeline lineno="2836"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>dct_trn64(row2,<sp/>row6);</highlight></codeline>
<codeline lineno="2837"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>dct_trn64(row3,<sp/>row7);</highlight></codeline>
<codeline lineno="2838"><highlight class="normal"></highlight></codeline>
<codeline lineno="2839"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>dct_trn16</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2840"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>dct_trn32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2841"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>dct_trn64</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2842"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2843"><highlight class="normal"></highlight></codeline>
<codeline lineno="2844"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>row<sp/>pass</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2845"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>vrshrn_n_s32<sp/>only<sp/>supports<sp/>shifts<sp/>up<sp/>to<sp/>16,<sp/>we<sp/>need</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2846"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>17.<sp/>so<sp/>do<sp/>a<sp/>non-rounding<sp/>shift<sp/>of<sp/>16<sp/>first<sp/>then<sp/>follow</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2847"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>up<sp/>with<sp/>a<sp/>rounding<sp/>shift<sp/>by<sp/>1.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2848"><highlight class="normal"><sp/><sp/><sp/>dct_pass(vshrn_n_s32,<sp/>16);</highlight></codeline>
<codeline lineno="2849"><highlight class="normal"></highlight></codeline>
<codeline lineno="2850"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2851"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>pack<sp/>and<sp/>round</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2852"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>uint8x8_t<sp/>p0<sp/>=<sp/>vqrshrun_n_s16(row0,<sp/>1);</highlight></codeline>
<codeline lineno="2853"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>uint8x8_t<sp/>p1<sp/>=<sp/>vqrshrun_n_s16(row1,<sp/>1);</highlight></codeline>
<codeline lineno="2854"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>uint8x8_t<sp/>p2<sp/>=<sp/>vqrshrun_n_s16(row2,<sp/>1);</highlight></codeline>
<codeline lineno="2855"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>uint8x8_t<sp/>p3<sp/>=<sp/>vqrshrun_n_s16(row3,<sp/>1);</highlight></codeline>
<codeline lineno="2856"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>uint8x8_t<sp/>p4<sp/>=<sp/>vqrshrun_n_s16(row4,<sp/>1);</highlight></codeline>
<codeline lineno="2857"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>uint8x8_t<sp/>p5<sp/>=<sp/>vqrshrun_n_s16(row5,<sp/>1);</highlight></codeline>
<codeline lineno="2858"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>uint8x8_t<sp/>p6<sp/>=<sp/>vqrshrun_n_s16(row6,<sp/>1);</highlight></codeline>
<codeline lineno="2859"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>uint8x8_t<sp/>p7<sp/>=<sp/>vqrshrun_n_s16(row7,<sp/>1);</highlight></codeline>
<codeline lineno="2860"><highlight class="normal"></highlight></codeline>
<codeline lineno="2861"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>again,<sp/>these<sp/>can<sp/>translate<sp/>into<sp/>one<sp/>instruction,<sp/>but<sp/>often<sp/>don&apos;t.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2862"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>dct_trn8_8(x,<sp/>y)<sp/>{<sp/>uint8x8x2_t<sp/>t<sp/>=<sp/>vtrn_u8(x,<sp/>y);<sp/>x<sp/>=<sp/>t.val[0];<sp/>y<sp/>=<sp/>t.val[1];<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2863"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>dct_trn8_16(x,<sp/>y)<sp/>{<sp/>uint16x4x2_t<sp/>t<sp/>=<sp/>vtrn_u16(vreinterpret_u16_u8(x),<sp/>vreinterpret_u16_u8(y));<sp/>x<sp/>=<sp/>vreinterpret_u8_u16(t.val[0]);<sp/>y<sp/>=<sp/>vreinterpret_u8_u16(t.val[1]);<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2864"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>dct_trn8_32(x,<sp/>y)<sp/>{<sp/>uint32x2x2_t<sp/>t<sp/>=<sp/>vtrn_u32(vreinterpret_u32_u8(x),<sp/>vreinterpret_u32_u8(y));<sp/>x<sp/>=<sp/>vreinterpret_u8_u32(t.val[0]);<sp/>y<sp/>=<sp/>vreinterpret_u8_u32(t.val[1]);<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2865"><highlight class="normal"></highlight></codeline>
<codeline lineno="2866"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>sadly<sp/>can&apos;t<sp/>use<sp/>interleaved<sp/>stores<sp/>here<sp/>since<sp/>we<sp/>only<sp/>write</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2867"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>8<sp/>bytes<sp/>to<sp/>each<sp/>scan<sp/>line!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2868"><highlight class="normal"></highlight></codeline>
<codeline lineno="2869"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>8x8<sp/>8-bit<sp/>transpose<sp/>pass<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2870"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>dct_trn8_8(p0,<sp/>p1);</highlight></codeline>
<codeline lineno="2871"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>dct_trn8_8(p2,<sp/>p3);</highlight></codeline>
<codeline lineno="2872"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>dct_trn8_8(p4,<sp/>p5);</highlight></codeline>
<codeline lineno="2873"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>dct_trn8_8(p6,<sp/>p7);</highlight></codeline>
<codeline lineno="2874"><highlight class="normal"></highlight></codeline>
<codeline lineno="2875"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>pass<sp/>2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2876"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>dct_trn8_16(p0,<sp/>p2);</highlight></codeline>
<codeline lineno="2877"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>dct_trn8_16(p1,<sp/>p3);</highlight></codeline>
<codeline lineno="2878"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>dct_trn8_16(p4,<sp/>p6);</highlight></codeline>
<codeline lineno="2879"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>dct_trn8_16(p5,<sp/>p7);</highlight></codeline>
<codeline lineno="2880"><highlight class="normal"></highlight></codeline>
<codeline lineno="2881"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>pass<sp/>3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2882"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>dct_trn8_32(p0,<sp/>p4);</highlight></codeline>
<codeline lineno="2883"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>dct_trn8_32(p1,<sp/>p5);</highlight></codeline>
<codeline lineno="2884"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>dct_trn8_32(p2,<sp/>p6);</highlight></codeline>
<codeline lineno="2885"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>dct_trn8_32(p3,<sp/>p7);</highlight></codeline>
<codeline lineno="2886"><highlight class="normal"></highlight></codeline>
<codeline lineno="2887"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>store</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2888"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>vst1_u8(out,<sp/>p0);<sp/>out<sp/>+=<sp/>out_stride;</highlight></codeline>
<codeline lineno="2889"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>vst1_u8(out,<sp/>p1);<sp/>out<sp/>+=<sp/>out_stride;</highlight></codeline>
<codeline lineno="2890"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>vst1_u8(out,<sp/>p2);<sp/>out<sp/>+=<sp/>out_stride;</highlight></codeline>
<codeline lineno="2891"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>vst1_u8(out,<sp/>p3);<sp/>out<sp/>+=<sp/>out_stride;</highlight></codeline>
<codeline lineno="2892"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>vst1_u8(out,<sp/>p4);<sp/>out<sp/>+=<sp/>out_stride;</highlight></codeline>
<codeline lineno="2893"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>vst1_u8(out,<sp/>p5);<sp/>out<sp/>+=<sp/>out_stride;</highlight></codeline>
<codeline lineno="2894"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>vst1_u8(out,<sp/>p6);<sp/>out<sp/>+=<sp/>out_stride;</highlight></codeline>
<codeline lineno="2895"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>vst1_u8(out,<sp/>p7);</highlight></codeline>
<codeline lineno="2896"><highlight class="normal"></highlight></codeline>
<codeline lineno="2897"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>dct_trn8_8</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2898"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>dct_trn8_16</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2899"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>dct_trn8_32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2900"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2901"><highlight class="normal"></highlight></codeline>
<codeline lineno="2902"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>dct_long_mul</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2903"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>dct_long_mac</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2904"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>dct_widen</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2905"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>dct_wadd</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2906"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>dct_wsub</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2907"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>dct_bfly32o</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2908"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>dct_pass</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2909"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2910"><highlight class="normal"></highlight></codeline>
<codeline lineno="2911"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>STBI_NEON</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2912"><highlight class="normal"></highlight></codeline>
<codeline lineno="2913"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>STBI__MARKER_none<sp/><sp/>0xff</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2914"><highlight class="normal"></highlight><highlight class="comment">//<sp/>if<sp/>there&apos;s<sp/>a<sp/>pending<sp/>marker<sp/>from<sp/>the<sp/>entropy<sp/>stream,<sp/>return<sp/>that</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2915"><highlight class="normal"></highlight><highlight class="comment">//<sp/>otherwise,<sp/>fetch<sp/>from<sp/>the<sp/>stream<sp/>and<sp/>get<sp/>a<sp/>marker.<sp/>if<sp/>there&apos;s<sp/>no</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2916"><highlight class="normal"></highlight><highlight class="comment">//<sp/>marker,<sp/>return<sp/>0xff,<sp/>which<sp/>is<sp/>never<sp/>a<sp/>valid<sp/>marker<sp/>value</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2917"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d" kindref="member">stbi_uc</ref><sp/>stbi__get_marker(stbi__jpeg<sp/>*j)</highlight></codeline>
<codeline lineno="2918"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2919"><highlight class="normal"><sp/><sp/><sp/><ref refid="stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d" kindref="member">stbi_uc</ref><sp/>x;</highlight></codeline>
<codeline lineno="2920"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(j-&gt;marker<sp/>!=<sp/>STBI__MARKER_none)<sp/>{<sp/>x<sp/>=<sp/>j-&gt;marker;<sp/>j-&gt;marker<sp/>=<sp/>STBI__MARKER_none;<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>x;<sp/>}</highlight></codeline>
<codeline lineno="2921"><highlight class="normal"><sp/><sp/><sp/>x<sp/>=<sp/>stbi__get8(j-&gt;s);</highlight></codeline>
<codeline lineno="2922"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(x<sp/>!=<sp/>0xff)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>STBI__MARKER_none;</highlight></codeline>
<codeline lineno="2923"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(x<sp/>==<sp/>0xff)</highlight></codeline>
<codeline lineno="2924"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>x<sp/>=<sp/>stbi__get8(j-&gt;s);<sp/></highlight><highlight class="comment">//<sp/>consume<sp/>repeated<sp/>0xff<sp/>fill<sp/>bytes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2925"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>x;</highlight></codeline>
<codeline lineno="2926"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2927"><highlight class="normal"></highlight></codeline>
<codeline lineno="2928"><highlight class="normal"></highlight><highlight class="comment">//<sp/>in<sp/>each<sp/>scan,<sp/>we&apos;ll<sp/>have<sp/>scan_n<sp/>components,<sp/>and<sp/>the<sp/>order</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2929"><highlight class="normal"></highlight><highlight class="comment">//<sp/>of<sp/>the<sp/>components<sp/>is<sp/>specified<sp/>by<sp/>order[]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2930"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>STBI__RESTART(x)<sp/><sp/><sp/><sp/><sp/>((x)<sp/>&gt;=<sp/>0xd0<sp/>&amp;&amp;<sp/>(x)<sp/>&lt;=<sp/>0xd7)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2931"><highlight class="normal"></highlight></codeline>
<codeline lineno="2932"><highlight class="normal"></highlight><highlight class="comment">//<sp/>after<sp/>a<sp/>restart<sp/>interval,<sp/>stbi__jpeg_reset<sp/>the<sp/>entropy<sp/>decoder<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2933"><highlight class="normal"></highlight><highlight class="comment">//<sp/>the<sp/>dc<sp/>prediction</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2934"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>stbi__jpeg_reset(stbi__jpeg<sp/>*j)</highlight></codeline>
<codeline lineno="2935"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2936"><highlight class="normal"><sp/><sp/><sp/>j-&gt;code_bits<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2937"><highlight class="normal"><sp/><sp/><sp/>j-&gt;code_buffer<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2938"><highlight class="normal"><sp/><sp/><sp/>j-&gt;nomore<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2939"><highlight class="normal"><sp/><sp/><sp/>j-&gt;img_comp[0].dc_pred<sp/>=<sp/>j-&gt;img_comp[1].dc_pred<sp/>=<sp/>j-&gt;img_comp[2].dc_pred<sp/>=<sp/>j-&gt;img_comp[3].dc_pred<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2940"><highlight class="normal"><sp/><sp/><sp/>j-&gt;marker<sp/>=<sp/>STBI__MARKER_none;</highlight></codeline>
<codeline lineno="2941"><highlight class="normal"><sp/><sp/><sp/>j-&gt;todo<sp/>=<sp/>j-&gt;restart_interval<sp/>?<sp/>j-&gt;restart_interval<sp/>:<sp/>0x7fffffff;</highlight></codeline>
<codeline lineno="2942"><highlight class="normal"><sp/><sp/><sp/>j-&gt;eob_run<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2943"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>no<sp/>more<sp/>than<sp/>1&lt;&lt;31<sp/>MCUs<sp/>if<sp/>no<sp/>restart_interal?<sp/>that&apos;s<sp/>plenty<sp/>safe,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2944"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>since<sp/>we<sp/>don&apos;t<sp/>even<sp/>allow<sp/>1&lt;&lt;30<sp/>pixels</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2945"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2946"><highlight class="normal"></highlight></codeline>
<codeline lineno="2947"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>stbi__parse_entropy_coded_data(stbi__jpeg<sp/>*z)</highlight></codeline>
<codeline lineno="2948"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2949"><highlight class="normal"><sp/><sp/><sp/>stbi__jpeg_reset(z);</highlight></codeline>
<codeline lineno="2950"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!z-&gt;progressive)<sp/>{</highlight></codeline>
<codeline lineno="2951"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(z-&gt;scan_n<sp/>==<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="2952"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,j;</highlight></codeline>
<codeline lineno="2953"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>STBI_SIMD_ALIGN(</highlight><highlight class="keywordtype">short</highlight><highlight class="normal">,<sp/>data[64]);</highlight></codeline>
<codeline lineno="2954"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n<sp/>=<sp/>z-&gt;order[0];</highlight></codeline>
<codeline lineno="2955"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>non-interleaved<sp/>data,<sp/>we<sp/>just<sp/>need<sp/>to<sp/>process<sp/>one<sp/>block<sp/>at<sp/>a<sp/>time,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2956"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>in<sp/>trivial<sp/>scanline<sp/>order</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2957"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>number<sp/>of<sp/>blocks<sp/>to<sp/>do<sp/>just<sp/>depends<sp/>on<sp/>how<sp/>many<sp/>actual<sp/>&quot;pixels&quot;<sp/>this</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2958"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>component<sp/>has,<sp/>independent<sp/>of<sp/>interleaved<sp/>MCU<sp/>blocking<sp/>and<sp/>such</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2959"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>w<sp/>=<sp/>(z-&gt;img_comp[n].x+7)<sp/>&gt;&gt;<sp/>3;</highlight></codeline>
<codeline lineno="2960"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>h<sp/>=<sp/>(z-&gt;img_comp[n].y+7)<sp/>&gt;&gt;<sp/>3;</highlight></codeline>
<codeline lineno="2961"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(j=0;<sp/>j<sp/>&lt;<sp/>h;<sp/>++j)<sp/>{</highlight></codeline>
<codeline lineno="2962"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i<sp/>&lt;<sp/>w;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="2963"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ha<sp/>=<sp/>z-&gt;img_comp[n].ha;</highlight></codeline>
<codeline lineno="2964"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!stbi__jpeg_decode_block(z,<sp/>data,<sp/>z-&gt;huff_dc+z-&gt;img_comp[n].hd,<sp/>z-&gt;huff_ac+ha,<sp/>z-&gt;fast_ac[ha],<sp/>n,<sp/>z-&gt;dequant[z-&gt;img_comp[n].tq]))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="2965"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>z-&gt;idct_block_kernel(z-&gt;img_comp[n].data+z-&gt;img_comp[n].w2*j*8+i*8,<sp/>z-&gt;img_comp[n].w2,<sp/>data);</highlight></codeline>
<codeline lineno="2966"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>every<sp/>data<sp/>block<sp/>is<sp/>an<sp/>MCU,<sp/>so<sp/>countdown<sp/>the<sp/>restart<sp/>interval</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2967"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(--z-&gt;todo<sp/>&lt;=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="2968"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(z-&gt;code_bits<sp/>&lt;<sp/>24)<sp/>stbi__grow_buffer_unsafe(z);</highlight></codeline>
<codeline lineno="2969"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>it&apos;s<sp/>NOT<sp/>a<sp/>restart,<sp/>then<sp/>just<sp/>bail,<sp/>so<sp/>we<sp/>get<sp/>corrupt<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2970"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>rather<sp/>than<sp/>no<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2971"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!STBI__RESTART(z-&gt;marker))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="2972"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stbi__jpeg_reset(z);</highlight></codeline>
<codeline lineno="2973"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2974"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2975"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2976"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="2977"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{<sp/></highlight><highlight class="comment">//<sp/>interleaved</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2978"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,j,k,x,y;</highlight></codeline>
<codeline lineno="2979"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>STBI_SIMD_ALIGN(</highlight><highlight class="keywordtype">short</highlight><highlight class="normal">,<sp/>data[64]);</highlight></codeline>
<codeline lineno="2980"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(j=0;<sp/>j<sp/>&lt;<sp/>z-&gt;img_mcu_y;<sp/>++j)<sp/>{</highlight></codeline>
<codeline lineno="2981"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i<sp/>&lt;<sp/>z-&gt;img_mcu_x;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="2982"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>scan<sp/>an<sp/>interleaved<sp/>mcu...<sp/>process<sp/>scan_n<sp/>components<sp/>in<sp/>order</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2983"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(k=0;<sp/>k<sp/>&lt;<sp/>z-&gt;scan_n;<sp/>++k)<sp/>{</highlight></codeline>
<codeline lineno="2984"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n<sp/>=<sp/>z-&gt;order[k];</highlight></codeline>
<codeline lineno="2985"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>scan<sp/>out<sp/>an<sp/>mcu&apos;s<sp/>worth<sp/>of<sp/>this<sp/>component;<sp/>that&apos;s<sp/>just<sp/>determined</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2986"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>by<sp/>the<sp/>basic<sp/>H<sp/>and<sp/>V<sp/>specified<sp/>for<sp/>the<sp/>component</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2987"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(y=0;<sp/>y<sp/>&lt;<sp/>z-&gt;img_comp[n].v;<sp/>++y)<sp/>{</highlight></codeline>
<codeline lineno="2988"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(x=0;<sp/>x<sp/>&lt;<sp/>z-&gt;img_comp[n].h;<sp/>++x)<sp/>{</highlight></codeline>
<codeline lineno="2989"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x2<sp/>=<sp/>(i*z-&gt;img_comp[n].h<sp/>+<sp/>x)*8;</highlight></codeline>
<codeline lineno="2990"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y2<sp/>=<sp/>(j*z-&gt;img_comp[n].v<sp/>+<sp/>y)*8;</highlight></codeline>
<codeline lineno="2991"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ha<sp/>=<sp/>z-&gt;img_comp[n].ha;</highlight></codeline>
<codeline lineno="2992"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!stbi__jpeg_decode_block(z,<sp/>data,<sp/>z-&gt;huff_dc+z-&gt;img_comp[n].hd,<sp/>z-&gt;huff_ac+ha,<sp/>z-&gt;fast_ac[ha],<sp/>n,<sp/>z-&gt;dequant[z-&gt;img_comp[n].tq]))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="2993"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>z-&gt;idct_block_kernel(z-&gt;img_comp[n].data+z-&gt;img_comp[n].w2*y2+x2,<sp/>z-&gt;img_comp[n].w2,<sp/>data);</highlight></codeline>
<codeline lineno="2994"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2995"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2996"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2997"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>after<sp/>all<sp/>interleaved<sp/>components,<sp/>that&apos;s<sp/>an<sp/>interleaved<sp/>MCU,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2998"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>so<sp/>now<sp/>count<sp/>down<sp/>the<sp/>restart<sp/>interval</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2999"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(--z-&gt;todo<sp/>&lt;=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="3000"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(z-&gt;code_bits<sp/>&lt;<sp/>24)<sp/>stbi__grow_buffer_unsafe(z);</highlight></codeline>
<codeline lineno="3001"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!STBI__RESTART(z-&gt;marker))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="3002"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stbi__jpeg_reset(z);</highlight></codeline>
<codeline lineno="3003"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3004"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3005"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3006"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="3007"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3008"><highlight class="normal"><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="3009"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(z-&gt;scan_n<sp/>==<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="3010"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,j;</highlight></codeline>
<codeline lineno="3011"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n<sp/>=<sp/>z-&gt;order[0];</highlight></codeline>
<codeline lineno="3012"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>non-interleaved<sp/>data,<sp/>we<sp/>just<sp/>need<sp/>to<sp/>process<sp/>one<sp/>block<sp/>at<sp/>a<sp/>time,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3013"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>in<sp/>trivial<sp/>scanline<sp/>order</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3014"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>number<sp/>of<sp/>blocks<sp/>to<sp/>do<sp/>just<sp/>depends<sp/>on<sp/>how<sp/>many<sp/>actual<sp/>&quot;pixels&quot;<sp/>this</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3015"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>component<sp/>has,<sp/>independent<sp/>of<sp/>interleaved<sp/>MCU<sp/>blocking<sp/>and<sp/>such</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3016"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>w<sp/>=<sp/>(z-&gt;img_comp[n].x+7)<sp/>&gt;&gt;<sp/>3;</highlight></codeline>
<codeline lineno="3017"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>h<sp/>=<sp/>(z-&gt;img_comp[n].y+7)<sp/>&gt;&gt;<sp/>3;</highlight></codeline>
<codeline lineno="3018"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(j=0;<sp/>j<sp/>&lt;<sp/>h;<sp/>++j)<sp/>{</highlight></codeline>
<codeline lineno="3019"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i<sp/>&lt;<sp/>w;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="3020"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>*data<sp/>=<sp/>z-&gt;img_comp[n].coeff<sp/>+<sp/>64<sp/>*<sp/>(i<sp/>+<sp/>j<sp/>*<sp/>z-&gt;img_comp[n].coeff_w);</highlight></codeline>
<codeline lineno="3021"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(z-&gt;spec_start<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="3022"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!stbi__jpeg_decode_block_prog_dc(z,<sp/>data,<sp/>&amp;z-&gt;huff_dc[z-&gt;img_comp[n].hd],<sp/>n))</highlight></codeline>
<codeline lineno="3023"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="3024"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="3025"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ha<sp/>=<sp/>z-&gt;img_comp[n].ha;</highlight></codeline>
<codeline lineno="3026"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!stbi__jpeg_decode_block_prog_ac(z,<sp/>data,<sp/>&amp;z-&gt;huff_ac[ha],<sp/>z-&gt;fast_ac[ha]))</highlight></codeline>
<codeline lineno="3027"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="3028"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3029"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>every<sp/>data<sp/>block<sp/>is<sp/>an<sp/>MCU,<sp/>so<sp/>countdown<sp/>the<sp/>restart<sp/>interval</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3030"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(--z-&gt;todo<sp/>&lt;=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="3031"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(z-&gt;code_bits<sp/>&lt;<sp/>24)<sp/>stbi__grow_buffer_unsafe(z);</highlight></codeline>
<codeline lineno="3032"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!STBI__RESTART(z-&gt;marker))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="3033"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stbi__jpeg_reset(z);</highlight></codeline>
<codeline lineno="3034"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3035"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3036"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3037"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="3038"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{<sp/></highlight><highlight class="comment">//<sp/>interleaved</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3039"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,j,k,x,y;</highlight></codeline>
<codeline lineno="3040"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(j=0;<sp/>j<sp/>&lt;<sp/>z-&gt;img_mcu_y;<sp/>++j)<sp/>{</highlight></codeline>
<codeline lineno="3041"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i<sp/>&lt;<sp/>z-&gt;img_mcu_x;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="3042"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>scan<sp/>an<sp/>interleaved<sp/>mcu...<sp/>process<sp/>scan_n<sp/>components<sp/>in<sp/>order</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3043"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(k=0;<sp/>k<sp/>&lt;<sp/>z-&gt;scan_n;<sp/>++k)<sp/>{</highlight></codeline>
<codeline lineno="3044"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n<sp/>=<sp/>z-&gt;order[k];</highlight></codeline>
<codeline lineno="3045"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>scan<sp/>out<sp/>an<sp/>mcu&apos;s<sp/>worth<sp/>of<sp/>this<sp/>component;<sp/>that&apos;s<sp/>just<sp/>determined</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3046"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>by<sp/>the<sp/>basic<sp/>H<sp/>and<sp/>V<sp/>specified<sp/>for<sp/>the<sp/>component</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3047"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(y=0;<sp/>y<sp/>&lt;<sp/>z-&gt;img_comp[n].v;<sp/>++y)<sp/>{</highlight></codeline>
<codeline lineno="3048"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(x=0;<sp/>x<sp/>&lt;<sp/>z-&gt;img_comp[n].h;<sp/>++x)<sp/>{</highlight></codeline>
<codeline lineno="3049"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x2<sp/>=<sp/>(i*z-&gt;img_comp[n].h<sp/>+<sp/>x);</highlight></codeline>
<codeline lineno="3050"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y2<sp/>=<sp/>(j*z-&gt;img_comp[n].v<sp/>+<sp/>y);</highlight></codeline>
<codeline lineno="3051"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>*data<sp/>=<sp/>z-&gt;img_comp[n].coeff<sp/>+<sp/>64<sp/>*<sp/>(x2<sp/>+<sp/>y2<sp/>*<sp/>z-&gt;img_comp[n].coeff_w);</highlight></codeline>
<codeline lineno="3052"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!stbi__jpeg_decode_block_prog_dc(z,<sp/>data,<sp/>&amp;z-&gt;huff_dc[z-&gt;img_comp[n].hd],<sp/>n))</highlight></codeline>
<codeline lineno="3053"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="3054"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3055"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3056"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3057"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>after<sp/>all<sp/>interleaved<sp/>components,<sp/>that&apos;s<sp/>an<sp/>interleaved<sp/>MCU,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3058"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>so<sp/>now<sp/>count<sp/>down<sp/>the<sp/>restart<sp/>interval</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3059"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(--z-&gt;todo<sp/>&lt;=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="3060"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(z-&gt;code_bits<sp/>&lt;<sp/>24)<sp/>stbi__grow_buffer_unsafe(z);</highlight></codeline>
<codeline lineno="3061"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!STBI__RESTART(z-&gt;marker))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="3062"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stbi__jpeg_reset(z);</highlight></codeline>
<codeline lineno="3063"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3064"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3065"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3066"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="3067"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3068"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3069"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3070"><highlight class="normal"></highlight></codeline>
<codeline lineno="3071"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>stbi__jpeg_dequantize(</highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>*data,<sp/>stbi__uint16<sp/>*dequant)</highlight></codeline>
<codeline lineno="3072"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3073"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="3074"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i<sp/>&lt;<sp/>64;<sp/>++i)</highlight></codeline>
<codeline lineno="3075"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>data[i]<sp/>*=<sp/>dequant[i];</highlight></codeline>
<codeline lineno="3076"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3077"><highlight class="normal"></highlight></codeline>
<codeline lineno="3078"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>stbi__jpeg_finish(stbi__jpeg<sp/>*z)</highlight></codeline>
<codeline lineno="3079"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3080"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(z-&gt;progressive)<sp/>{</highlight></codeline>
<codeline lineno="3081"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>dequantize<sp/>and<sp/>idct<sp/>the<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3082"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,j,n;</highlight></codeline>
<codeline lineno="3083"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(n=0;<sp/>n<sp/>&lt;<sp/>z-&gt;s-&gt;img_n;<sp/>++n)<sp/>{</highlight></codeline>
<codeline lineno="3084"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>w<sp/>=<sp/>(z-&gt;img_comp[n].x+7)<sp/>&gt;&gt;<sp/>3;</highlight></codeline>
<codeline lineno="3085"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>h<sp/>=<sp/>(z-&gt;img_comp[n].y+7)<sp/>&gt;&gt;<sp/>3;</highlight></codeline>
<codeline lineno="3086"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(j=0;<sp/>j<sp/>&lt;<sp/>h;<sp/>++j)<sp/>{</highlight></codeline>
<codeline lineno="3087"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i<sp/>&lt;<sp/>w;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="3088"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>*data<sp/>=<sp/>z-&gt;img_comp[n].coeff<sp/>+<sp/>64<sp/>*<sp/>(i<sp/>+<sp/>j<sp/>*<sp/>z-&gt;img_comp[n].coeff_w);</highlight></codeline>
<codeline lineno="3089"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stbi__jpeg_dequantize(data,<sp/>z-&gt;dequant[z-&gt;img_comp[n].tq]);</highlight></codeline>
<codeline lineno="3090"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>z-&gt;idct_block_kernel(z-&gt;img_comp[n].data+z-&gt;img_comp[n].w2*j*8+i*8,<sp/>z-&gt;img_comp[n].w2,<sp/>data);</highlight></codeline>
<codeline lineno="3091"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3092"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3093"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3094"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3095"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3096"><highlight class="normal"></highlight></codeline>
<codeline lineno="3097"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>stbi__process_marker(stbi__jpeg<sp/>*z,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>m)</highlight></codeline>
<codeline lineno="3098"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3099"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>L;</highlight></codeline>
<codeline lineno="3100"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(m)<sp/>{</highlight></codeline>
<codeline lineno="3101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>STBI__MARKER_none:<sp/></highlight><highlight class="comment">//<sp/>no<sp/>marker<sp/>found</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stbi__err(</highlight><highlight class="stringliteral">&quot;expected<sp/>marker&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;Corrupt<sp/>JPEG&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3103"><highlight class="normal"></highlight></codeline>
<codeline lineno="3104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0xDD:<sp/></highlight><highlight class="comment">//<sp/>DRI<sp/>-<sp/>specify<sp/>restart<sp/>interval</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(stbi__get16be(z-&gt;s)<sp/>!=<sp/>4)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stbi__err(</highlight><highlight class="stringliteral">&quot;bad<sp/>DRI<sp/>len&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;Corrupt<sp/>JPEG&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>z-&gt;restart_interval<sp/>=<sp/>stbi__get16be(z-&gt;s);</highlight></codeline>
<codeline lineno="3107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="3108"><highlight class="normal"></highlight></codeline>
<codeline lineno="3109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0xDB:<sp/></highlight><highlight class="comment">//<sp/>DQT<sp/>-<sp/>define<sp/>quantization<sp/>table</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>L<sp/>=<sp/>stbi__get16be(z-&gt;s)-2;</highlight></codeline>
<codeline lineno="3111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(L<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="3112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>q<sp/>=<sp/>stbi__get8(z-&gt;s);</highlight></codeline>
<codeline lineno="3113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>p<sp/>=<sp/>q<sp/>&gt;&gt;<sp/>4,<sp/>sixteen<sp/>=<sp/>(p<sp/>!=<sp/>0);</highlight></codeline>
<codeline lineno="3114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>t<sp/>=<sp/>q<sp/>&amp;<sp/>15,i;</highlight></codeline>
<codeline lineno="3115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p<sp/>!=<sp/>0<sp/>&amp;&amp;<sp/>p<sp/>!=<sp/>1)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stbi__err(</highlight><highlight class="stringliteral">&quot;bad<sp/>DQT<sp/>type&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;Corrupt<sp/>JPEG&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(t<sp/>&gt;<sp/>3)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stbi__err(</highlight><highlight class="stringliteral">&quot;bad<sp/>DQT<sp/>table&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;Corrupt<sp/>JPEG&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3117"><highlight class="normal"></highlight></codeline>
<codeline lineno="3118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i<sp/>&lt;<sp/>64;<sp/>++i)</highlight></codeline>
<codeline lineno="3119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>z-&gt;dequant[t][stbi__jpeg_dezigzag[i]]<sp/>=<sp/>(stbi__uint16)(sixteen<sp/>?<sp/>stbi__get16be(z-&gt;s)<sp/>:<sp/>stbi__get8(z-&gt;s));</highlight></codeline>
<codeline lineno="3120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>L<sp/>-=<sp/>(sixteen<sp/>?<sp/>129<sp/>:<sp/>65);</highlight></codeline>
<codeline lineno="3121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>L==0;</highlight></codeline>
<codeline lineno="3123"><highlight class="normal"></highlight></codeline>
<codeline lineno="3124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0xC4:<sp/></highlight><highlight class="comment">//<sp/>DHT<sp/>-<sp/>define<sp/>huffman<sp/>table</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>L<sp/>=<sp/>stbi__get16be(z-&gt;s)-2;</highlight></codeline>
<codeline lineno="3126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(L<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="3127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d" kindref="member">stbi_uc</ref><sp/>*v;</highlight></codeline>
<codeline lineno="3128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sizes[16],i,n=0;</highlight></codeline>
<codeline lineno="3129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>q<sp/>=<sp/>stbi__get8(z-&gt;s);</highlight></codeline>
<codeline lineno="3130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tc<sp/>=<sp/>q<sp/>&gt;&gt;<sp/>4;</highlight></codeline>
<codeline lineno="3131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>th<sp/>=<sp/>q<sp/>&amp;<sp/>15;</highlight></codeline>
<codeline lineno="3132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tc<sp/>&gt;<sp/>1<sp/>||<sp/>th<sp/>&gt;<sp/>3)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stbi__err(</highlight><highlight class="stringliteral">&quot;bad<sp/>DHT<sp/>header&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;Corrupt<sp/>JPEG&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i<sp/>&lt;<sp/>16;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="3134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sizes[i]<sp/>=<sp/>stbi__get8(z-&gt;s);</highlight></codeline>
<codeline lineno="3135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n<sp/>+=<sp/>sizes[i];</highlight></codeline>
<codeline lineno="3136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(n<sp/>&gt;<sp/>256)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stbi__err(</highlight><highlight class="stringliteral">&quot;bad<sp/>DHT<sp/>header&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;Corrupt<sp/>JPEG&quot;</highlight><highlight class="normal">);<sp/></highlight><highlight class="comment">//<sp/>Loop<sp/>over<sp/>i<sp/>&lt;<sp/>n<sp/>would<sp/>write<sp/>past<sp/>end<sp/>of<sp/>values!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>L<sp/>-=<sp/>17;</highlight></codeline>
<codeline lineno="3139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tc<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="3140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!stbi__build_huffman(z-&gt;huff_dc+th,<sp/>sizes))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="3141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v<sp/>=<sp/>z-&gt;huff_dc[th].values;</highlight></codeline>
<codeline lineno="3142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="3143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!stbi__build_huffman(z-&gt;huff_ac+th,<sp/>sizes))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="3144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v<sp/>=<sp/>z-&gt;huff_ac[th].values;</highlight></codeline>
<codeline lineno="3145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i<sp/>&lt;<sp/>n;<sp/>++i)</highlight></codeline>
<codeline lineno="3147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v[i]<sp/>=<sp/>stbi__get8(z-&gt;s);</highlight></codeline>
<codeline lineno="3148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tc<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="3149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stbi__build_fast_ac(z-&gt;fast_ac[th],<sp/>z-&gt;huff_ac<sp/>+<sp/>th);</highlight></codeline>
<codeline lineno="3150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>L<sp/>-=<sp/>n;</highlight></codeline>
<codeline lineno="3151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>L==0;</highlight></codeline>
<codeline lineno="3153"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3154"><highlight class="normal"></highlight></codeline>
<codeline lineno="3155"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>for<sp/>comment<sp/>block<sp/>or<sp/>APP<sp/>blocks</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3156"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((m<sp/>&gt;=<sp/>0xE0<sp/>&amp;&amp;<sp/>m<sp/>&lt;=<sp/>0xEF)<sp/>||<sp/>m<sp/>==<sp/>0xFE)<sp/>{</highlight></codeline>
<codeline lineno="3157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>L<sp/>=<sp/>stbi__get16be(z-&gt;s);</highlight></codeline>
<codeline lineno="3158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(L<sp/>&lt;<sp/>2)<sp/>{</highlight></codeline>
<codeline lineno="3159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m<sp/>==<sp/>0xFE)</highlight></codeline>
<codeline lineno="3160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stbi__err(</highlight><highlight class="stringliteral">&quot;bad<sp/>COM<sp/>len&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;Corrupt<sp/>JPEG&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stbi__err(</highlight><highlight class="stringliteral">&quot;bad<sp/>APP<sp/>len&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;Corrupt<sp/>JPEG&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>L<sp/>-=<sp/>2;</highlight></codeline>
<codeline lineno="3165"><highlight class="normal"></highlight></codeline>
<codeline lineno="3166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m<sp/>==<sp/>0xE0<sp/>&amp;&amp;<sp/>L<sp/>&gt;=<sp/>5)<sp/>{<sp/></highlight><highlight class="comment">//<sp/>JFIF<sp/>APP0<sp/>segment</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>tag[5]<sp/>=<sp/>{</highlight><highlight class="charliteral">&apos;J&apos;</highlight><highlight class="normal">,</highlight><highlight class="charliteral">&apos;F&apos;</highlight><highlight class="normal">,</highlight><highlight class="charliteral">&apos;I&apos;</highlight><highlight class="normal">,</highlight><highlight class="charliteral">&apos;F&apos;</highlight><highlight class="normal">,</highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">};</highlight></codeline>
<codeline lineno="3168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ok<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="3169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="3170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i<sp/>&lt;<sp/>5;<sp/>++i)</highlight></codeline>
<codeline lineno="3171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(stbi__get8(z-&gt;s)<sp/>!=<sp/>tag[i])</highlight></codeline>
<codeline lineno="3172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ok<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>L<sp/>-=<sp/>5;</highlight></codeline>
<codeline lineno="3174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ok)</highlight></codeline>
<codeline lineno="3175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>z-&gt;jfif<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="3176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m<sp/>==<sp/>0xEE<sp/>&amp;&amp;<sp/>L<sp/>&gt;=<sp/>12)<sp/>{<sp/></highlight><highlight class="comment">//<sp/>Adobe<sp/>APP14<sp/>segment</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>tag[6]<sp/>=<sp/>{</highlight><highlight class="charliteral">&apos;A&apos;</highlight><highlight class="normal">,</highlight><highlight class="charliteral">&apos;d&apos;</highlight><highlight class="normal">,</highlight><highlight class="charliteral">&apos;o&apos;</highlight><highlight class="normal">,</highlight><highlight class="charliteral">&apos;b&apos;</highlight><highlight class="normal">,</highlight><highlight class="charliteral">&apos;e&apos;</highlight><highlight class="normal">,</highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">};</highlight></codeline>
<codeline lineno="3178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ok<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="3179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="3180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i<sp/>&lt;<sp/>6;<sp/>++i)</highlight></codeline>
<codeline lineno="3181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(stbi__get8(z-&gt;s)<sp/>!=<sp/>tag[i])</highlight></codeline>
<codeline lineno="3182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ok<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>L<sp/>-=<sp/>6;</highlight></codeline>
<codeline lineno="3184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ok)<sp/>{</highlight></codeline>
<codeline lineno="3185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stbi__get8(z-&gt;s);<sp/></highlight><highlight class="comment">//<sp/>version</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stbi__get16be(z-&gt;s);<sp/></highlight><highlight class="comment">//<sp/>flags0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stbi__get16be(z-&gt;s);<sp/></highlight><highlight class="comment">//<sp/>flags1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>z-&gt;app14_color_transform<sp/>=<sp/>stbi__get8(z-&gt;s);<sp/></highlight><highlight class="comment">//<sp/>color<sp/>transform</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>L<sp/>-=<sp/>6;</highlight></codeline>
<codeline lineno="3190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3192"><highlight class="normal"></highlight></codeline>
<codeline lineno="3193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stbi__skip(z-&gt;s,<sp/>L);</highlight></codeline>
<codeline lineno="3194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="3195"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3196"><highlight class="normal"></highlight></codeline>
<codeline lineno="3197"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stbi__err(</highlight><highlight class="stringliteral">&quot;unknown<sp/>marker&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;Corrupt<sp/>JPEG&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3198"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3199"><highlight class="normal"></highlight></codeline>
<codeline lineno="3200"><highlight class="normal"></highlight><highlight class="comment">//<sp/>after<sp/>we<sp/>see<sp/>SOS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3201"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>stbi__process_scan_header(stbi__jpeg<sp/>*z)</highlight></codeline>
<codeline lineno="3202"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3203"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="3204"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Ls<sp/>=<sp/>stbi__get16be(z-&gt;s);</highlight></codeline>
<codeline lineno="3205"><highlight class="normal"><sp/><sp/><sp/>z-&gt;scan_n<sp/>=<sp/>stbi__get8(z-&gt;s);</highlight></codeline>
<codeline lineno="3206"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(z-&gt;scan_n<sp/>&lt;<sp/>1<sp/>||<sp/>z-&gt;scan_n<sp/>&gt;<sp/>4<sp/>||<sp/>z-&gt;scan_n<sp/>&gt;<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<sp/>z-&gt;s-&gt;img_n)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stbi__err(</highlight><highlight class="stringliteral">&quot;bad<sp/>SOS<sp/>component<sp/>count&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;Corrupt<sp/>JPEG&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3207"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Ls<sp/>!=<sp/>6+2*z-&gt;scan_n)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stbi__err(</highlight><highlight class="stringliteral">&quot;bad<sp/>SOS<sp/>len&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;Corrupt<sp/>JPEG&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3208"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i<sp/>&lt;<sp/>z-&gt;scan_n;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="3209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>=<sp/>stbi__get8(z-&gt;s),<sp/>which;</highlight></codeline>
<codeline lineno="3210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>q<sp/>=<sp/>stbi__get8(z-&gt;s);</highlight></codeline>
<codeline lineno="3211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(which<sp/>=<sp/>0;<sp/>which<sp/>&lt;<sp/>z-&gt;s-&gt;img_n;<sp/>++which)</highlight></codeline>
<codeline lineno="3212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(z-&gt;img_comp[which].id<sp/>==<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="3213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(which<sp/>==<sp/>z-&gt;s-&gt;img_n)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;<sp/></highlight><highlight class="comment">//<sp/>no<sp/>match</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>z-&gt;img_comp[which].hd<sp/>=<sp/>q<sp/>&gt;&gt;<sp/>4;<sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(z-&gt;img_comp[which].hd<sp/>&gt;<sp/>3)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stbi__err(</highlight><highlight class="stringliteral">&quot;bad<sp/>DC<sp/>huff&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;Corrupt<sp/>JPEG&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>z-&gt;img_comp[which].ha<sp/>=<sp/>q<sp/>&amp;<sp/>15;<sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(z-&gt;img_comp[which].ha<sp/>&gt;<sp/>3)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stbi__err(</highlight><highlight class="stringliteral">&quot;bad<sp/>AC<sp/>huff&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;Corrupt<sp/>JPEG&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>z-&gt;order[i]<sp/>=<sp/>which;</highlight></codeline>
<codeline lineno="3218"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3219"><highlight class="normal"></highlight></codeline>
<codeline lineno="3220"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>aa;</highlight></codeline>
<codeline lineno="3222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>z-&gt;spec_start<sp/>=<sp/>stbi__get8(z-&gt;s);</highlight></codeline>
<codeline lineno="3223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>z-&gt;spec_end<sp/><sp/><sp/>=<sp/>stbi__get8(z-&gt;s);<sp/></highlight><highlight class="comment">//<sp/>should<sp/>be<sp/>63,<sp/>but<sp/>might<sp/>be<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>aa<sp/>=<sp/>stbi__get8(z-&gt;s);</highlight></codeline>
<codeline lineno="3225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>z-&gt;succ_high<sp/>=<sp/>(aa<sp/>&gt;&gt;<sp/>4);</highlight></codeline>
<codeline lineno="3226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>z-&gt;succ_low<sp/><sp/>=<sp/>(aa<sp/>&amp;<sp/>15);</highlight></codeline>
<codeline lineno="3227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(z-&gt;progressive)<sp/>{</highlight></codeline>
<codeline lineno="3228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(z-&gt;spec_start<sp/>&gt;<sp/>63<sp/>||<sp/>z-&gt;spec_end<sp/>&gt;<sp/>63<sp/><sp/>||<sp/>z-&gt;spec_start<sp/>&gt;<sp/>z-&gt;spec_end<sp/>||<sp/>z-&gt;succ_high<sp/>&gt;<sp/>13<sp/>||<sp/>z-&gt;succ_low<sp/>&gt;<sp/>13)</highlight></codeline>
<codeline lineno="3229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stbi__err(</highlight><highlight class="stringliteral">&quot;bad<sp/>SOS&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Corrupt<sp/>JPEG&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="3231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(z-&gt;spec_start<sp/>!=<sp/>0)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stbi__err(</highlight><highlight class="stringliteral">&quot;bad<sp/>SOS&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;Corrupt<sp/>JPEG&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(z-&gt;succ_high<sp/>!=<sp/>0<sp/>||<sp/>z-&gt;succ_low<sp/>!=<sp/>0)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stbi__err(</highlight><highlight class="stringliteral">&quot;bad<sp/>SOS&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;Corrupt<sp/>JPEG&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>z-&gt;spec_end<sp/>=<sp/>63;</highlight></codeline>
<codeline lineno="3234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3235"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3236"><highlight class="normal"></highlight></codeline>
<codeline lineno="3237"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="3238"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3239"><highlight class="normal"></highlight></codeline>
<codeline lineno="3240"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>stbi__free_jpeg_components(stbi__jpeg<sp/>*z,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ncomp,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>why)</highlight></codeline>
<codeline lineno="3241"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3242"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="3243"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i<sp/>&lt;<sp/>ncomp;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="3244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(z-&gt;img_comp[i].raw_data)<sp/>{</highlight></codeline>
<codeline lineno="3245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>STBI_FREE(z-&gt;img_comp[i].raw_data);</highlight></codeline>
<codeline lineno="3246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>z-&gt;img_comp[i].raw_data<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="3247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>z-&gt;img_comp[i].data<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="3248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(z-&gt;img_comp[i].raw_coeff)<sp/>{</highlight></codeline>
<codeline lineno="3250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>STBI_FREE(z-&gt;img_comp[i].raw_coeff);</highlight></codeline>
<codeline lineno="3251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>z-&gt;img_comp[i].raw_coeff<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>z-&gt;img_comp[i].coeff<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(z-&gt;img_comp[i].linebuf)<sp/>{</highlight></codeline>
<codeline lineno="3255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>STBI_FREE(z-&gt;img_comp[i].linebuf);</highlight></codeline>
<codeline lineno="3256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>z-&gt;img_comp[i].linebuf<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="3257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3258"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3259"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>why;</highlight></codeline>
<codeline lineno="3260"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3261"><highlight class="normal"></highlight></codeline>
<codeline lineno="3262"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>stbi__process_frame_header(stbi__jpeg<sp/>*z,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>scan)</highlight></codeline>
<codeline lineno="3263"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3264"><highlight class="normal"><sp/><sp/><sp/>stbi__context<sp/>*s<sp/>=<sp/>z-&gt;s;</highlight></codeline>
<codeline lineno="3265"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Lf,p,i,q,<sp/>h_max=1,v_max=1,c;</highlight></codeline>
<codeline lineno="3266"><highlight class="normal"><sp/><sp/><sp/>Lf<sp/>=<sp/>stbi__get16be(s);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Lf<sp/>&lt;<sp/>11)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stbi__err(</highlight><highlight class="stringliteral">&quot;bad<sp/>SOF<sp/>len&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;Corrupt<sp/>JPEG&quot;</highlight><highlight class="normal">);<sp/></highlight><highlight class="comment">//<sp/>JPEG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3267"><highlight class="normal"><sp/><sp/><sp/>p<sp/><sp/>=<sp/>stbi__get8(s);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p<sp/>!=<sp/>8)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stbi__err(</highlight><highlight class="stringliteral">&quot;only<sp/>8-bit&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;JPEG<sp/>format<sp/>not<sp/>supported:<sp/>8-bit<sp/>only&quot;</highlight><highlight class="normal">);<sp/></highlight><highlight class="comment">//<sp/>JPEG<sp/>baseline</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3268"><highlight class="normal"><sp/><sp/><sp/>s-&gt;img_y<sp/>=<sp/>stbi__get16be(s);<sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(s-&gt;img_y<sp/>==<sp/>0)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stbi__err(</highlight><highlight class="stringliteral">&quot;no<sp/>header<sp/>height&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;JPEG<sp/>format<sp/>not<sp/>supported:<sp/>delayed<sp/>height&quot;</highlight><highlight class="normal">);<sp/></highlight><highlight class="comment">//<sp/>Legal,<sp/>but<sp/>we<sp/>don&apos;t<sp/>handle<sp/>it--but<sp/>neither<sp/>does<sp/>IJG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3269"><highlight class="normal"><sp/><sp/><sp/>s-&gt;img_x<sp/>=<sp/>stbi__get16be(s);<sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(s-&gt;img_x<sp/>==<sp/>0)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stbi__err(</highlight><highlight class="stringliteral">&quot;0<sp/>width&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;Corrupt<sp/>JPEG&quot;</highlight><highlight class="normal">);<sp/></highlight><highlight class="comment">//<sp/>JPEG<sp/>requires</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3270"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(s-&gt;img_y<sp/>&gt;<sp/>STBI_MAX_DIMENSIONS)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stbi__err(</highlight><highlight class="stringliteral">&quot;too<sp/>large&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;Very<sp/>large<sp/>image<sp/>(corrupt?)&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3271"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(s-&gt;img_x<sp/>&gt;<sp/>STBI_MAX_DIMENSIONS)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stbi__err(</highlight><highlight class="stringliteral">&quot;too<sp/>large&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;Very<sp/>large<sp/>image<sp/>(corrupt?)&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3272"><highlight class="normal"><sp/><sp/><sp/>c<sp/>=<sp/>stbi__get8(s);</highlight></codeline>
<codeline lineno="3273"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(c<sp/>!=<sp/>3<sp/>&amp;&amp;<sp/>c<sp/>!=<sp/>1<sp/>&amp;&amp;<sp/>c<sp/>!=<sp/>4)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stbi__err(</highlight><highlight class="stringliteral">&quot;bad<sp/>component<sp/>count&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;Corrupt<sp/>JPEG&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3274"><highlight class="normal"><sp/><sp/><sp/>s-&gt;img_n<sp/>=<sp/>c;</highlight></codeline>
<codeline lineno="3275"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i<sp/>&lt;<sp/>c;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="3276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>z-&gt;img_comp[i].data<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="3277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>z-&gt;img_comp[i].linebuf<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="3278"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3279"><highlight class="normal"></highlight></codeline>
<codeline lineno="3280"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Lf<sp/>!=<sp/>8+3*s-&gt;img_n)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stbi__err(</highlight><highlight class="stringliteral">&quot;bad<sp/>SOF<sp/>len&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;Corrupt<sp/>JPEG&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3281"><highlight class="normal"></highlight></codeline>
<codeline lineno="3282"><highlight class="normal"><sp/><sp/><sp/>z-&gt;rgb<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3283"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i<sp/>&lt;<sp/>s-&gt;img_n;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="3284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>rgb[3]<sp/>=<sp/>{<sp/></highlight><highlight class="charliteral">&apos;R&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;G&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;B&apos;</highlight><highlight class="normal"><sp/>};</highlight></codeline>
<codeline lineno="3285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>z-&gt;img_comp[i].id<sp/>=<sp/>stbi__get8(s);</highlight></codeline>
<codeline lineno="3286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(s-&gt;img_n<sp/>==<sp/>3<sp/>&amp;&amp;<sp/>z-&gt;img_comp[i].id<sp/>==<sp/>rgb[i])</highlight></codeline>
<codeline lineno="3287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++z-&gt;rgb;</highlight></codeline>
<codeline lineno="3288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>q<sp/>=<sp/>stbi__get8(s);</highlight></codeline>
<codeline lineno="3289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>z-&gt;img_comp[i].h<sp/>=<sp/>(q<sp/>&gt;&gt;<sp/>4);<sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!z-&gt;img_comp[i].h<sp/>||<sp/>z-&gt;img_comp[i].h<sp/>&gt;<sp/>4)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stbi__err(</highlight><highlight class="stringliteral">&quot;bad<sp/>H&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;Corrupt<sp/>JPEG&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>z-&gt;img_comp[i].v<sp/>=<sp/>q<sp/>&amp;<sp/>15;<sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!z-&gt;img_comp[i].v<sp/>||<sp/>z-&gt;img_comp[i].v<sp/>&gt;<sp/>4)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stbi__err(</highlight><highlight class="stringliteral">&quot;bad<sp/>V&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;Corrupt<sp/>JPEG&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>z-&gt;img_comp[i].tq<sp/>=<sp/>stbi__get8(s);<sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(z-&gt;img_comp[i].tq<sp/>&gt;<sp/>3)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stbi__err(</highlight><highlight class="stringliteral">&quot;bad<sp/>TQ&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;Corrupt<sp/>JPEG&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3292"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3293"><highlight class="normal"></highlight></codeline>
<codeline lineno="3294"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(scan<sp/>!=<sp/>STBI__SCAN_load)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="3295"><highlight class="normal"></highlight></codeline>
<codeline lineno="3296"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!stbi__mad3sizes_valid(s-&gt;img_x,<sp/>s-&gt;img_y,<sp/>s-&gt;img_n,<sp/>0))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stbi__err(</highlight><highlight class="stringliteral">&quot;too<sp/>large&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Image<sp/>too<sp/>large<sp/>to<sp/>decode&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3297"><highlight class="normal"></highlight></codeline>
<codeline lineno="3298"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i<sp/>&lt;<sp/>s-&gt;img_n;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="3299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(z-&gt;img_comp[i].h<sp/>&gt;<sp/>h_max)<sp/>h_max<sp/>=<sp/>z-&gt;img_comp[i].h;</highlight></codeline>
<codeline lineno="3300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(z-&gt;img_comp[i].v<sp/>&gt;<sp/>v_max)<sp/>v_max<sp/>=<sp/>z-&gt;img_comp[i].v;</highlight></codeline>
<codeline lineno="3301"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3302"><highlight class="normal"></highlight></codeline>
<codeline lineno="3303"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>that<sp/>plane<sp/>subsampling<sp/>factors<sp/>are<sp/>integer<sp/>ratios;<sp/>our<sp/>resamplers<sp/>can&apos;t<sp/>deal<sp/>with<sp/>fractional<sp/>ratios</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3304"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>and<sp/>I&apos;ve<sp/>never<sp/>seen<sp/>a<sp/>non-corrupted<sp/>JPEG<sp/>file<sp/>actually<sp/>use<sp/>them</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3305"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i<sp/>&lt;<sp/>s-&gt;img_n;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="3306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(h_max<sp/>%<sp/>z-&gt;img_comp[i].h<sp/>!=<sp/>0)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stbi__err(</highlight><highlight class="stringliteral">&quot;bad<sp/>H&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;Corrupt<sp/>JPEG&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(v_max<sp/>%<sp/>z-&gt;img_comp[i].v<sp/>!=<sp/>0)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stbi__err(</highlight><highlight class="stringliteral">&quot;bad<sp/>V&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;Corrupt<sp/>JPEG&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3308"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3309"><highlight class="normal"></highlight></codeline>
<codeline lineno="3310"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>compute<sp/>interleaved<sp/>mcu<sp/>info</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3311"><highlight class="normal"><sp/><sp/><sp/>z-&gt;img_h_max<sp/>=<sp/>h_max;</highlight></codeline>
<codeline lineno="3312"><highlight class="normal"><sp/><sp/><sp/>z-&gt;img_v_max<sp/>=<sp/>v_max;</highlight></codeline>
<codeline lineno="3313"><highlight class="normal"><sp/><sp/><sp/>z-&gt;img_mcu_w<sp/>=<sp/>h_max<sp/>*<sp/>8;</highlight></codeline>
<codeline lineno="3314"><highlight class="normal"><sp/><sp/><sp/>z-&gt;img_mcu_h<sp/>=<sp/>v_max<sp/>*<sp/>8;</highlight></codeline>
<codeline lineno="3315"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>these<sp/>sizes<sp/>can&apos;t<sp/>be<sp/>more<sp/>than<sp/>17<sp/>bits</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3316"><highlight class="normal"><sp/><sp/><sp/>z-&gt;img_mcu_x<sp/>=<sp/>(s-&gt;img_x<sp/>+<sp/>z-&gt;img_mcu_w-1)<sp/>/<sp/>z-&gt;img_mcu_w;</highlight></codeline>
<codeline lineno="3317"><highlight class="normal"><sp/><sp/><sp/>z-&gt;img_mcu_y<sp/>=<sp/>(s-&gt;img_y<sp/>+<sp/>z-&gt;img_mcu_h-1)<sp/>/<sp/>z-&gt;img_mcu_h;</highlight></codeline>
<codeline lineno="3318"><highlight class="normal"></highlight></codeline>
<codeline lineno="3319"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i<sp/>&lt;<sp/>s-&gt;img_n;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="3320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>number<sp/>of<sp/>effective<sp/>pixels<sp/>(e.g.<sp/>for<sp/>non-interleaved<sp/>MCU)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>z-&gt;img_comp[i].x<sp/>=<sp/>(s-&gt;img_x<sp/>*<sp/>z-&gt;img_comp[i].h<sp/>+<sp/>h_max-1)<sp/>/<sp/>h_max;</highlight></codeline>
<codeline lineno="3322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>z-&gt;img_comp[i].y<sp/>=<sp/>(s-&gt;img_y<sp/>*<sp/>z-&gt;img_comp[i].v<sp/>+<sp/>v_max-1)<sp/>/<sp/>v_max;</highlight></codeline>
<codeline lineno="3323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>to<sp/>simplify<sp/>generation,<sp/>we&apos;ll<sp/>allocate<sp/>enough<sp/>memory<sp/>to<sp/>decode</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>bogus<sp/>oversized<sp/>data<sp/>from<sp/>using<sp/>interleaved<sp/>MCUs<sp/>and<sp/>their</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>big<sp/>blocks<sp/>(e.g.<sp/>a<sp/>16x16<sp/>iMCU<sp/>on<sp/>an<sp/>image<sp/>of<sp/>width<sp/>33);<sp/>we<sp/>won&apos;t</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>discard<sp/>the<sp/>extra<sp/>data<sp/>until<sp/>colorspace<sp/>conversion</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>img_mcu_x,<sp/>img_mcu_y:<sp/>&lt;=17<sp/>bits;<sp/>comp[i].h<sp/>and<sp/>.v<sp/>are<sp/>&lt;=4<sp/>(checked<sp/>earlier)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>so<sp/>these<sp/>muls<sp/>can&apos;t<sp/>overflow<sp/>with<sp/>32-bit<sp/>ints<sp/>(which<sp/>we<sp/>require)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>z-&gt;img_comp[i].w2<sp/>=<sp/>z-&gt;img_mcu_x<sp/>*<sp/>z-&gt;img_comp[i].h<sp/>*<sp/>8;</highlight></codeline>
<codeline lineno="3331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>z-&gt;img_comp[i].h2<sp/>=<sp/>z-&gt;img_mcu_y<sp/>*<sp/>z-&gt;img_comp[i].v<sp/>*<sp/>8;</highlight></codeline>
<codeline lineno="3332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>z-&gt;img_comp[i].coeff<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>z-&gt;img_comp[i].raw_coeff<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>z-&gt;img_comp[i].linebuf<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="3335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>z-&gt;img_comp[i].raw_data<sp/>=<sp/>stbi__malloc_mad2(z-&gt;img_comp[i].w2,<sp/>z-&gt;img_comp[i].h2,<sp/>15);</highlight></codeline>
<codeline lineno="3336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(z-&gt;img_comp[i].raw_data<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="3337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stbi__free_jpeg_components(z,<sp/>i+1,<sp/>stbi__err(</highlight><highlight class="stringliteral">&quot;outofmem&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Out<sp/>of<sp/>memory&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="3338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>align<sp/>blocks<sp/>for<sp/>idct<sp/>using<sp/>mmx/sse</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>z-&gt;img_comp[i].data<sp/>=<sp/>(<ref refid="stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d" kindref="member">stbi_uc</ref>*)<sp/>(((</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">)<sp/>z-&gt;img_comp[i].raw_data<sp/>+<sp/>15)<sp/>&amp;<sp/>~15);</highlight></codeline>
<codeline lineno="3340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(z-&gt;progressive)<sp/>{</highlight></codeline>
<codeline lineno="3341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>w2,<sp/>h2<sp/>are<sp/>multiples<sp/>of<sp/>8<sp/>(see<sp/>above)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>z-&gt;img_comp[i].coeff_w<sp/>=<sp/>z-&gt;img_comp[i].w2<sp/>/<sp/>8;</highlight></codeline>
<codeline lineno="3343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>z-&gt;img_comp[i].coeff_h<sp/>=<sp/>z-&gt;img_comp[i].h2<sp/>/<sp/>8;</highlight></codeline>
<codeline lineno="3344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>z-&gt;img_comp[i].raw_coeff<sp/>=<sp/>stbi__malloc_mad3(z-&gt;img_comp[i].w2,<sp/>z-&gt;img_comp[i].h2,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">short</highlight><highlight class="normal">),<sp/>15);</highlight></codeline>
<codeline lineno="3345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(z-&gt;img_comp[i].raw_coeff<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="3346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stbi__free_jpeg_components(z,<sp/>i+1,<sp/>stbi__err(</highlight><highlight class="stringliteral">&quot;outofmem&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Out<sp/>of<sp/>memory&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="3347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>z-&gt;img_comp[i].coeff<sp/>=<sp/>(</highlight><highlight class="keywordtype">short</highlight><highlight class="normal">*)<sp/>(((</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">)<sp/>z-&gt;img_comp[i].raw_coeff<sp/>+<sp/>15)<sp/>&amp;<sp/>~15);</highlight></codeline>
<codeline lineno="3348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3349"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3350"><highlight class="normal"></highlight></codeline>
<codeline lineno="3351"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="3352"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3353"><highlight class="normal"></highlight></codeline>
<codeline lineno="3354"><highlight class="normal"></highlight><highlight class="comment">//<sp/>use<sp/>comparisons<sp/>since<sp/>in<sp/>some<sp/>cases<sp/>we<sp/>handle<sp/>more<sp/>than<sp/>one<sp/>case<sp/>(e.g.<sp/>SOF)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3355"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>stbi__DNL(x)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((x)<sp/>==<sp/>0xdc)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3356"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>stbi__SOI(x)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((x)<sp/>==<sp/>0xd8)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3357"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>stbi__EOI(x)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((x)<sp/>==<sp/>0xd9)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3358"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>stbi__SOF(x)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((x)<sp/>==<sp/>0xc0<sp/>||<sp/>(x)<sp/>==<sp/>0xc1<sp/>||<sp/>(x)<sp/>==<sp/>0xc2)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3359"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>stbi__SOS(x)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((x)<sp/>==<sp/>0xda)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3360"><highlight class="normal"></highlight></codeline>
<codeline lineno="3361"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>stbi__SOF_progressive(x)<sp/><sp/><sp/>((x)<sp/>==<sp/>0xc2)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3362"><highlight class="normal"></highlight></codeline>
<codeline lineno="3363"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>stbi__decode_jpeg_header(stbi__jpeg<sp/>*z,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>scan)</highlight></codeline>
<codeline lineno="3364"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3365"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>m;</highlight></codeline>
<codeline lineno="3366"><highlight class="normal"><sp/><sp/><sp/>z-&gt;jfif<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3367"><highlight class="normal"><sp/><sp/><sp/>z-&gt;app14_color_transform<sp/>=<sp/>-1;<sp/></highlight><highlight class="comment">//<sp/>valid<sp/>values<sp/>are<sp/>0,1,2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3368"><highlight class="normal"><sp/><sp/><sp/>z-&gt;marker<sp/>=<sp/>STBI__MARKER_none;<sp/></highlight><highlight class="comment">//<sp/>initialize<sp/>cached<sp/>marker<sp/>to<sp/>empty</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3369"><highlight class="normal"><sp/><sp/><sp/>m<sp/>=<sp/>stbi__get_marker(z);</highlight></codeline>
<codeline lineno="3370"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!stbi__SOI(m))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stbi__err(</highlight><highlight class="stringliteral">&quot;no<sp/>SOI&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;Corrupt<sp/>JPEG&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3371"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(scan<sp/>==<sp/>STBI__SCAN_type)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="3372"><highlight class="normal"><sp/><sp/><sp/>m<sp/>=<sp/>stbi__get_marker(z);</highlight></codeline>
<codeline lineno="3373"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(!stbi__SOF(m))<sp/>{</highlight></codeline>
<codeline lineno="3374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!stbi__process_marker(z,m))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="3375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m<sp/>=<sp/>stbi__get_marker(z);</highlight></codeline>
<codeline lineno="3376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(m<sp/>==<sp/>STBI__MARKER_none)<sp/>{</highlight></codeline>
<codeline lineno="3377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>some<sp/>files<sp/>have<sp/>extra<sp/>padding<sp/>after<sp/>their<sp/>blocks,<sp/>so<sp/>ok,<sp/>we&apos;ll<sp/>scan</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(stbi__at_eof(z-&gt;s))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stbi__err(</highlight><highlight class="stringliteral">&quot;no<sp/>SOF&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Corrupt<sp/>JPEG&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m<sp/>=<sp/>stbi__get_marker(z);</highlight></codeline>
<codeline lineno="3380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3381"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3382"><highlight class="normal"><sp/><sp/><sp/>z-&gt;progressive<sp/>=<sp/>stbi__SOF_progressive(m);</highlight></codeline>
<codeline lineno="3383"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!stbi__process_frame_header(z,<sp/>scan))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="3384"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="3385"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3386"><highlight class="normal"></highlight></codeline>
<codeline lineno="3387"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>stbi__skip_jpeg_junk_at_end(stbi__jpeg<sp/>*j)</highlight></codeline>
<codeline lineno="3388"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3389"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>some<sp/>JPEGs<sp/>have<sp/>junk<sp/>at<sp/>end,<sp/>skip<sp/>over<sp/>it<sp/>but<sp/>if<sp/>we<sp/>find<sp/>what<sp/>looks</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3390"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>like<sp/>a<sp/>valid<sp/>marker,<sp/>resume<sp/>there</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3391"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(!stbi__at_eof(j-&gt;s))<sp/>{</highlight></codeline>
<codeline lineno="3392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x<sp/>=<sp/>stbi__get8(j-&gt;s);</highlight></codeline>
<codeline lineno="3393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(x<sp/>==<sp/>255)<sp/>{<sp/></highlight><highlight class="comment">//<sp/>might<sp/>be<sp/>a<sp/>marker</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(stbi__at_eof(j-&gt;s))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>STBI__MARKER_none;</highlight></codeline>
<codeline lineno="3395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x<sp/>=<sp/>stbi__get8(j-&gt;s);</highlight></codeline>
<codeline lineno="3396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(x<sp/>!=<sp/>0x00<sp/>&amp;&amp;<sp/>x<sp/>!=<sp/>0xff)<sp/>{</highlight></codeline>
<codeline lineno="3397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>not<sp/>a<sp/>stuffed<sp/>zero<sp/>or<sp/>lead-in<sp/>to<sp/>another<sp/>marker,<sp/>looks</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>like<sp/>an<sp/>actual<sp/>marker,<sp/>return<sp/>it</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>x;</highlight></codeline>
<codeline lineno="3400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>stuffed<sp/>zero<sp/>has<sp/>x=0<sp/>now<sp/>which<sp/>ends<sp/>the<sp/>loop,<sp/>meaning<sp/>we<sp/>go</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>back<sp/>to<sp/>regular<sp/>scan<sp/>loop.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>repeated<sp/>0xff<sp/>keeps<sp/>trying<sp/>to<sp/>read<sp/>the<sp/>next<sp/>byte<sp/>of<sp/>the<sp/>marker.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3405"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3406"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>STBI__MARKER_none;</highlight></codeline>
<codeline lineno="3407"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3408"><highlight class="normal"></highlight></codeline>
<codeline lineno="3409"><highlight class="normal"></highlight><highlight class="comment">//<sp/>decode<sp/>image<sp/>to<sp/>YCbCr<sp/>format</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3410"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>stbi__decode_jpeg_image(stbi__jpeg<sp/>*j)</highlight></codeline>
<codeline lineno="3411"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3412"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>m;</highlight></codeline>
<codeline lineno="3413"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(m<sp/>=<sp/>0;<sp/>m<sp/>&lt;<sp/>4;<sp/>m++)<sp/>{</highlight></codeline>
<codeline lineno="3414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>j-&gt;img_comp[m].raw_data<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="3415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>j-&gt;img_comp[m].raw_coeff<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="3416"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3417"><highlight class="normal"><sp/><sp/><sp/>j-&gt;restart_interval<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3418"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!stbi__decode_jpeg_header(j,<sp/>STBI__SCAN_load))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="3419"><highlight class="normal"><sp/><sp/><sp/>m<sp/>=<sp/>stbi__get_marker(j);</highlight></codeline>
<codeline lineno="3420"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(!stbi__EOI(m))<sp/>{</highlight></codeline>
<codeline lineno="3421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(stbi__SOS(m))<sp/>{</highlight></codeline>
<codeline lineno="3422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!stbi__process_scan_header(j))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="3423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!stbi__parse_entropy_coded_data(j))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="3424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(j-&gt;marker<sp/>==<sp/>STBI__MARKER_none<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="3425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>j-&gt;marker<sp/>=<sp/>stbi__skip_jpeg_junk_at_end(j);</highlight></codeline>
<codeline lineno="3426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>we<sp/>reach<sp/>eof<sp/>without<sp/>hitting<sp/>a<sp/>marker,<sp/>stbi__get_marker()<sp/>below<sp/>will<sp/>fail<sp/>and<sp/>we&apos;ll<sp/>eventually<sp/>return<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m<sp/>=<sp/>stbi__get_marker(j);</highlight></codeline>
<codeline lineno="3429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(STBI__RESTART(m))</highlight></codeline>
<codeline lineno="3430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m<sp/>=<sp/>stbi__get_marker(j);</highlight></codeline>
<codeline lineno="3431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(stbi__DNL(m))<sp/>{</highlight></codeline>
<codeline lineno="3432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Ld<sp/>=<sp/>stbi__get16be(j-&gt;s);</highlight></codeline>
<codeline lineno="3433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stbi__uint32<sp/>NL<sp/>=<sp/>stbi__get16be(j-&gt;s);</highlight></codeline>
<codeline lineno="3434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Ld<sp/>!=<sp/>4)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stbi__err(</highlight><highlight class="stringliteral">&quot;bad<sp/>DNL<sp/>len&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Corrupt<sp/>JPEG&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(NL<sp/>!=<sp/>j-&gt;s-&gt;img_y)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stbi__err(</highlight><highlight class="stringliteral">&quot;bad<sp/>DNL<sp/>height&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Corrupt<sp/>JPEG&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m<sp/>=<sp/>stbi__get_marker(j);</highlight></codeline>
<codeline lineno="3437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="3438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!stbi__process_marker(j,<sp/>m))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="3439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m<sp/>=<sp/>stbi__get_marker(j);</highlight></codeline>
<codeline lineno="3440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3441"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3442"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(j-&gt;progressive)</highlight></codeline>
<codeline lineno="3443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stbi__jpeg_finish(j);</highlight></codeline>
<codeline lineno="3444"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="3445"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3446"><highlight class="normal"></highlight></codeline>
<codeline lineno="3447"><highlight class="normal"></highlight><highlight class="comment">//<sp/>static<sp/>jfif-centered<sp/>resampling<sp/>(across<sp/>block<sp/>boundaries)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3448"><highlight class="normal"></highlight></codeline>
<codeline lineno="3449"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d" kindref="member">stbi_uc</ref><sp/>*(*resample_row_func)(<ref refid="stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d" kindref="member">stbi_uc</ref><sp/>*out,<sp/><ref refid="stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d" kindref="member">stbi_uc</ref><sp/>*in0,<sp/><ref refid="stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d" kindref="member">stbi_uc</ref><sp/>*in1,</highlight></codeline>
<codeline lineno="3450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>w,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>hs);</highlight></codeline>
<codeline lineno="3451"><highlight class="normal"></highlight></codeline>
<codeline lineno="3452"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>stbi__div4(x)<sp/>((stbi_uc)<sp/>((x)<sp/>&gt;&gt;<sp/>2))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3453"><highlight class="normal"></highlight></codeline>
<codeline lineno="3454"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d" kindref="member">stbi_uc</ref><sp/>*resample_row_1(<ref refid="stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d" kindref="member">stbi_uc</ref><sp/>*out,<sp/><ref refid="stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d" kindref="member">stbi_uc</ref><sp/>*in_near,<sp/><ref refid="stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d" kindref="member">stbi_uc</ref><sp/>*in_far,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>w,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>hs)</highlight></codeline>
<codeline lineno="3455"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3456"><highlight class="normal"><sp/><sp/><sp/>STBI_NOTUSED(out);</highlight></codeline>
<codeline lineno="3457"><highlight class="normal"><sp/><sp/><sp/>STBI_NOTUSED(in_far);</highlight></codeline>
<codeline lineno="3458"><highlight class="normal"><sp/><sp/><sp/>STBI_NOTUSED(w);</highlight></codeline>
<codeline lineno="3459"><highlight class="normal"><sp/><sp/><sp/>STBI_NOTUSED(hs);</highlight></codeline>
<codeline lineno="3460"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>in_near;</highlight></codeline>
<codeline lineno="3461"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3462"><highlight class="normal"></highlight></codeline>
<codeline lineno="3463"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d" kindref="member">stbi_uc</ref>*<sp/>stbi__resample_row_v_2(<ref refid="stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d" kindref="member">stbi_uc</ref><sp/>*out,<sp/><ref refid="stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d" kindref="member">stbi_uc</ref><sp/>*in_near,<sp/><ref refid="stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d" kindref="member">stbi_uc</ref><sp/>*in_far,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>w,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>hs)</highlight></codeline>
<codeline lineno="3464"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3465"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>need<sp/>to<sp/>generate<sp/>two<sp/>samples<sp/>vertically<sp/>for<sp/>every<sp/>one<sp/>in<sp/>input</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3466"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="3467"><highlight class="normal"><sp/><sp/><sp/>STBI_NOTUSED(hs);</highlight></codeline>
<codeline lineno="3468"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i<sp/>&lt;<sp/>w;<sp/>++i)</highlight></codeline>
<codeline lineno="3469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>out[i]<sp/>=<sp/>stbi__div4(3*in_near[i]<sp/>+<sp/>in_far[i]<sp/>+<sp/>2);</highlight></codeline>
<codeline lineno="3470"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>out;</highlight></codeline>
<codeline lineno="3471"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3472"><highlight class="normal"></highlight></codeline>
<codeline lineno="3473"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d" kindref="member">stbi_uc</ref>*<sp/><sp/>stbi__resample_row_h_2(<ref refid="stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d" kindref="member">stbi_uc</ref><sp/>*out,<sp/><ref refid="stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d" kindref="member">stbi_uc</ref><sp/>*in_near,<sp/><ref refid="stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d" kindref="member">stbi_uc</ref><sp/>*in_far,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>w,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>hs)</highlight></codeline>
<codeline lineno="3474"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3475"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>need<sp/>to<sp/>generate<sp/>two<sp/>samples<sp/>horizontally<sp/>for<sp/>every<sp/>one<sp/>in<sp/>input</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3476"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="3477"><highlight class="normal"><sp/><sp/><sp/><ref refid="stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d" kindref="member">stbi_uc</ref><sp/>*input<sp/>=<sp/>in_near;</highlight></codeline>
<codeline lineno="3478"><highlight class="normal"></highlight></codeline>
<codeline lineno="3479"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(w<sp/>==<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="3480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>only<sp/>one<sp/>sample,<sp/>can&apos;t<sp/>do<sp/>any<sp/>interpolation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>out[0]<sp/>=<sp/>out[1]<sp/>=<sp/>input[0];</highlight></codeline>
<codeline lineno="3482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>out;</highlight></codeline>
<codeline lineno="3483"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3484"><highlight class="normal"></highlight></codeline>
<codeline lineno="3485"><highlight class="normal"><sp/><sp/><sp/>out[0]<sp/>=<sp/>input[0];</highlight></codeline>
<codeline lineno="3486"><highlight class="normal"><sp/><sp/><sp/>out[1]<sp/>=<sp/>stbi__div4(input[0]*3<sp/>+<sp/>input[1]<sp/>+<sp/>2);</highlight></codeline>
<codeline lineno="3487"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=1;<sp/>i<sp/>&lt;<sp/>w-1;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="3488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n<sp/>=<sp/>3*input[i]+2;</highlight></codeline>
<codeline lineno="3489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>out[i*2+0]<sp/>=<sp/>stbi__div4(n+input[i-1]);</highlight></codeline>
<codeline lineno="3490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>out[i*2+1]<sp/>=<sp/>stbi__div4(n+input[i+1]);</highlight></codeline>
<codeline lineno="3491"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3492"><highlight class="normal"><sp/><sp/><sp/>out[i*2+0]<sp/>=<sp/>stbi__div4(input[w-2]*3<sp/>+<sp/>input[w-1]<sp/>+<sp/>2);</highlight></codeline>
<codeline lineno="3493"><highlight class="normal"><sp/><sp/><sp/>out[i*2+1]<sp/>=<sp/>input[w-1];</highlight></codeline>
<codeline lineno="3494"><highlight class="normal"></highlight></codeline>
<codeline lineno="3495"><highlight class="normal"><sp/><sp/><sp/>STBI_NOTUSED(in_far);</highlight></codeline>
<codeline lineno="3496"><highlight class="normal"><sp/><sp/><sp/>STBI_NOTUSED(hs);</highlight></codeline>
<codeline lineno="3497"><highlight class="normal"></highlight></codeline>
<codeline lineno="3498"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>out;</highlight></codeline>
<codeline lineno="3499"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3500"><highlight class="normal"></highlight></codeline>
<codeline lineno="3501"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>stbi__div16(x)<sp/>((stbi_uc)<sp/>((x)<sp/>&gt;&gt;<sp/>4))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3502"><highlight class="normal"></highlight></codeline>
<codeline lineno="3503"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d" kindref="member">stbi_uc</ref><sp/>*stbi__resample_row_hv_2(<ref refid="stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d" kindref="member">stbi_uc</ref><sp/>*out,<sp/><ref refid="stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d" kindref="member">stbi_uc</ref><sp/>*in_near,<sp/><ref refid="stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d" kindref="member">stbi_uc</ref><sp/>*in_far,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>w,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>hs)</highlight></codeline>
<codeline lineno="3504"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3505"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>need<sp/>to<sp/>generate<sp/>2x2<sp/>samples<sp/>for<sp/>every<sp/>one<sp/>in<sp/>input</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3506"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,t0,t1;</highlight></codeline>
<codeline lineno="3507"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(w<sp/>==<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="3508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>out[0]<sp/>=<sp/>out[1]<sp/>=<sp/>stbi__div4(3*in_near[0]<sp/>+<sp/>in_far[0]<sp/>+<sp/>2);</highlight></codeline>
<codeline lineno="3509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>out;</highlight></codeline>
<codeline lineno="3510"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3511"><highlight class="normal"></highlight></codeline>
<codeline lineno="3512"><highlight class="normal"><sp/><sp/><sp/>t1<sp/>=<sp/>3*in_near[0]<sp/>+<sp/>in_far[0];</highlight></codeline>
<codeline lineno="3513"><highlight class="normal"><sp/><sp/><sp/>out[0]<sp/>=<sp/>stbi__div4(t1+2);</highlight></codeline>
<codeline lineno="3514"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=1;<sp/>i<sp/>&lt;<sp/>w;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="3515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>t0<sp/>=<sp/>t1;</highlight></codeline>
<codeline lineno="3516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>t1<sp/>=<sp/>3*in_near[i]+in_far[i];</highlight></codeline>
<codeline lineno="3517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>out[i*2-1]<sp/>=<sp/>stbi__div16(3*t0<sp/>+<sp/>t1<sp/>+<sp/>8);</highlight></codeline>
<codeline lineno="3518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>out[i*2<sp/><sp/>]<sp/>=<sp/>stbi__div16(3*t1<sp/>+<sp/>t0<sp/>+<sp/>8);</highlight></codeline>
<codeline lineno="3519"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3520"><highlight class="normal"><sp/><sp/><sp/>out[w*2-1]<sp/>=<sp/>stbi__div4(t1+2);</highlight></codeline>
<codeline lineno="3521"><highlight class="normal"></highlight></codeline>
<codeline lineno="3522"><highlight class="normal"><sp/><sp/><sp/>STBI_NOTUSED(hs);</highlight></codeline>
<codeline lineno="3523"><highlight class="normal"></highlight></codeline>
<codeline lineno="3524"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>out;</highlight></codeline>
<codeline lineno="3525"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3526"><highlight class="normal"></highlight></codeline>
<codeline lineno="3527"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(STBI_SSE2)<sp/>||<sp/>defined(STBI_NEON)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3528"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d" kindref="member">stbi_uc</ref><sp/>*stbi__resample_row_hv_2_simd(<ref refid="stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d" kindref="member">stbi_uc</ref><sp/>*out,<sp/><ref refid="stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d" kindref="member">stbi_uc</ref><sp/>*in_near,<sp/><ref refid="stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d" kindref="member">stbi_uc</ref><sp/>*in_far,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>w,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>hs)</highlight></codeline>
<codeline lineno="3529"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3530"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>need<sp/>to<sp/>generate<sp/>2x2<sp/>samples<sp/>for<sp/>every<sp/>one<sp/>in<sp/>input</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3531"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0,t0,t1;</highlight></codeline>
<codeline lineno="3532"><highlight class="normal"></highlight></codeline>
<codeline lineno="3533"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(w<sp/>==<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="3534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>out[0]<sp/>=<sp/>out[1]<sp/>=<sp/>stbi__div4(3*in_near[0]<sp/>+<sp/>in_far[0]<sp/>+<sp/>2);</highlight></codeline>
<codeline lineno="3535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>out;</highlight></codeline>
<codeline lineno="3536"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3537"><highlight class="normal"></highlight></codeline>
<codeline lineno="3538"><highlight class="normal"><sp/><sp/><sp/>t1<sp/>=<sp/>3*in_near[0]<sp/>+<sp/>in_far[0];</highlight></codeline>
<codeline lineno="3539"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>process<sp/>groups<sp/>of<sp/>8<sp/>pixels<sp/>for<sp/>as<sp/>long<sp/>as<sp/>we<sp/>can.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3540"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>note<sp/>we<sp/>can&apos;t<sp/>handle<sp/>the<sp/>last<sp/>pixel<sp/>in<sp/>a<sp/>row<sp/>in<sp/>this<sp/>loop</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3541"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>because<sp/>we<sp/>need<sp/>to<sp/>handle<sp/>the<sp/>filter<sp/>boundary<sp/>conditions.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3542"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(;<sp/>i<sp/>&lt;<sp/>((w-1)<sp/>&amp;<sp/>~7);<sp/>i<sp/>+=<sp/>8)<sp/>{</highlight></codeline>
<codeline lineno="3543"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(STBI_SSE2)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>load<sp/>and<sp/>perform<sp/>the<sp/>vertical<sp/>filtering<sp/>pass</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>this<sp/>uses<sp/>3*x<sp/>+<sp/>y<sp/>=<sp/>4*x<sp/>+<sp/>(y<sp/>-<sp/>x)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__m128i<sp/>zero<sp/><sp/>=<sp/>_mm_setzero_si128();</highlight></codeline>
<codeline lineno="3547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__m128i<sp/>farb<sp/><sp/>=<sp/>_mm_loadl_epi64((__m128i<sp/>*)<sp/>(in_far<sp/>+<sp/>i));</highlight></codeline>
<codeline lineno="3548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__m128i<sp/>nearb<sp/>=<sp/>_mm_loadl_epi64((__m128i<sp/>*)<sp/>(in_near<sp/>+<sp/>i));</highlight></codeline>
<codeline lineno="3549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__m128i<sp/>farw<sp/><sp/>=<sp/>_mm_unpacklo_epi8(farb,<sp/>zero);</highlight></codeline>
<codeline lineno="3550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__m128i<sp/>nearw<sp/>=<sp/>_mm_unpacklo_epi8(nearb,<sp/>zero);</highlight></codeline>
<codeline lineno="3551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__m128i<sp/>diff<sp/><sp/>=<sp/>_mm_sub_epi16(farw,<sp/>nearw);</highlight></codeline>
<codeline lineno="3552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__m128i<sp/>nears<sp/>=<sp/>_mm_slli_epi16(nearw,<sp/>2);</highlight></codeline>
<codeline lineno="3553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__m128i<sp/>curr<sp/><sp/>=<sp/>_mm_add_epi16(nears,<sp/>diff);<sp/></highlight><highlight class="comment">//<sp/>current<sp/>row</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3554"><highlight class="normal"></highlight></codeline>
<codeline lineno="3555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>horizontal<sp/>filter<sp/>works<sp/>the<sp/>same<sp/>based<sp/>on<sp/>shifted<sp/>vers<sp/>of<sp/>current</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>row.<sp/>&quot;prev&quot;<sp/>is<sp/>current<sp/>row<sp/>shifted<sp/>right<sp/>by<sp/>1<sp/>pixel;<sp/>we<sp/>need<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>insert<sp/>the<sp/>previous<sp/>pixel<sp/>value<sp/>(from<sp/>t1).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>&quot;next&quot;<sp/>is<sp/>current<sp/>row<sp/>shifted<sp/>left<sp/>by<sp/>1<sp/>pixel,<sp/>with<sp/>first<sp/>pixel</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>of<sp/>next<sp/>block<sp/>of<sp/>8<sp/>pixels<sp/>added<sp/>in.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__m128i<sp/>prv0<sp/>=<sp/>_mm_slli_si128(curr,<sp/>2);</highlight></codeline>
<codeline lineno="3561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__m128i<sp/>nxt0<sp/>=<sp/>_mm_srli_si128(curr,<sp/>2);</highlight></codeline>
<codeline lineno="3562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__m128i<sp/>prev<sp/>=<sp/>_mm_insert_epi16(prv0,<sp/>t1,<sp/>0);</highlight></codeline>
<codeline lineno="3563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__m128i<sp/>next<sp/>=<sp/>_mm_insert_epi16(nxt0,<sp/>3*in_near[i+8]<sp/>+<sp/>in_far[i+8],<sp/>7);</highlight></codeline>
<codeline lineno="3564"><highlight class="normal"></highlight></codeline>
<codeline lineno="3565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>horizontal<sp/>filter,<sp/>polyphase<sp/>implementation<sp/>since<sp/>it&apos;s<sp/>convenient:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>even<sp/>pixels<sp/>=<sp/>3*cur<sp/>+<sp/>prev<sp/>=<sp/>cur*4<sp/>+<sp/>(prev<sp/>-<sp/>cur)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>odd<sp/><sp/>pixels<sp/>=<sp/>3*cur<sp/>+<sp/>next<sp/>=<sp/>cur*4<sp/>+<sp/>(next<sp/>-<sp/>cur)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>note<sp/>the<sp/>shared<sp/>term.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__m128i<sp/>bias<sp/><sp/>=<sp/>_mm_set1_epi16(8);</highlight></codeline>
<codeline lineno="3570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__m128i<sp/>curs<sp/>=<sp/>_mm_slli_epi16(curr,<sp/>2);</highlight></codeline>
<codeline lineno="3571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__m128i<sp/>prvd<sp/>=<sp/>_mm_sub_epi16(prev,<sp/>curr);</highlight></codeline>
<codeline lineno="3572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__m128i<sp/>nxtd<sp/>=<sp/>_mm_sub_epi16(next,<sp/>curr);</highlight></codeline>
<codeline lineno="3573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__m128i<sp/>curb<sp/>=<sp/>_mm_add_epi16(curs,<sp/>bias);</highlight></codeline>
<codeline lineno="3574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__m128i<sp/>even<sp/>=<sp/>_mm_add_epi16(prvd,<sp/>curb);</highlight></codeline>
<codeline lineno="3575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__m128i<sp/>odd<sp/><sp/>=<sp/>_mm_add_epi16(nxtd,<sp/>curb);</highlight></codeline>
<codeline lineno="3576"><highlight class="normal"></highlight></codeline>
<codeline lineno="3577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>interleave<sp/>even<sp/>and<sp/>odd<sp/>pixels,<sp/>then<sp/>undo<sp/>scaling.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__m128i<sp/>int0<sp/>=<sp/>_mm_unpacklo_epi16(even,<sp/>odd);</highlight></codeline>
<codeline lineno="3579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__m128i<sp/>int1<sp/>=<sp/>_mm_unpackhi_epi16(even,<sp/>odd);</highlight></codeline>
<codeline lineno="3580"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__m128i<sp/>de0<sp/><sp/>=<sp/>_mm_srli_epi16(int0,<sp/>4);</highlight></codeline>
<codeline lineno="3581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__m128i<sp/>de1<sp/><sp/>=<sp/>_mm_srli_epi16(int1,<sp/>4);</highlight></codeline>
<codeline lineno="3582"><highlight class="normal"></highlight></codeline>
<codeline lineno="3583"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>pack<sp/>and<sp/>write<sp/>output</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__m128i<sp/>outv<sp/>=<sp/>_mm_packus_epi16(de0,<sp/>de1);</highlight></codeline>
<codeline lineno="3585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_mm_storeu_si128((__m128i<sp/>*)<sp/>(out<sp/>+<sp/>i*2),<sp/>outv);</highlight></codeline>
<codeline lineno="3586"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>defined(STBI_NEON)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>load<sp/>and<sp/>perform<sp/>the<sp/>vertical<sp/>filtering<sp/>pass</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3588"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>this<sp/>uses<sp/>3*x<sp/>+<sp/>y<sp/>=<sp/>4*x<sp/>+<sp/>(y<sp/>-<sp/>x)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3589"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>uint8x8_t<sp/>farb<sp/><sp/>=<sp/>vld1_u8(in_far<sp/>+<sp/>i);</highlight></codeline>
<codeline lineno="3590"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>uint8x8_t<sp/>nearb<sp/>=<sp/>vld1_u8(in_near<sp/>+<sp/>i);</highlight></codeline>
<codeline lineno="3591"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>int16x8_t<sp/>diff<sp/><sp/>=<sp/>vreinterpretq_s16_u16(vsubl_u8(farb,<sp/>nearb));</highlight></codeline>
<codeline lineno="3592"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>int16x8_t<sp/>nears<sp/>=<sp/>vreinterpretq_s16_u16(vshll_n_u8(nearb,<sp/>2));</highlight></codeline>
<codeline lineno="3593"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>int16x8_t<sp/>curr<sp/><sp/>=<sp/>vaddq_s16(nears,<sp/>diff);<sp/></highlight><highlight class="comment">//<sp/>current<sp/>row</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3594"><highlight class="normal"></highlight></codeline>
<codeline lineno="3595"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>horizontal<sp/>filter<sp/>works<sp/>the<sp/>same<sp/>based<sp/>on<sp/>shifted<sp/>vers<sp/>of<sp/>current</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3596"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>row.<sp/>&quot;prev&quot;<sp/>is<sp/>current<sp/>row<sp/>shifted<sp/>right<sp/>by<sp/>1<sp/>pixel;<sp/>we<sp/>need<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3597"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>insert<sp/>the<sp/>previous<sp/>pixel<sp/>value<sp/>(from<sp/>t1).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3598"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>&quot;next&quot;<sp/>is<sp/>current<sp/>row<sp/>shifted<sp/>left<sp/>by<sp/>1<sp/>pixel,<sp/>with<sp/>first<sp/>pixel</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>of<sp/>next<sp/>block<sp/>of<sp/>8<sp/>pixels<sp/>added<sp/>in.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3600"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>int16x8_t<sp/>prv0<sp/>=<sp/>vextq_s16(curr,<sp/>curr,<sp/>7);</highlight></codeline>
<codeline lineno="3601"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>int16x8_t<sp/>nxt0<sp/>=<sp/>vextq_s16(curr,<sp/>curr,<sp/>1);</highlight></codeline>
<codeline lineno="3602"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>int16x8_t<sp/>prev<sp/>=<sp/>vsetq_lane_s16(t1,<sp/>prv0,<sp/>0);</highlight></codeline>
<codeline lineno="3603"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>int16x8_t<sp/>next<sp/>=<sp/>vsetq_lane_s16(3*in_near[i+8]<sp/>+<sp/>in_far[i+8],<sp/>nxt0,<sp/>7);</highlight></codeline>
<codeline lineno="3604"><highlight class="normal"></highlight></codeline>
<codeline lineno="3605"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>horizontal<sp/>filter,<sp/>polyphase<sp/>implementation<sp/>since<sp/>it&apos;s<sp/>convenient:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3606"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>even<sp/>pixels<sp/>=<sp/>3*cur<sp/>+<sp/>prev<sp/>=<sp/>cur*4<sp/>+<sp/>(prev<sp/>-<sp/>cur)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3607"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>odd<sp/><sp/>pixels<sp/>=<sp/>3*cur<sp/>+<sp/>next<sp/>=<sp/>cur*4<sp/>+<sp/>(next<sp/>-<sp/>cur)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3608"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>note<sp/>the<sp/>shared<sp/>term.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3609"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>int16x8_t<sp/>curs<sp/>=<sp/>vshlq_n_s16(curr,<sp/>2);</highlight></codeline>
<codeline lineno="3610"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>int16x8_t<sp/>prvd<sp/>=<sp/>vsubq_s16(prev,<sp/>curr);</highlight></codeline>
<codeline lineno="3611"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>int16x8_t<sp/>nxtd<sp/>=<sp/>vsubq_s16(next,<sp/>curr);</highlight></codeline>
<codeline lineno="3612"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>int16x8_t<sp/>even<sp/>=<sp/>vaddq_s16(curs,<sp/>prvd);</highlight></codeline>
<codeline lineno="3613"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>int16x8_t<sp/>odd<sp/><sp/>=<sp/>vaddq_s16(curs,<sp/>nxtd);</highlight></codeline>
<codeline lineno="3614"><highlight class="normal"></highlight></codeline>
<codeline lineno="3615"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>undo<sp/>scaling<sp/>and<sp/>round,<sp/>then<sp/>store<sp/>with<sp/>even/odd<sp/>phases<sp/>interleaved</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3616"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>uint8x8x2_t<sp/>o;</highlight></codeline>
<codeline lineno="3617"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>o.val[0]<sp/>=<sp/>vqrshrun_n_s16(even,<sp/>4);</highlight></codeline>
<codeline lineno="3618"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>o.val[1]<sp/>=<sp/>vqrshrun_n_s16(odd,<sp/><sp/>4);</highlight></codeline>
<codeline lineno="3619"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>vst2_u8(out<sp/>+<sp/>i*2,<sp/>o);</highlight></codeline>
<codeline lineno="3620"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3621"><highlight class="normal"></highlight></codeline>
<codeline lineno="3622"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>&quot;previous&quot;<sp/>value<sp/>for<sp/>next<sp/>iter</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3623"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>t1<sp/>=<sp/>3*in_near[i+7]<sp/>+<sp/>in_far[i+7];</highlight></codeline>
<codeline lineno="3624"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3625"><highlight class="normal"></highlight></codeline>
<codeline lineno="3626"><highlight class="normal"><sp/><sp/><sp/>t0<sp/>=<sp/>t1;</highlight></codeline>
<codeline lineno="3627"><highlight class="normal"><sp/><sp/><sp/>t1<sp/>=<sp/>3*in_near[i]<sp/>+<sp/>in_far[i];</highlight></codeline>
<codeline lineno="3628"><highlight class="normal"><sp/><sp/><sp/>out[i*2]<sp/>=<sp/>stbi__div16(3*t1<sp/>+<sp/>t0<sp/>+<sp/>8);</highlight></codeline>
<codeline lineno="3629"><highlight class="normal"></highlight></codeline>
<codeline lineno="3630"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(++i;<sp/>i<sp/>&lt;<sp/>w;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="3631"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>t0<sp/>=<sp/>t1;</highlight></codeline>
<codeline lineno="3632"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>t1<sp/>=<sp/>3*in_near[i]+in_far[i];</highlight></codeline>
<codeline lineno="3633"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>out[i*2-1]<sp/>=<sp/>stbi__div16(3*t0<sp/>+<sp/>t1<sp/>+<sp/>8);</highlight></codeline>
<codeline lineno="3634"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>out[i*2<sp/><sp/>]<sp/>=<sp/>stbi__div16(3*t1<sp/>+<sp/>t0<sp/>+<sp/>8);</highlight></codeline>
<codeline lineno="3635"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3636"><highlight class="normal"><sp/><sp/><sp/>out[w*2-1]<sp/>=<sp/>stbi__div4(t1+2);</highlight></codeline>
<codeline lineno="3637"><highlight class="normal"></highlight></codeline>
<codeline lineno="3638"><highlight class="normal"><sp/><sp/><sp/>STBI_NOTUSED(hs);</highlight></codeline>
<codeline lineno="3639"><highlight class="normal"></highlight></codeline>
<codeline lineno="3640"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>out;</highlight></codeline>
<codeline lineno="3641"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3642"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3643"><highlight class="normal"></highlight></codeline>
<codeline lineno="3644"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d" kindref="member">stbi_uc</ref><sp/>*stbi__resample_row_generic(<ref refid="stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d" kindref="member">stbi_uc</ref><sp/>*out,<sp/><ref refid="stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d" kindref="member">stbi_uc</ref><sp/>*in_near,<sp/><ref refid="stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d" kindref="member">stbi_uc</ref><sp/>*in_far,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>w,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>hs)</highlight></codeline>
<codeline lineno="3645"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3646"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>resample<sp/>with<sp/>nearest-neighbor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3647"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,j;</highlight></codeline>
<codeline lineno="3648"><highlight class="normal"><sp/><sp/><sp/>STBI_NOTUSED(in_far);</highlight></codeline>
<codeline lineno="3649"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i<sp/>&lt;<sp/>w;<sp/>++i)</highlight></codeline>
<codeline lineno="3650"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(j=0;<sp/>j<sp/>&lt;<sp/>hs;<sp/>++j)</highlight></codeline>
<codeline lineno="3651"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out[i*hs+j]<sp/>=<sp/>in_near[i];</highlight></codeline>
<codeline lineno="3652"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>out;</highlight></codeline>
<codeline lineno="3653"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3654"><highlight class="normal"></highlight></codeline>
<codeline lineno="3655"><highlight class="normal"></highlight><highlight class="comment">//<sp/>this<sp/>is<sp/>a<sp/>reduced-precision<sp/>calculation<sp/>of<sp/>YCbCr-to-RGB<sp/>introduced</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3656"><highlight class="normal"></highlight><highlight class="comment">//<sp/>to<sp/>make<sp/>sure<sp/>the<sp/>code<sp/>produces<sp/>the<sp/>same<sp/>results<sp/>in<sp/>both<sp/>SIMD<sp/>and<sp/>scalar</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3657"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>stbi__float2fixed(x)<sp/><sp/>(((int)<sp/>((x)<sp/>*<sp/>4096.0f<sp/>+<sp/>0.5f))<sp/>&lt;&lt;<sp/>8)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3658"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>stbi__YCbCr_to_RGB_row(<ref refid="stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d" kindref="member">stbi_uc</ref><sp/>*out,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d" kindref="member">stbi_uc</ref><sp/>*y,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d" kindref="member">stbi_uc</ref><sp/>*pcb,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d" kindref="member">stbi_uc</ref><sp/>*pcr,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>count,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>step)</highlight></codeline>
<codeline lineno="3659"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3660"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="3661"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i<sp/>&lt;<sp/>count;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="3662"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y_fixed<sp/>=<sp/>(y[i]<sp/>&lt;&lt;<sp/>20)<sp/>+<sp/>(1&lt;&lt;19);<sp/></highlight><highlight class="comment">//<sp/>rounding</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3663"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>r,g,b;</highlight></codeline>
<codeline lineno="3664"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>cr<sp/>=<sp/>pcr[i]<sp/>-<sp/>128;</highlight></codeline>
<codeline lineno="3665"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>cb<sp/>=<sp/>pcb[i]<sp/>-<sp/>128;</highlight></codeline>
<codeline lineno="3666"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>r<sp/>=<sp/>y_fixed<sp/>+<sp/><sp/>cr*<sp/>stbi__float2fixed(1.40200f);</highlight></codeline>
<codeline lineno="3667"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>g<sp/>=<sp/>y_fixed<sp/>+<sp/>(cr*-stbi__float2fixed(0.71414f))<sp/>+<sp/>((cb*-stbi__float2fixed(0.34414f))<sp/>&amp;<sp/>0xffff0000);</highlight></codeline>
<codeline lineno="3668"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>b<sp/>=<sp/>y_fixed<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/><sp/><sp/>cb*<sp/>stbi__float2fixed(1.77200f);</highlight></codeline>
<codeline lineno="3669"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>r<sp/>&gt;&gt;=<sp/>20;</highlight></codeline>
<codeline lineno="3670"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>g<sp/>&gt;&gt;=<sp/>20;</highlight></codeline>
<codeline lineno="3671"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>b<sp/>&gt;&gt;=<sp/>20;</highlight></codeline>
<codeline lineno="3672"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal">)<sp/>r<sp/>&gt;<sp/>255)<sp/>{<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(r<sp/>&lt;<sp/>0)<sp/>r<sp/>=<sp/>0;<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>r<sp/>=<sp/>255;<sp/>}</highlight></codeline>
<codeline lineno="3673"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal">)<sp/>g<sp/>&gt;<sp/>255)<sp/>{<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(g<sp/>&lt;<sp/>0)<sp/>g<sp/>=<sp/>0;<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>g<sp/>=<sp/>255;<sp/>}</highlight></codeline>
<codeline lineno="3674"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal">)<sp/>b<sp/>&gt;<sp/>255)<sp/>{<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(b<sp/>&lt;<sp/>0)<sp/>b<sp/>=<sp/>0;<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>b<sp/>=<sp/>255;<sp/>}</highlight></codeline>
<codeline lineno="3675"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>out[0]<sp/>=<sp/>(<ref refid="stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d" kindref="member">stbi_uc</ref>)r;</highlight></codeline>
<codeline lineno="3676"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>out[1]<sp/>=<sp/>(<ref refid="stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d" kindref="member">stbi_uc</ref>)g;</highlight></codeline>
<codeline lineno="3677"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>out[2]<sp/>=<sp/>(<ref refid="stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d" kindref="member">stbi_uc</ref>)b;</highlight></codeline>
<codeline lineno="3678"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>out[3]<sp/>=<sp/>255;</highlight></codeline>
<codeline lineno="3679"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>out<sp/>+=<sp/>step;</highlight></codeline>
<codeline lineno="3680"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3681"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3682"><highlight class="normal"></highlight></codeline>
<codeline lineno="3683"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(STBI_SSE2)<sp/>||<sp/>defined(STBI_NEON)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3684"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>stbi__YCbCr_to_RGB_simd(<ref refid="stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d" kindref="member">stbi_uc</ref><sp/>*out,<sp/><ref refid="stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d" kindref="member">stbi_uc</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*y,<sp/><ref refid="stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d" kindref="member">stbi_uc</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*pcb,<sp/><ref refid="stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d" kindref="member">stbi_uc</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*pcr,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>count,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>step)</highlight></codeline>
<codeline lineno="3685"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3686"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3687"><highlight class="normal"></highlight></codeline>
<codeline lineno="3688"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>STBI_SSE2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3689"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>step<sp/>==<sp/>3<sp/>is<sp/>pretty<sp/>ugly<sp/>on<sp/>the<sp/>final<sp/>interleave,<sp/>and<sp/>i&apos;m<sp/>not<sp/>convinced</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3690"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>it&apos;s<sp/>useful<sp/>in<sp/>practice<sp/>(you<sp/>wouldn&apos;t<sp/>use<sp/>it<sp/>for<sp/>textures,<sp/>for<sp/>example).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3691"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>so<sp/>just<sp/>accelerate<sp/>step<sp/>==<sp/>4<sp/>case.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3692"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(step<sp/>==<sp/>4)<sp/>{</highlight></codeline>
<codeline lineno="3693"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>this<sp/>is<sp/>a<sp/>fairly<sp/>straightforward<sp/>implementation<sp/>and<sp/>not<sp/>super-optimized.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3694"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__m128i<sp/>signflip<sp/><sp/>=<sp/>_mm_set1_epi8(-0x80);</highlight></codeline>
<codeline lineno="3695"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__m128i<sp/>cr_const0<sp/>=<sp/>_mm_set1_epi16(<sp/><sp/><sp/>(</highlight><highlight class="keywordtype">short</highlight><highlight class="normal">)<sp/>(<sp/>1.40200f*4096.0f+0.5f));</highlight></codeline>
<codeline lineno="3696"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__m128i<sp/>cr_const1<sp/>=<sp/>_mm_set1_epi16(<sp/>-<sp/>(</highlight><highlight class="keywordtype">short</highlight><highlight class="normal">)<sp/>(<sp/>0.71414f*4096.0f+0.5f));</highlight></codeline>
<codeline lineno="3697"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__m128i<sp/>cb_const0<sp/>=<sp/>_mm_set1_epi16(<sp/>-<sp/>(</highlight><highlight class="keywordtype">short</highlight><highlight class="normal">)<sp/>(<sp/>0.34414f*4096.0f+0.5f));</highlight></codeline>
<codeline lineno="3698"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__m128i<sp/>cb_const1<sp/>=<sp/>_mm_set1_epi16(<sp/><sp/><sp/>(</highlight><highlight class="keywordtype">short</highlight><highlight class="normal">)<sp/>(<sp/>1.77200f*4096.0f+0.5f));</highlight></codeline>
<codeline lineno="3699"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__m128i<sp/>y_bias<sp/>=<sp/>_mm_set1_epi8((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">)<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">)<sp/>128);</highlight></codeline>
<codeline lineno="3700"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__m128i<sp/>xw<sp/>=<sp/>_mm_set1_epi16(255);<sp/></highlight><highlight class="comment">//<sp/>alpha<sp/>channel</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3701"><highlight class="normal"></highlight></codeline>
<codeline lineno="3702"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(;<sp/>i+7<sp/>&lt;<sp/>count;<sp/>i<sp/>+=<sp/>8)<sp/>{</highlight></codeline>
<codeline lineno="3703"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>load</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3704"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__m128i<sp/>y_bytes<sp/>=<sp/>_mm_loadl_epi64((__m128i<sp/>*)<sp/>(y+i));</highlight></codeline>
<codeline lineno="3705"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__m128i<sp/>cr_bytes<sp/>=<sp/>_mm_loadl_epi64((__m128i<sp/>*)<sp/>(pcr+i));</highlight></codeline>
<codeline lineno="3706"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__m128i<sp/>cb_bytes<sp/>=<sp/>_mm_loadl_epi64((__m128i<sp/>*)<sp/>(pcb+i));</highlight></codeline>
<codeline lineno="3707"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__m128i<sp/>cr_biased<sp/>=<sp/>_mm_xor_si128(cr_bytes,<sp/>signflip);<sp/></highlight><highlight class="comment">//<sp/>-128</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3708"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__m128i<sp/>cb_biased<sp/>=<sp/>_mm_xor_si128(cb_bytes,<sp/>signflip);<sp/></highlight><highlight class="comment">//<sp/>-128</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3709"><highlight class="normal"></highlight></codeline>
<codeline lineno="3710"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>unpack<sp/>to<sp/>short<sp/>(and<sp/>left-shift<sp/>cr,<sp/>cb<sp/>by<sp/>8)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3711"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__m128i<sp/>yw<sp/><sp/>=<sp/>_mm_unpacklo_epi8(y_bias,<sp/>y_bytes);</highlight></codeline>
<codeline lineno="3712"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__m128i<sp/>crw<sp/>=<sp/>_mm_unpacklo_epi8(_mm_setzero_si128(),<sp/>cr_biased);</highlight></codeline>
<codeline lineno="3713"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__m128i<sp/>cbw<sp/>=<sp/>_mm_unpacklo_epi8(_mm_setzero_si128(),<sp/>cb_biased);</highlight></codeline>
<codeline lineno="3714"><highlight class="normal"></highlight></codeline>
<codeline lineno="3715"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>color<sp/>transform</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3716"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__m128i<sp/>yws<sp/>=<sp/>_mm_srli_epi16(yw,<sp/>4);</highlight></codeline>
<codeline lineno="3717"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__m128i<sp/>cr0<sp/>=<sp/>_mm_mulhi_epi16(cr_const0,<sp/>crw);</highlight></codeline>
<codeline lineno="3718"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__m128i<sp/>cb0<sp/>=<sp/>_mm_mulhi_epi16(cb_const0,<sp/>cbw);</highlight></codeline>
<codeline lineno="3719"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__m128i<sp/>cb1<sp/>=<sp/>_mm_mulhi_epi16(cbw,<sp/>cb_const1);</highlight></codeline>
<codeline lineno="3720"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__m128i<sp/>cr1<sp/>=<sp/>_mm_mulhi_epi16(crw,<sp/>cr_const1);</highlight></codeline>
<codeline lineno="3721"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__m128i<sp/>rws<sp/>=<sp/>_mm_add_epi16(cr0,<sp/>yws);</highlight></codeline>
<codeline lineno="3722"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__m128i<sp/>gwt<sp/>=<sp/>_mm_add_epi16(cb0,<sp/>yws);</highlight></codeline>
<codeline lineno="3723"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__m128i<sp/>bws<sp/>=<sp/>_mm_add_epi16(yws,<sp/>cb1);</highlight></codeline>
<codeline lineno="3724"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__m128i<sp/>gws<sp/>=<sp/>_mm_add_epi16(gwt,<sp/>cr1);</highlight></codeline>
<codeline lineno="3725"><highlight class="normal"></highlight></codeline>
<codeline lineno="3726"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>descale</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3727"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__m128i<sp/>rw<sp/>=<sp/>_mm_srai_epi16(rws,<sp/>4);</highlight></codeline>
<codeline lineno="3728"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__m128i<sp/>bw<sp/>=<sp/>_mm_srai_epi16(bws,<sp/>4);</highlight></codeline>
<codeline lineno="3729"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__m128i<sp/>gw<sp/>=<sp/>_mm_srai_epi16(gws,<sp/>4);</highlight></codeline>
<codeline lineno="3730"><highlight class="normal"></highlight></codeline>
<codeline lineno="3731"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>back<sp/>to<sp/>byte,<sp/>set<sp/>up<sp/>for<sp/>transpose</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3732"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__m128i<sp/>brb<sp/>=<sp/>_mm_packus_epi16(rw,<sp/>bw);</highlight></codeline>
<codeline lineno="3733"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__m128i<sp/>gxb<sp/>=<sp/>_mm_packus_epi16(gw,<sp/>xw);</highlight></codeline>
<codeline lineno="3734"><highlight class="normal"></highlight></codeline>
<codeline lineno="3735"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>transpose<sp/>to<sp/>interleave<sp/>channels</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3736"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__m128i<sp/>t0<sp/>=<sp/>_mm_unpacklo_epi8(brb,<sp/>gxb);</highlight></codeline>
<codeline lineno="3737"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__m128i<sp/>t1<sp/>=<sp/>_mm_unpackhi_epi8(brb,<sp/>gxb);</highlight></codeline>
<codeline lineno="3738"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__m128i<sp/>o0<sp/>=<sp/>_mm_unpacklo_epi16(t0,<sp/>t1);</highlight></codeline>
<codeline lineno="3739"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__m128i<sp/>o1<sp/>=<sp/>_mm_unpackhi_epi16(t0,<sp/>t1);</highlight></codeline>
<codeline lineno="3740"><highlight class="normal"></highlight></codeline>
<codeline lineno="3741"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>store</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3742"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_mm_storeu_si128((__m128i<sp/>*)<sp/>(out<sp/>+<sp/>0),<sp/>o0);</highlight></codeline>
<codeline lineno="3743"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_mm_storeu_si128((__m128i<sp/>*)<sp/>(out<sp/>+<sp/>16),<sp/>o1);</highlight></codeline>
<codeline lineno="3744"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out<sp/>+=<sp/>32;</highlight></codeline>
<codeline lineno="3745"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3746"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3747"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3748"><highlight class="normal"></highlight></codeline>
<codeline lineno="3749"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>STBI_NEON</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3750"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>in<sp/>this<sp/>version,<sp/>step=3<sp/>support<sp/>would<sp/>be<sp/>easy<sp/>to<sp/>add.<sp/>but<sp/>is<sp/>there<sp/>demand?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3751"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(step<sp/>==<sp/>4)<sp/>{</highlight></codeline>
<codeline lineno="3752"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>this<sp/>is<sp/>a<sp/>fairly<sp/>straightforward<sp/>implementation<sp/>and<sp/>not<sp/>super-optimized.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3753"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>uint8x8_t<sp/>signflip<sp/>=<sp/>vdup_n_u8(0x80);</highlight></codeline>
<codeline lineno="3754"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>int16x8_t<sp/>cr_const0<sp/>=<sp/>vdupq_n_s16(<sp/><sp/><sp/>(</highlight><highlight class="keywordtype">short</highlight><highlight class="normal">)<sp/>(<sp/>1.40200f*4096.0f+0.5f));</highlight></codeline>
<codeline lineno="3755"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>int16x8_t<sp/>cr_const1<sp/>=<sp/>vdupq_n_s16(<sp/>-<sp/>(</highlight><highlight class="keywordtype">short</highlight><highlight class="normal">)<sp/>(<sp/>0.71414f*4096.0f+0.5f));</highlight></codeline>
<codeline lineno="3756"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>int16x8_t<sp/>cb_const0<sp/>=<sp/>vdupq_n_s16(<sp/>-<sp/>(</highlight><highlight class="keywordtype">short</highlight><highlight class="normal">)<sp/>(<sp/>0.34414f*4096.0f+0.5f));</highlight></codeline>
<codeline lineno="3757"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>int16x8_t<sp/>cb_const1<sp/>=<sp/>vdupq_n_s16(<sp/><sp/><sp/>(</highlight><highlight class="keywordtype">short</highlight><highlight class="normal">)<sp/>(<sp/>1.77200f*4096.0f+0.5f));</highlight></codeline>
<codeline lineno="3758"><highlight class="normal"></highlight></codeline>
<codeline lineno="3759"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(;<sp/>i+7<sp/>&lt;<sp/>count;<sp/>i<sp/>+=<sp/>8)<sp/>{</highlight></codeline>
<codeline lineno="3760"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>load</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3761"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8x8_t<sp/>y_bytes<sp/><sp/>=<sp/>vld1_u8(y<sp/>+<sp/>i);</highlight></codeline>
<codeline lineno="3762"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8x8_t<sp/>cr_bytes<sp/>=<sp/>vld1_u8(pcr<sp/>+<sp/>i);</highlight></codeline>
<codeline lineno="3763"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8x8_t<sp/>cb_bytes<sp/>=<sp/>vld1_u8(pcb<sp/>+<sp/>i);</highlight></codeline>
<codeline lineno="3764"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int8x8_t<sp/>cr_biased<sp/>=<sp/>vreinterpret_s8_u8(vsub_u8(cr_bytes,<sp/>signflip));</highlight></codeline>
<codeline lineno="3765"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int8x8_t<sp/>cb_biased<sp/>=<sp/>vreinterpret_s8_u8(vsub_u8(cb_bytes,<sp/>signflip));</highlight></codeline>
<codeline lineno="3766"><highlight class="normal"></highlight></codeline>
<codeline lineno="3767"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>expand<sp/>to<sp/>s16</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3768"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int16x8_t<sp/>yws<sp/>=<sp/>vreinterpretq_s16_u16(vshll_n_u8(y_bytes,<sp/>4));</highlight></codeline>
<codeline lineno="3769"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int16x8_t<sp/>crw<sp/>=<sp/>vshll_n_s8(cr_biased,<sp/>7);</highlight></codeline>
<codeline lineno="3770"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int16x8_t<sp/>cbw<sp/>=<sp/>vshll_n_s8(cb_biased,<sp/>7);</highlight></codeline>
<codeline lineno="3771"><highlight class="normal"></highlight></codeline>
<codeline lineno="3772"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>color<sp/>transform</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3773"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int16x8_t<sp/>cr0<sp/>=<sp/>vqdmulhq_s16(crw,<sp/>cr_const0);</highlight></codeline>
<codeline lineno="3774"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int16x8_t<sp/>cb0<sp/>=<sp/>vqdmulhq_s16(cbw,<sp/>cb_const0);</highlight></codeline>
<codeline lineno="3775"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int16x8_t<sp/>cr1<sp/>=<sp/>vqdmulhq_s16(crw,<sp/>cr_const1);</highlight></codeline>
<codeline lineno="3776"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int16x8_t<sp/>cb1<sp/>=<sp/>vqdmulhq_s16(cbw,<sp/>cb_const1);</highlight></codeline>
<codeline lineno="3777"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int16x8_t<sp/>rws<sp/>=<sp/>vaddq_s16(yws,<sp/>cr0);</highlight></codeline>
<codeline lineno="3778"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int16x8_t<sp/>gws<sp/>=<sp/>vaddq_s16(vaddq_s16(yws,<sp/>cb0),<sp/>cr1);</highlight></codeline>
<codeline lineno="3779"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int16x8_t<sp/>bws<sp/>=<sp/>vaddq_s16(yws,<sp/>cb1);</highlight></codeline>
<codeline lineno="3780"><highlight class="normal"></highlight></codeline>
<codeline lineno="3781"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>undo<sp/>scaling,<sp/>round,<sp/>convert<sp/>to<sp/>byte</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3782"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8x8x4_t<sp/>o;</highlight></codeline>
<codeline lineno="3783"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>o.val[0]<sp/>=<sp/>vqrshrun_n_s16(rws,<sp/>4);</highlight></codeline>
<codeline lineno="3784"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>o.val[1]<sp/>=<sp/>vqrshrun_n_s16(gws,<sp/>4);</highlight></codeline>
<codeline lineno="3785"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>o.val[2]<sp/>=<sp/>vqrshrun_n_s16(bws,<sp/>4);</highlight></codeline>
<codeline lineno="3786"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>o.val[3]<sp/>=<sp/>vdup_n_u8(255);</highlight></codeline>
<codeline lineno="3787"><highlight class="normal"></highlight></codeline>
<codeline lineno="3788"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>store,<sp/>interleaving<sp/>r/g/b/a</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3789"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vst4_u8(out,<sp/>o);</highlight></codeline>
<codeline lineno="3790"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out<sp/>+=<sp/>8*4;</highlight></codeline>
<codeline lineno="3791"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3792"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3793"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3794"><highlight class="normal"></highlight></codeline>
<codeline lineno="3795"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(;<sp/>i<sp/>&lt;<sp/>count;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="3796"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y_fixed<sp/>=<sp/>(y[i]<sp/>&lt;&lt;<sp/>20)<sp/>+<sp/>(1&lt;&lt;19);<sp/></highlight><highlight class="comment">//<sp/>rounding</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3797"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>r,g,b;</highlight></codeline>
<codeline lineno="3798"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>cr<sp/>=<sp/>pcr[i]<sp/>-<sp/>128;</highlight></codeline>
<codeline lineno="3799"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>cb<sp/>=<sp/>pcb[i]<sp/>-<sp/>128;</highlight></codeline>
<codeline lineno="3800"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>r<sp/>=<sp/>y_fixed<sp/>+<sp/>cr*<sp/>stbi__float2fixed(1.40200f);</highlight></codeline>
<codeline lineno="3801"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>g<sp/>=<sp/>y_fixed<sp/>+<sp/>cr*-stbi__float2fixed(0.71414f)<sp/>+<sp/>((cb*-stbi__float2fixed(0.34414f))<sp/>&amp;<sp/>0xffff0000);</highlight></codeline>
<codeline lineno="3802"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>b<sp/>=<sp/>y_fixed<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/><sp/><sp/>cb*<sp/>stbi__float2fixed(1.77200f);</highlight></codeline>
<codeline lineno="3803"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>r<sp/>&gt;&gt;=<sp/>20;</highlight></codeline>
<codeline lineno="3804"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>g<sp/>&gt;&gt;=<sp/>20;</highlight></codeline>
<codeline lineno="3805"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>b<sp/>&gt;&gt;=<sp/>20;</highlight></codeline>
<codeline lineno="3806"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal">)<sp/>r<sp/>&gt;<sp/>255)<sp/>{<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(r<sp/>&lt;<sp/>0)<sp/>r<sp/>=<sp/>0;<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>r<sp/>=<sp/>255;<sp/>}</highlight></codeline>
<codeline lineno="3807"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal">)<sp/>g<sp/>&gt;<sp/>255)<sp/>{<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(g<sp/>&lt;<sp/>0)<sp/>g<sp/>=<sp/>0;<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>g<sp/>=<sp/>255;<sp/>}</highlight></codeline>
<codeline lineno="3808"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal">)<sp/>b<sp/>&gt;<sp/>255)<sp/>{<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(b<sp/>&lt;<sp/>0)<sp/>b<sp/>=<sp/>0;<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>b<sp/>=<sp/>255;<sp/>}</highlight></codeline>
<codeline lineno="3809"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>out[0]<sp/>=<sp/>(<ref refid="stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d" kindref="member">stbi_uc</ref>)r;</highlight></codeline>
<codeline lineno="3810"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>out[1]<sp/>=<sp/>(<ref refid="stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d" kindref="member">stbi_uc</ref>)g;</highlight></codeline>
<codeline lineno="3811"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>out[2]<sp/>=<sp/>(<ref refid="stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d" kindref="member">stbi_uc</ref>)b;</highlight></codeline>
<codeline lineno="3812"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>out[3]<sp/>=<sp/>255;</highlight></codeline>
<codeline lineno="3813"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>out<sp/>+=<sp/>step;</highlight></codeline>
<codeline lineno="3814"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3815"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3816"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3817"><highlight class="normal"></highlight></codeline>
<codeline lineno="3818"><highlight class="normal"></highlight><highlight class="comment">//<sp/>set<sp/>up<sp/>the<sp/>kernels</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3819"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>stbi__setup_jpeg(stbi__jpeg<sp/>*j)</highlight></codeline>
<codeline lineno="3820"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3821"><highlight class="normal"><sp/><sp/><sp/>j-&gt;idct_block_kernel<sp/>=<sp/>stbi__idct_block;</highlight></codeline>
<codeline lineno="3822"><highlight class="normal"><sp/><sp/><sp/>j-&gt;YCbCr_to_RGB_kernel<sp/>=<sp/>stbi__YCbCr_to_RGB_row;</highlight></codeline>
<codeline lineno="3823"><highlight class="normal"><sp/><sp/><sp/>j-&gt;resample_row_hv_2_kernel<sp/>=<sp/>stbi__resample_row_hv_2;</highlight></codeline>
<codeline lineno="3824"><highlight class="normal"></highlight></codeline>
<codeline lineno="3825"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>STBI_SSE2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3826"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(stbi__sse2_available())<sp/>{</highlight></codeline>
<codeline lineno="3827"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>j-&gt;idct_block_kernel<sp/>=<sp/>stbi__idct_simd;</highlight></codeline>
<codeline lineno="3828"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>j-&gt;YCbCr_to_RGB_kernel<sp/>=<sp/>stbi__YCbCr_to_RGB_simd;</highlight></codeline>
<codeline lineno="3829"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>j-&gt;resample_row_hv_2_kernel<sp/>=<sp/>stbi__resample_row_hv_2_simd;</highlight></codeline>
<codeline lineno="3830"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3831"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3832"><highlight class="normal"></highlight></codeline>
<codeline lineno="3833"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>STBI_NEON</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3834"><highlight class="normal"><sp/><sp/><sp/>j-&gt;idct_block_kernel<sp/>=<sp/>stbi__idct_simd;</highlight></codeline>
<codeline lineno="3835"><highlight class="normal"><sp/><sp/><sp/>j-&gt;YCbCr_to_RGB_kernel<sp/>=<sp/>stbi__YCbCr_to_RGB_simd;</highlight></codeline>
<codeline lineno="3836"><highlight class="normal"><sp/><sp/><sp/>j-&gt;resample_row_hv_2_kernel<sp/>=<sp/>stbi__resample_row_hv_2_simd;</highlight></codeline>
<codeline lineno="3837"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3838"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3839"><highlight class="normal"></highlight></codeline>
<codeline lineno="3840"><highlight class="normal"></highlight><highlight class="comment">//<sp/>clean<sp/>up<sp/>the<sp/>temporary<sp/>component<sp/>buffers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3841"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>stbi__cleanup_jpeg(stbi__jpeg<sp/>*j)</highlight></codeline>
<codeline lineno="3842"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3843"><highlight class="normal"><sp/><sp/><sp/>stbi__free_jpeg_components(j,<sp/>j-&gt;s-&gt;img_n,<sp/>0);</highlight></codeline>
<codeline lineno="3844"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3845"><highlight class="normal"></highlight></codeline>
<codeline lineno="3846"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3847"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3848"><highlight class="normal"><sp/><sp/><sp/>resample_row_func<sp/>resample;</highlight></codeline>
<codeline lineno="3849"><highlight class="normal"><sp/><sp/><sp/><ref refid="stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d" kindref="member">stbi_uc</ref><sp/>*line0,*line1;</highlight></codeline>
<codeline lineno="3850"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>hs,vs;<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>expansion<sp/>factor<sp/>in<sp/>each<sp/>axis</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3851"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>w_lores;<sp/></highlight><highlight class="comment">//<sp/>horizontal<sp/>pixels<sp/>pre-expansion</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3852"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ystep;<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>how<sp/>far<sp/>through<sp/>vertical<sp/>expansion<sp/>we<sp/>are</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3853"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ypos;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>which<sp/>pre-expansion<sp/>row<sp/>we&apos;re<sp/>on</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3854"><highlight class="normal">}<sp/>stbi__resample;</highlight></codeline>
<codeline lineno="3855"><highlight class="normal"></highlight></codeline>
<codeline lineno="3856"><highlight class="normal"></highlight><highlight class="comment">//<sp/>fast<sp/>0..255<sp/>*<sp/>0..255<sp/>=&gt;<sp/>0..255<sp/>rounded<sp/>multiplication</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3857"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d" kindref="member">stbi_uc</ref><sp/>stbi__blinn_8x8(<ref refid="stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d" kindref="member">stbi_uc</ref><sp/>x,<sp/><ref refid="stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d" kindref="member">stbi_uc</ref><sp/>y)</highlight></codeline>
<codeline lineno="3858"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3859"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>t<sp/>=<sp/>x*y<sp/>+<sp/>128;</highlight></codeline>
<codeline lineno="3860"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d" kindref="member">stbi_uc</ref>)<sp/>((t<sp/>+<sp/>(t<sp/>&gt;&gt;8))<sp/>&gt;&gt;<sp/>8);</highlight></codeline>
<codeline lineno="3861"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3862"><highlight class="normal"></highlight></codeline>
<codeline lineno="3863"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d" kindref="member">stbi_uc</ref><sp/>*load_jpeg_image(stbi__jpeg<sp/>*z,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*out_x,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*out_y,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*comp,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>req_comp)</highlight></codeline>
<codeline lineno="3864"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3865"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n,<sp/>decode_n,<sp/>is_rgb;</highlight></codeline>
<codeline lineno="3866"><highlight class="normal"><sp/><sp/><sp/>z-&gt;s-&gt;img_n<sp/>=<sp/>0;<sp/></highlight><highlight class="comment">//<sp/>make<sp/>stbi__cleanup_jpeg<sp/>safe</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3867"><highlight class="normal"></highlight></codeline>
<codeline lineno="3868"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>validate<sp/>req_comp</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3869"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(req_comp<sp/>&lt;<sp/>0<sp/>||<sp/>req_comp<sp/>&gt;<sp/>4)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stbi__errpuc(</highlight><highlight class="stringliteral">&quot;bad<sp/>req_comp&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Internal<sp/>error&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3870"><highlight class="normal"></highlight></codeline>
<codeline lineno="3871"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>load<sp/>a<sp/>jpeg<sp/>image<sp/>from<sp/>whichever<sp/>source,<sp/>but<sp/>leave<sp/>in<sp/>YCbCr<sp/>format</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3872"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!stbi__decode_jpeg_image(z))<sp/>{<sp/>stbi__cleanup_jpeg(z);<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;<sp/>}</highlight></codeline>
<codeline lineno="3873"><highlight class="normal"></highlight></codeline>
<codeline lineno="3874"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>determine<sp/>actual<sp/>number<sp/>of<sp/>components<sp/>to<sp/>generate</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3875"><highlight class="normal"><sp/><sp/><sp/>n<sp/>=<sp/>req_comp<sp/>?<sp/>req_comp<sp/>:<sp/>z-&gt;s-&gt;img_n<sp/>&gt;=<sp/>3<sp/>?<sp/>3<sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="3876"><highlight class="normal"></highlight></codeline>
<codeline lineno="3877"><highlight class="normal"><sp/><sp/><sp/>is_rgb<sp/>=<sp/>z-&gt;s-&gt;img_n<sp/>==<sp/>3<sp/>&amp;&amp;<sp/>(z-&gt;rgb<sp/>==<sp/>3<sp/>||<sp/>(z-&gt;app14_color_transform<sp/>==<sp/>0<sp/>&amp;&amp;<sp/>!z-&gt;jfif));</highlight></codeline>
<codeline lineno="3878"><highlight class="normal"></highlight></codeline>
<codeline lineno="3879"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(z-&gt;s-&gt;img_n<sp/>==<sp/>3<sp/>&amp;&amp;<sp/>n<sp/>&lt;<sp/>3<sp/>&amp;&amp;<sp/>!is_rgb)</highlight></codeline>
<codeline lineno="3880"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>decode_n<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="3881"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3882"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>decode_n<sp/>=<sp/>z-&gt;s-&gt;img_n;</highlight></codeline>
<codeline lineno="3883"><highlight class="normal"></highlight></codeline>
<codeline lineno="3884"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>nothing<sp/>to<sp/>do<sp/>if<sp/>no<sp/>components<sp/>requested;<sp/>check<sp/>this<sp/>now<sp/>to<sp/>avoid</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3885"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>accessing<sp/>uninitialized<sp/>coutput[0]<sp/>later</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3886"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(decode_n<sp/>&lt;=<sp/>0)<sp/>{<sp/>stbi__cleanup_jpeg(z);<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;<sp/>}</highlight></codeline>
<codeline lineno="3887"><highlight class="normal"></highlight></codeline>
<codeline lineno="3888"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>resample<sp/>and<sp/>color-convert</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3889"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3890"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k;</highlight></codeline>
<codeline lineno="3891"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,j;</highlight></codeline>
<codeline lineno="3892"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d" kindref="member">stbi_uc</ref><sp/>*output;</highlight></codeline>
<codeline lineno="3893"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d" kindref="member">stbi_uc</ref><sp/>*coutput[4]<sp/>=<sp/>{<sp/>NULL,<sp/>NULL,<sp/>NULL,<sp/>NULL<sp/>};</highlight></codeline>
<codeline lineno="3894"><highlight class="normal"></highlight></codeline>
<codeline lineno="3895"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stbi__resample<sp/>res_comp[4];</highlight></codeline>
<codeline lineno="3896"><highlight class="normal"></highlight></codeline>
<codeline lineno="3897"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(k=0;<sp/>k<sp/>&lt;<sp/>decode_n;<sp/>++k)<sp/>{</highlight></codeline>
<codeline lineno="3898"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stbi__resample<sp/>*r<sp/>=<sp/>&amp;res_comp[k];</highlight></codeline>
<codeline lineno="3899"><highlight class="normal"></highlight></codeline>
<codeline lineno="3900"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>allocate<sp/>line<sp/>buffer<sp/>big<sp/>enough<sp/>for<sp/>upsampling<sp/>off<sp/>the<sp/>edges</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3901"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>with<sp/>upsample<sp/>factor<sp/>of<sp/>4</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3902"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>z-&gt;img_comp[k].linebuf<sp/>=<sp/>(<ref refid="stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d" kindref="member">stbi_uc</ref><sp/>*)<sp/>stbi__malloc(z-&gt;s-&gt;img_x<sp/>+<sp/>3);</highlight></codeline>
<codeline lineno="3903"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!z-&gt;img_comp[k].linebuf)<sp/>{<sp/>stbi__cleanup_jpeg(z);<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stbi__errpuc(</highlight><highlight class="stringliteral">&quot;outofmem&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Out<sp/>of<sp/>memory&quot;</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="3904"><highlight class="normal"></highlight></codeline>
<codeline lineno="3905"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r-&gt;hs<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>z-&gt;img_h_max<sp/>/<sp/>z-&gt;img_comp[k].h;</highlight></codeline>
<codeline lineno="3906"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r-&gt;vs<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>z-&gt;img_v_max<sp/>/<sp/>z-&gt;img_comp[k].v;</highlight></codeline>
<codeline lineno="3907"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r-&gt;ystep<sp/><sp/><sp/>=<sp/>r-&gt;vs<sp/>&gt;&gt;<sp/>1;</highlight></codeline>
<codeline lineno="3908"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r-&gt;w_lores<sp/>=<sp/>(z-&gt;s-&gt;img_x<sp/>+<sp/>r-&gt;hs-1)<sp/>/<sp/>r-&gt;hs;</highlight></codeline>
<codeline lineno="3909"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r-&gt;ypos<sp/><sp/><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3910"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r-&gt;line0<sp/><sp/><sp/>=<sp/>r-&gt;line1<sp/>=<sp/>z-&gt;img_comp[k].data;</highlight></codeline>
<codeline lineno="3911"><highlight class="normal"></highlight></codeline>
<codeline lineno="3912"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/><sp/><sp/><sp/><sp/><sp/>(r-&gt;hs<sp/>==<sp/>1<sp/>&amp;&amp;<sp/>r-&gt;vs<sp/>==<sp/>1)<sp/>r-&gt;resample<sp/>=<sp/>resample_row_1;</highlight></codeline>
<codeline lineno="3913"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(r-&gt;hs<sp/>==<sp/>1<sp/>&amp;&amp;<sp/>r-&gt;vs<sp/>==<sp/>2)<sp/>r-&gt;resample<sp/>=<sp/>stbi__resample_row_v_2;</highlight></codeline>
<codeline lineno="3914"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(r-&gt;hs<sp/>==<sp/>2<sp/>&amp;&amp;<sp/>r-&gt;vs<sp/>==<sp/>1)<sp/>r-&gt;resample<sp/>=<sp/>stbi__resample_row_h_2;</highlight></codeline>
<codeline lineno="3915"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(r-&gt;hs<sp/>==<sp/>2<sp/>&amp;&amp;<sp/>r-&gt;vs<sp/>==<sp/>2)<sp/>r-&gt;resample<sp/>=<sp/>z-&gt;resample_row_hv_2_kernel;</highlight></codeline>
<codeline lineno="3916"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r-&gt;resample<sp/>=<sp/>stbi__resample_row_generic;</highlight></codeline>
<codeline lineno="3917"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3918"><highlight class="normal"></highlight></codeline>
<codeline lineno="3919"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>can&apos;t<sp/>error<sp/>after<sp/>this<sp/>so,<sp/>this<sp/>is<sp/>safe</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3920"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>output<sp/>=<sp/>(<ref refid="stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d" kindref="member">stbi_uc</ref><sp/>*)<sp/>stbi__malloc_mad3(n,<sp/>z-&gt;s-&gt;img_x,<sp/>z-&gt;s-&gt;img_y,<sp/>1);</highlight></codeline>
<codeline lineno="3921"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!output)<sp/>{<sp/>stbi__cleanup_jpeg(z);<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stbi__errpuc(</highlight><highlight class="stringliteral">&quot;outofmem&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Out<sp/>of<sp/>memory&quot;</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="3922"><highlight class="normal"></highlight></codeline>
<codeline lineno="3923"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>now<sp/>go<sp/>ahead<sp/>and<sp/>resample</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3924"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(j=0;<sp/>j<sp/>&lt;<sp/>z-&gt;s-&gt;img_y;<sp/>++j)<sp/>{</highlight></codeline>
<codeline lineno="3925"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d" kindref="member">stbi_uc</ref><sp/>*out<sp/>=<sp/>output<sp/>+<sp/>n<sp/>*<sp/>z-&gt;s-&gt;img_x<sp/>*<sp/>j;</highlight></codeline>
<codeline lineno="3926"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(k=0;<sp/>k<sp/>&lt;<sp/>decode_n;<sp/>++k)<sp/>{</highlight></codeline>
<codeline lineno="3927"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stbi__resample<sp/>*r<sp/>=<sp/>&amp;res_comp[k];</highlight></codeline>
<codeline lineno="3928"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y_bot<sp/>=<sp/>r-&gt;ystep<sp/>&gt;=<sp/>(r-&gt;vs<sp/>&gt;&gt;<sp/>1);</highlight></codeline>
<codeline lineno="3929"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>coutput[k]<sp/>=<sp/>r-&gt;resample(z-&gt;img_comp[k].linebuf,</highlight></codeline>
<codeline lineno="3930"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y_bot<sp/>?<sp/>r-&gt;line1<sp/>:<sp/>r-&gt;line0,</highlight></codeline>
<codeline lineno="3931"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y_bot<sp/>?<sp/>r-&gt;line0<sp/>:<sp/>r-&gt;line1,</highlight></codeline>
<codeline lineno="3932"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r-&gt;w_lores,<sp/>r-&gt;hs);</highlight></codeline>
<codeline lineno="3933"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(++r-&gt;ystep<sp/>&gt;=<sp/>r-&gt;vs)<sp/>{</highlight></codeline>
<codeline lineno="3934"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r-&gt;ystep<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3935"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r-&gt;line0<sp/>=<sp/>r-&gt;line1;</highlight></codeline>
<codeline lineno="3936"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(++r-&gt;ypos<sp/>&lt;<sp/>z-&gt;img_comp[k].y)</highlight></codeline>
<codeline lineno="3937"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r-&gt;line1<sp/>+=<sp/>z-&gt;img_comp[k].w2;</highlight></codeline>
<codeline lineno="3938"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3939"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3940"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(n<sp/>&gt;=<sp/>3)<sp/>{</highlight></codeline>
<codeline lineno="3941"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d" kindref="member">stbi_uc</ref><sp/>*y<sp/>=<sp/>coutput[0];</highlight></codeline>
<codeline lineno="3942"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(z-&gt;s-&gt;img_n<sp/>==<sp/>3)<sp/>{</highlight></codeline>
<codeline lineno="3943"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(is_rgb)<sp/>{</highlight></codeline>
<codeline lineno="3944"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i<sp/>&lt;<sp/>z-&gt;s-&gt;img_x;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="3945"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out[0]<sp/>=<sp/>y[i];</highlight></codeline>
<codeline lineno="3946"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out[1]<sp/>=<sp/>coutput[1][i];</highlight></codeline>
<codeline lineno="3947"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out[2]<sp/>=<sp/>coutput[2][i];</highlight></codeline>
<codeline lineno="3948"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out[3]<sp/>=<sp/>255;</highlight></codeline>
<codeline lineno="3949"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out<sp/>+=<sp/>n;</highlight></codeline>
<codeline lineno="3950"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3951"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="3952"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>z-&gt;YCbCr_to_RGB_kernel(out,<sp/>y,<sp/>coutput[1],<sp/>coutput[2],<sp/>z-&gt;s-&gt;img_x,<sp/>n);</highlight></codeline>
<codeline lineno="3953"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3954"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(z-&gt;s-&gt;img_n<sp/>==<sp/>4)<sp/>{</highlight></codeline>
<codeline lineno="3955"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(z-&gt;app14_color_transform<sp/>==<sp/>0)<sp/>{<sp/></highlight><highlight class="comment">//<sp/>CMYK</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3956"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i<sp/>&lt;<sp/>z-&gt;s-&gt;img_x;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="3957"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d" kindref="member">stbi_uc</ref><sp/>m<sp/>=<sp/>coutput[3][i];</highlight></codeline>
<codeline lineno="3958"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out[0]<sp/>=<sp/>stbi__blinn_8x8(coutput[0][i],<sp/>m);</highlight></codeline>
<codeline lineno="3959"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out[1]<sp/>=<sp/>stbi__blinn_8x8(coutput[1][i],<sp/>m);</highlight></codeline>
<codeline lineno="3960"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out[2]<sp/>=<sp/>stbi__blinn_8x8(coutput[2][i],<sp/>m);</highlight></codeline>
<codeline lineno="3961"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out[3]<sp/>=<sp/>255;</highlight></codeline>
<codeline lineno="3962"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out<sp/>+=<sp/>n;</highlight></codeline>
<codeline lineno="3963"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3964"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(z-&gt;app14_color_transform<sp/>==<sp/>2)<sp/>{<sp/></highlight><highlight class="comment">//<sp/>YCCK</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3965"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>z-&gt;YCbCr_to_RGB_kernel(out,<sp/>y,<sp/>coutput[1],<sp/>coutput[2],<sp/>z-&gt;s-&gt;img_x,<sp/>n);</highlight></codeline>
<codeline lineno="3966"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i<sp/>&lt;<sp/>z-&gt;s-&gt;img_x;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="3967"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d" kindref="member">stbi_uc</ref><sp/>m<sp/>=<sp/>coutput[3][i];</highlight></codeline>
<codeline lineno="3968"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out[0]<sp/>=<sp/>stbi__blinn_8x8(255<sp/>-<sp/>out[0],<sp/>m);</highlight></codeline>
<codeline lineno="3969"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out[1]<sp/>=<sp/>stbi__blinn_8x8(255<sp/>-<sp/>out[1],<sp/>m);</highlight></codeline>
<codeline lineno="3970"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out[2]<sp/>=<sp/>stbi__blinn_8x8(255<sp/>-<sp/>out[2],<sp/>m);</highlight></codeline>
<codeline lineno="3971"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out<sp/>+=<sp/>n;</highlight></codeline>
<codeline lineno="3972"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3973"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{<sp/></highlight><highlight class="comment">//<sp/>YCbCr<sp/>+<sp/>alpha?<sp/><sp/>Ignore<sp/>the<sp/>fourth<sp/>channel<sp/>for<sp/>now</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3974"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>z-&gt;YCbCr_to_RGB_kernel(out,<sp/>y,<sp/>coutput[1],<sp/>coutput[2],<sp/>z-&gt;s-&gt;img_x,<sp/>n);</highlight></codeline>
<codeline lineno="3975"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3976"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3977"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i<sp/>&lt;<sp/>z-&gt;s-&gt;img_x;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="3978"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out[0]<sp/>=<sp/>out[1]<sp/>=<sp/>out[2]<sp/>=<sp/>y[i];</highlight></codeline>
<codeline lineno="3979"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out[3]<sp/>=<sp/>255;<sp/></highlight><highlight class="comment">//<sp/>not<sp/>used<sp/>if<sp/>n==3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3980"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out<sp/>+=<sp/>n;</highlight></codeline>
<codeline lineno="3981"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3982"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="3983"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(is_rgb)<sp/>{</highlight></codeline>
<codeline lineno="3984"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(n<sp/>==<sp/>1)</highlight></codeline>
<codeline lineno="3985"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i<sp/>&lt;<sp/>z-&gt;s-&gt;img_x;<sp/>++i)</highlight></codeline>
<codeline lineno="3986"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*out++<sp/>=<sp/>stbi__compute_y(coutput[0][i],<sp/>coutput[1][i],<sp/>coutput[2][i]);</highlight></codeline>
<codeline lineno="3987"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="3988"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i<sp/>&lt;<sp/>z-&gt;s-&gt;img_x;<sp/>++i,<sp/>out<sp/>+=<sp/>2)<sp/>{</highlight></codeline>
<codeline lineno="3989"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out[0]<sp/>=<sp/>stbi__compute_y(coutput[0][i],<sp/>coutput[1][i],<sp/>coutput[2][i]);</highlight></codeline>
<codeline lineno="3990"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out[1]<sp/>=<sp/>255;</highlight></codeline>
<codeline lineno="3991"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3992"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3993"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(z-&gt;s-&gt;img_n<sp/>==<sp/>4<sp/>&amp;&amp;<sp/>z-&gt;app14_color_transform<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="3994"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i<sp/>&lt;<sp/>z-&gt;s-&gt;img_x;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="3995"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d" kindref="member">stbi_uc</ref><sp/>m<sp/>=<sp/>coutput[3][i];</highlight></codeline>
<codeline lineno="3996"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d" kindref="member">stbi_uc</ref><sp/>r<sp/>=<sp/>stbi__blinn_8x8(coutput[0][i],<sp/>m);</highlight></codeline>
<codeline lineno="3997"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d" kindref="member">stbi_uc</ref><sp/>g<sp/>=<sp/>stbi__blinn_8x8(coutput[1][i],<sp/>m);</highlight></codeline>
<codeline lineno="3998"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d" kindref="member">stbi_uc</ref><sp/>b<sp/>=<sp/>stbi__blinn_8x8(coutput[2][i],<sp/>m);</highlight></codeline>
<codeline lineno="3999"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out[0]<sp/>=<sp/>stbi__compute_y(r,<sp/>g,<sp/>b);</highlight></codeline>
<codeline lineno="4000"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out[1]<sp/>=<sp/>255;</highlight></codeline>
<codeline lineno="4001"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out<sp/>+=<sp/>n;</highlight></codeline>
<codeline lineno="4002"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4003"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(z-&gt;s-&gt;img_n<sp/>==<sp/>4<sp/>&amp;&amp;<sp/>z-&gt;app14_color_transform<sp/>==<sp/>2)<sp/>{</highlight></codeline>
<codeline lineno="4004"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i<sp/>&lt;<sp/>z-&gt;s-&gt;img_x;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="4005"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out[0]<sp/>=<sp/>stbi__blinn_8x8(255<sp/>-<sp/>coutput[0][i],<sp/>coutput[3][i]);</highlight></codeline>
<codeline lineno="4006"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out[1]<sp/>=<sp/>255;</highlight></codeline>
<codeline lineno="4007"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out<sp/>+=<sp/>n;</highlight></codeline>
<codeline lineno="4008"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4009"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="4010"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d" kindref="member">stbi_uc</ref><sp/>*y<sp/>=<sp/>coutput[0];</highlight></codeline>
<codeline lineno="4011"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(n<sp/>==<sp/>1)</highlight></codeline>
<codeline lineno="4012"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i<sp/>&lt;<sp/>z-&gt;s-&gt;img_x;<sp/>++i)<sp/>out[i]<sp/>=<sp/>y[i];</highlight></codeline>
<codeline lineno="4013"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4014"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i<sp/>&lt;<sp/>z-&gt;s-&gt;img_x;<sp/>++i)<sp/>{<sp/>*out++<sp/>=<sp/>y[i];<sp/>*out++<sp/>=<sp/>255;<sp/>}</highlight></codeline>
<codeline lineno="4015"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4016"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4017"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4018"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stbi__cleanup_jpeg(z);</highlight></codeline>
<codeline lineno="4019"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*out_x<sp/>=<sp/>z-&gt;s-&gt;img_x;</highlight></codeline>
<codeline lineno="4020"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*out_y<sp/>=<sp/>z-&gt;s-&gt;img_y;</highlight></codeline>
<codeline lineno="4021"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(comp)<sp/>*comp<sp/>=<sp/>z-&gt;s-&gt;img_n<sp/>&gt;=<sp/>3<sp/>?<sp/>3<sp/>:<sp/>1;<sp/></highlight><highlight class="comment">//<sp/>report<sp/>original<sp/>components,<sp/>not<sp/>output</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4022"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>output;</highlight></codeline>
<codeline lineno="4023"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4024"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4025"><highlight class="normal"></highlight></codeline>
<codeline lineno="4026"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*stbi__jpeg_load(stbi__context<sp/>*s,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*x,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*y,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*comp,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>req_comp,<sp/>stbi__result_info<sp/>*ri)</highlight></codeline>
<codeline lineno="4027"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4028"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>result;</highlight></codeline>
<codeline lineno="4029"><highlight class="normal"><sp/><sp/><sp/>stbi__jpeg*<sp/>j<sp/>=<sp/>(stbi__jpeg*)<sp/>stbi__malloc(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(stbi__jpeg));</highlight></codeline>
<codeline lineno="4030"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!j)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stbi__errpuc(</highlight><highlight class="stringliteral">&quot;outofmem&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Out<sp/>of<sp/>memory&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4031"><highlight class="normal"><sp/><sp/><sp/>memset(j,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(stbi__jpeg));</highlight></codeline>
<codeline lineno="4032"><highlight class="normal"><sp/><sp/><sp/>STBI_NOTUSED(ri);</highlight></codeline>
<codeline lineno="4033"><highlight class="normal"><sp/><sp/><sp/>j-&gt;s<sp/>=<sp/>s;</highlight></codeline>
<codeline lineno="4034"><highlight class="normal"><sp/><sp/><sp/>stbi__setup_jpeg(j);</highlight></codeline>
<codeline lineno="4035"><highlight class="normal"><sp/><sp/><sp/>result<sp/>=<sp/>load_jpeg_image(j,<sp/>x,y,comp,req_comp);</highlight></codeline>
<codeline lineno="4036"><highlight class="normal"><sp/><sp/><sp/>STBI_FREE(j);</highlight></codeline>
<codeline lineno="4037"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="4038"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4039"><highlight class="normal"></highlight></codeline>
<codeline lineno="4040"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>stbi__jpeg_test(stbi__context<sp/>*s)</highlight></codeline>
<codeline lineno="4041"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4042"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>r;</highlight></codeline>
<codeline lineno="4043"><highlight class="normal"><sp/><sp/><sp/>stbi__jpeg*<sp/>j<sp/>=<sp/>(stbi__jpeg*)stbi__malloc(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(stbi__jpeg));</highlight></codeline>
<codeline lineno="4044"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!j)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stbi__err(</highlight><highlight class="stringliteral">&quot;outofmem&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Out<sp/>of<sp/>memory&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4045"><highlight class="normal"><sp/><sp/><sp/>memset(j,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(stbi__jpeg));</highlight></codeline>
<codeline lineno="4046"><highlight class="normal"><sp/><sp/><sp/>j-&gt;s<sp/>=<sp/>s;</highlight></codeline>
<codeline lineno="4047"><highlight class="normal"><sp/><sp/><sp/>stbi__setup_jpeg(j);</highlight></codeline>
<codeline lineno="4048"><highlight class="normal"><sp/><sp/><sp/>r<sp/>=<sp/>stbi__decode_jpeg_header(j,<sp/>STBI__SCAN_type);</highlight></codeline>
<codeline lineno="4049"><highlight class="normal"><sp/><sp/><sp/>stbi__rewind(s);</highlight></codeline>
<codeline lineno="4050"><highlight class="normal"><sp/><sp/><sp/>STBI_FREE(j);</highlight></codeline>
<codeline lineno="4051"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>r;</highlight></codeline>
<codeline lineno="4052"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4053"><highlight class="normal"></highlight></codeline>
<codeline lineno="4054"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>stbi__jpeg_info_raw(stbi__jpeg<sp/>*j,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*x,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*y,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*comp)</highlight></codeline>
<codeline lineno="4055"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4056"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!stbi__decode_jpeg_header(j,<sp/>STBI__SCAN_header))<sp/>{</highlight></codeline>
<codeline lineno="4057"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stbi__rewind(<sp/>j-&gt;s<sp/>);</highlight></codeline>
<codeline lineno="4058"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="4059"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4060"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(x)<sp/>*x<sp/>=<sp/>j-&gt;s-&gt;img_x;</highlight></codeline>
<codeline lineno="4061"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(y)<sp/>*y<sp/>=<sp/>j-&gt;s-&gt;img_y;</highlight></codeline>
<codeline lineno="4062"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(comp)<sp/>*comp<sp/>=<sp/>j-&gt;s-&gt;img_n<sp/>&gt;=<sp/>3<sp/>?<sp/>3<sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="4063"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="4064"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4065"><highlight class="normal"></highlight></codeline>
<codeline lineno="4066"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>stbi__jpeg_info(stbi__context<sp/>*s,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*x,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*y,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*comp)</highlight></codeline>
<codeline lineno="4067"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4068"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="4069"><highlight class="normal"><sp/><sp/><sp/>stbi__jpeg*<sp/>j<sp/>=<sp/>(stbi__jpeg*)<sp/>(stbi__malloc(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(stbi__jpeg)));</highlight></codeline>
<codeline lineno="4070"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!j)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stbi__err(</highlight><highlight class="stringliteral">&quot;outofmem&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Out<sp/>of<sp/>memory&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4071"><highlight class="normal"><sp/><sp/><sp/>memset(j,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(stbi__jpeg));</highlight></codeline>
<codeline lineno="4072"><highlight class="normal"><sp/><sp/><sp/>j-&gt;s<sp/>=<sp/>s;</highlight></codeline>
<codeline lineno="4073"><highlight class="normal"><sp/><sp/><sp/>result<sp/>=<sp/>stbi__jpeg_info_raw(j,<sp/>x,<sp/>y,<sp/>comp);</highlight></codeline>
<codeline lineno="4074"><highlight class="normal"><sp/><sp/><sp/>STBI_FREE(j);</highlight></codeline>
<codeline lineno="4075"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="4076"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4077"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4078"><highlight class="normal"></highlight></codeline>
<codeline lineno="4079"><highlight class="normal"></highlight><highlight class="comment">//<sp/>public<sp/>domain<sp/>zlib<sp/>decode<sp/><sp/><sp/><sp/>v0.2<sp/><sp/>Sean<sp/>Barrett<sp/>2006-11-18</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4080"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>simple<sp/>implementation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4081"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>-<sp/>all<sp/>input<sp/>must<sp/>be<sp/>provided<sp/>in<sp/>an<sp/>upfront<sp/>buffer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4082"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>-<sp/>all<sp/>output<sp/>is<sp/>written<sp/>to<sp/>a<sp/>single<sp/>output<sp/>buffer<sp/>(can<sp/>malloc/realloc)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4083"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>performance</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4084"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>-<sp/>fast<sp/>huffman</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4085"><highlight class="normal"></highlight></codeline>
<codeline lineno="4086"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>STBI_NO_ZLIB</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4087"><highlight class="normal"></highlight></codeline>
<codeline lineno="4088"><highlight class="normal"></highlight><highlight class="comment">//<sp/>fast-way<sp/>is<sp/>faster<sp/>to<sp/>check<sp/>than<sp/>jpeg<sp/>huffman,<sp/>but<sp/>slow<sp/>way<sp/>is<sp/>slower</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4089"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>STBI__ZFAST_BITS<sp/><sp/>9<sp/></highlight><highlight class="comment">//<sp/>accelerate<sp/>all<sp/>cases<sp/>in<sp/>default<sp/>tables</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4090"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>STBI__ZFAST_MASK<sp/><sp/>((1<sp/>&lt;&lt;<sp/>STBI__ZFAST_BITS)<sp/>-<sp/>1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4091"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>STBI__ZNSYMS<sp/>288<sp/></highlight><highlight class="comment">//<sp/>number<sp/>of<sp/>symbols<sp/>in<sp/>literal/length<sp/>alphabet</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4092"><highlight class="normal"></highlight></codeline>
<codeline lineno="4093"><highlight class="normal"></highlight><highlight class="comment">//<sp/>zlib-style<sp/>huffman<sp/>encoding</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4094"><highlight class="normal"></highlight><highlight class="comment">//<sp/>(jpegs<sp/>packs<sp/>from<sp/>left,<sp/>zlib<sp/>from<sp/>right,<sp/>so<sp/>can&apos;t<sp/>share<sp/>code)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4095"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4096"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4097"><highlight class="normal"><sp/><sp/><sp/>stbi__uint16<sp/>fast[1<sp/>&lt;&lt;<sp/>STBI__ZFAST_BITS];</highlight></codeline>
<codeline lineno="4098"><highlight class="normal"><sp/><sp/><sp/>stbi__uint16<sp/>firstcode[16];</highlight></codeline>
<codeline lineno="4099"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>maxcode[17];</highlight></codeline>
<codeline lineno="4100"><highlight class="normal"><sp/><sp/><sp/>stbi__uint16<sp/>firstsymbol[16];</highlight></codeline>
<codeline lineno="4101"><highlight class="normal"><sp/><sp/><sp/><ref refid="stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d" kindref="member">stbi_uc</ref><sp/><sp/>size[STBI__ZNSYMS];</highlight></codeline>
<codeline lineno="4102"><highlight class="normal"><sp/><sp/><sp/>stbi__uint16<sp/>value[STBI__ZNSYMS];</highlight></codeline>
<codeline lineno="4103"><highlight class="normal">}<sp/>stbi__zhuffman;</highlight></codeline>
<codeline lineno="4104"><highlight class="normal"></highlight></codeline>
<codeline lineno="4105"><highlight class="normal">stbi_inline<sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>stbi__bitreverse16(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n)</highlight></codeline>
<codeline lineno="4106"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4107"><highlight class="normal"><sp/><sp/>n<sp/>=<sp/>((n<sp/>&amp;<sp/>0xAAAA)<sp/>&gt;&gt;<sp/><sp/>1)<sp/>|<sp/>((n<sp/>&amp;<sp/>0x5555)<sp/>&lt;&lt;<sp/>1);</highlight></codeline>
<codeline lineno="4108"><highlight class="normal"><sp/><sp/>n<sp/>=<sp/>((n<sp/>&amp;<sp/>0xCCCC)<sp/>&gt;&gt;<sp/><sp/>2)<sp/>|<sp/>((n<sp/>&amp;<sp/>0x3333)<sp/>&lt;&lt;<sp/>2);</highlight></codeline>
<codeline lineno="4109"><highlight class="normal"><sp/><sp/>n<sp/>=<sp/>((n<sp/>&amp;<sp/>0xF0F0)<sp/>&gt;&gt;<sp/><sp/>4)<sp/>|<sp/>((n<sp/>&amp;<sp/>0x0F0F)<sp/>&lt;&lt;<sp/>4);</highlight></codeline>
<codeline lineno="4110"><highlight class="normal"><sp/><sp/>n<sp/>=<sp/>((n<sp/>&amp;<sp/>0xFF00)<sp/>&gt;&gt;<sp/><sp/>8)<sp/>|<sp/>((n<sp/>&amp;<sp/>0x00FF)<sp/>&lt;&lt;<sp/>8);</highlight></codeline>
<codeline lineno="4111"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>n;</highlight></codeline>
<codeline lineno="4112"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4113"><highlight class="normal"></highlight></codeline>
<codeline lineno="4114"><highlight class="normal">stbi_inline<sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>stbi__bit_reverse(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>v,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bits)</highlight></codeline>
<codeline lineno="4115"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4116"><highlight class="normal"><sp/><sp/><sp/>STBI_ASSERT(bits<sp/>&lt;=<sp/>16);</highlight></codeline>
<codeline lineno="4117"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>to<sp/>bit<sp/>reverse<sp/>n<sp/>bits,<sp/>reverse<sp/>16<sp/>and<sp/>shift</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4118"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>e.g.<sp/>11<sp/>bits,<sp/>bit<sp/>reverse<sp/>and<sp/>shift<sp/>away<sp/>5</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4119"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stbi__bitreverse16(v)<sp/>&gt;&gt;<sp/>(16-bits);</highlight></codeline>
<codeline lineno="4120"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4121"><highlight class="normal"></highlight></codeline>
<codeline lineno="4122"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>stbi__zbuild_huffman(stbi__zhuffman<sp/>*z,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d" kindref="member">stbi_uc</ref><sp/>*sizelist,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num)</highlight></codeline>
<codeline lineno="4123"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4124"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,k=0;</highlight></codeline>
<codeline lineno="4125"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>code,<sp/>next_code[16],<sp/>sizes[17];</highlight></codeline>
<codeline lineno="4126"><highlight class="normal"></highlight></codeline>
<codeline lineno="4127"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>DEFLATE<sp/>spec<sp/>for<sp/>generating<sp/>codes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4128"><highlight class="normal"><sp/><sp/><sp/>memset(sizes,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(sizes));</highlight></codeline>
<codeline lineno="4129"><highlight class="normal"><sp/><sp/><sp/>memset(z-&gt;fast,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(z-&gt;fast));</highlight></codeline>
<codeline lineno="4130"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i<sp/>&lt;<sp/>num;<sp/>++i)</highlight></codeline>
<codeline lineno="4131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>++sizes[sizelist[i]];</highlight></codeline>
<codeline lineno="4132"><highlight class="normal"><sp/><sp/><sp/>sizes[0]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="4133"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=1;<sp/>i<sp/>&lt;<sp/>16;<sp/>++i)</highlight></codeline>
<codeline lineno="4134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sizes[i]<sp/>&gt;<sp/>(1<sp/>&lt;&lt;<sp/>i))</highlight></codeline>
<codeline lineno="4135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stbi__err(</highlight><highlight class="stringliteral">&quot;bad<sp/>sizes&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Corrupt<sp/>PNG&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4136"><highlight class="normal"><sp/><sp/><sp/>code<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="4137"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=1;<sp/>i<sp/>&lt;<sp/>16;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="4138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>next_code[i]<sp/>=<sp/>code;</highlight></codeline>
<codeline lineno="4139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>z-&gt;firstcode[i]<sp/>=<sp/>(stbi__uint16)<sp/>code;</highlight></codeline>
<codeline lineno="4140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>z-&gt;firstsymbol[i]<sp/>=<sp/>(stbi__uint16)<sp/>k;</highlight></codeline>
<codeline lineno="4141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>code<sp/>=<sp/>(code<sp/>+<sp/>sizes[i]);</highlight></codeline>
<codeline lineno="4142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sizes[i])</highlight></codeline>
<codeline lineno="4143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(code-1<sp/>&gt;=<sp/>(1<sp/>&lt;&lt;<sp/>i))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stbi__err(</highlight><highlight class="stringliteral">&quot;bad<sp/>codelengths&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;Corrupt<sp/>PNG&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>z-&gt;maxcode[i]<sp/>=<sp/>code<sp/>&lt;&lt;<sp/>(16-i);<sp/></highlight><highlight class="comment">//<sp/>preshift<sp/>for<sp/>inner<sp/>loop</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>code<sp/>&lt;&lt;=<sp/>1;</highlight></codeline>
<codeline lineno="4146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>k<sp/>+=<sp/>sizes[i];</highlight></codeline>
<codeline lineno="4147"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4148"><highlight class="normal"><sp/><sp/><sp/>z-&gt;maxcode[16]<sp/>=<sp/>0x10000;<sp/></highlight><highlight class="comment">//<sp/>sentinel</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4149"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i<sp/>&lt;<sp/>num;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="4150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>s<sp/>=<sp/>sizelist[i];</highlight></codeline>
<codeline lineno="4151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(s)<sp/>{</highlight></codeline>
<codeline lineno="4152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>c<sp/>=<sp/>next_code[s]<sp/>-<sp/>z-&gt;firstcode[s]<sp/>+<sp/>z-&gt;firstsymbol[s];</highlight></codeline>
<codeline lineno="4153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stbi__uint16<sp/>fastv<sp/>=<sp/>(stbi__uint16)<sp/>((s<sp/>&lt;&lt;<sp/>9)<sp/>|<sp/>i);</highlight></codeline>
<codeline lineno="4154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>z-&gt;size<sp/>[c]<sp/>=<sp/>(<ref refid="stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d" kindref="member">stbi_uc</ref><sp/><sp/><sp/><sp/><sp/>)<sp/>s;</highlight></codeline>
<codeline lineno="4155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>z-&gt;value[c]<sp/>=<sp/>(stbi__uint16)<sp/>i;</highlight></codeline>
<codeline lineno="4156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(s<sp/>&lt;=<sp/>STBI__ZFAST_BITS)<sp/>{</highlight></codeline>
<codeline lineno="4157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>stbi__bit_reverse(next_code[s],s);</highlight></codeline>
<codeline lineno="4158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(j<sp/>&lt;<sp/>(1<sp/>&lt;&lt;<sp/>STBI__ZFAST_BITS))<sp/>{</highlight></codeline>
<codeline lineno="4159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>z-&gt;fast[j]<sp/>=<sp/>fastv;</highlight></codeline>
<codeline lineno="4160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>j<sp/>+=<sp/>(1<sp/>&lt;&lt;<sp/>s);</highlight></codeline>
<codeline lineno="4161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++next_code[s];</highlight></codeline>
<codeline lineno="4164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4165"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4166"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="4167"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4168"><highlight class="normal"></highlight></codeline>
<codeline lineno="4169"><highlight class="normal"></highlight><highlight class="comment">//<sp/>zlib-from-memory<sp/>implementation<sp/>for<sp/>PNG<sp/>reading</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4170"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>because<sp/>PNG<sp/>allows<sp/>splitting<sp/>the<sp/>zlib<sp/>stream<sp/>arbitrarily,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4171"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>and<sp/>it&apos;s<sp/>annoying<sp/>structurally<sp/>to<sp/>have<sp/>PNG<sp/>call<sp/>ZLIB<sp/>call<sp/>PNG,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4172"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>we<sp/>require<sp/>PNG<sp/>read<sp/>all<sp/>the<sp/>IDATs<sp/>and<sp/>combine<sp/>them<sp/>into<sp/>a<sp/>single</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4173"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>memory<sp/>buffer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4174"><highlight class="normal"></highlight></codeline>
<codeline lineno="4175"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4176"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4177"><highlight class="normal"><sp/><sp/><sp/><ref refid="stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d" kindref="member">stbi_uc</ref><sp/>*zbuffer,<sp/>*zbuffer_end;</highlight></codeline>
<codeline lineno="4178"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_bits;</highlight></codeline>
<codeline lineno="4179"><highlight class="normal"><sp/><sp/><sp/>stbi__uint32<sp/>code_buffer;</highlight></codeline>
<codeline lineno="4180"><highlight class="normal"></highlight></codeline>
<codeline lineno="4181"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*zout;</highlight></codeline>
<codeline lineno="4182"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*zout_start;</highlight></codeline>
<codeline lineno="4183"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*zout_end;</highlight></codeline>
<codeline lineno="4184"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/>z_expandable;</highlight></codeline>
<codeline lineno="4185"><highlight class="normal"></highlight></codeline>
<codeline lineno="4186"><highlight class="normal"><sp/><sp/><sp/>stbi__zhuffman<sp/>z_length,<sp/>z_distance;</highlight></codeline>
<codeline lineno="4187"><highlight class="normal">}<sp/>stbi__zbuf;</highlight></codeline>
<codeline lineno="4188"><highlight class="normal"></highlight></codeline>
<codeline lineno="4189"><highlight class="normal">stbi_inline<sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>stbi__zeof(stbi__zbuf<sp/>*z)</highlight></codeline>
<codeline lineno="4190"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4191"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(z-&gt;zbuffer<sp/>&gt;=<sp/>z-&gt;zbuffer_end);</highlight></codeline>
<codeline lineno="4192"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4193"><highlight class="normal"></highlight></codeline>
<codeline lineno="4194"><highlight class="normal">stbi_inline<sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d" kindref="member">stbi_uc</ref><sp/>stbi__zget8(stbi__zbuf<sp/>*z)</highlight></codeline>
<codeline lineno="4195"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4196"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stbi__zeof(z)<sp/>?<sp/>0<sp/>:<sp/>*z-&gt;zbuffer++;</highlight></codeline>
<codeline lineno="4197"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4198"><highlight class="normal"></highlight></codeline>
<codeline lineno="4199"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>stbi__fill_bits(stbi__zbuf<sp/>*z)</highlight></codeline>
<codeline lineno="4200"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4201"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="4202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(z-&gt;code_buffer<sp/>&gt;=<sp/>(1U<sp/>&lt;&lt;<sp/>z-&gt;num_bits))<sp/>{</highlight></codeline>
<codeline lineno="4203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>z-&gt;zbuffer<sp/>=<sp/>z-&gt;zbuffer_end;<sp/><sp/></highlight><highlight class="comment">/*<sp/>treat<sp/>this<sp/>as<sp/>EOF<sp/>so<sp/>we<sp/>fail.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>z-&gt;code_buffer<sp/>|=<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>int)<sp/>stbi__zget8(z)<sp/>&lt;&lt;<sp/>z-&gt;num_bits;</highlight></codeline>
<codeline lineno="4207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>z-&gt;num_bits<sp/>+=<sp/>8;</highlight></codeline>
<codeline lineno="4208"><highlight class="normal"><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(z-&gt;num_bits<sp/>&lt;=<sp/>24);</highlight></codeline>
<codeline lineno="4209"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4210"><highlight class="normal"></highlight></codeline>
<codeline lineno="4211"><highlight class="normal">stbi_inline<sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>stbi__zreceive(stbi__zbuf<sp/>*z,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n)</highlight></codeline>
<codeline lineno="4212"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4213"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k;</highlight></codeline>
<codeline lineno="4214"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(z-&gt;num_bits<sp/>&lt;<sp/>n)<sp/>stbi__fill_bits(z);</highlight></codeline>
<codeline lineno="4215"><highlight class="normal"><sp/><sp/><sp/>k<sp/>=<sp/>z-&gt;code_buffer<sp/>&amp;<sp/>((1<sp/>&lt;&lt;<sp/>n)<sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="4216"><highlight class="normal"><sp/><sp/><sp/>z-&gt;code_buffer<sp/>&gt;&gt;=<sp/>n;</highlight></codeline>
<codeline lineno="4217"><highlight class="normal"><sp/><sp/><sp/>z-&gt;num_bits<sp/>-=<sp/>n;</highlight></codeline>
<codeline lineno="4218"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>k;</highlight></codeline>
<codeline lineno="4219"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4220"><highlight class="normal"></highlight></codeline>
<codeline lineno="4221"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>stbi__zhuffman_decode_slowpath(stbi__zbuf<sp/>*a,<sp/>stbi__zhuffman<sp/>*z)</highlight></codeline>
<codeline lineno="4222"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4223"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>b,s,k;</highlight></codeline>
<codeline lineno="4224"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>not<sp/>resolved<sp/>by<sp/>fast<sp/>table,<sp/>so<sp/>compute<sp/>it<sp/>the<sp/>slow<sp/>way</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4225"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>use<sp/>jpeg<sp/>approach,<sp/>which<sp/>requires<sp/>MSbits<sp/>at<sp/>top</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4226"><highlight class="normal"><sp/><sp/><sp/>k<sp/>=<sp/>stbi__bit_reverse(a-&gt;code_buffer,<sp/>16);</highlight></codeline>
<codeline lineno="4227"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(s=STBI__ZFAST_BITS+1;<sp/>;<sp/>++s)</highlight></codeline>
<codeline lineno="4228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(k<sp/>&lt;<sp/>z-&gt;maxcode[s])</highlight></codeline>
<codeline lineno="4229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4230"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(s<sp/>&gt;=<sp/>16)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;<sp/></highlight><highlight class="comment">//<sp/>invalid<sp/>code!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4231"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>code<sp/>size<sp/>is<sp/>s,<sp/>so:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4232"><highlight class="normal"><sp/><sp/><sp/>b<sp/>=<sp/>(k<sp/>&gt;&gt;<sp/>(16-s))<sp/>-<sp/>z-&gt;firstcode[s]<sp/>+<sp/>z-&gt;firstsymbol[s];</highlight></codeline>
<codeline lineno="4233"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(b<sp/>&gt;=<sp/>STBI__ZNSYMS)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;<sp/></highlight><highlight class="comment">//<sp/>some<sp/>data<sp/>was<sp/>corrupt<sp/>somewhere!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4234"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(z-&gt;size[b]<sp/>!=<sp/>s)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;<sp/><sp/></highlight><highlight class="comment">//<sp/>was<sp/>originally<sp/>an<sp/>assert,<sp/>but<sp/>report<sp/>failure<sp/>instead.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4235"><highlight class="normal"><sp/><sp/><sp/>a-&gt;code_buffer<sp/>&gt;&gt;=<sp/>s;</highlight></codeline>
<codeline lineno="4236"><highlight class="normal"><sp/><sp/><sp/>a-&gt;num_bits<sp/>-=<sp/>s;</highlight></codeline>
<codeline lineno="4237"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>z-&gt;value[b];</highlight></codeline>
<codeline lineno="4238"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4239"><highlight class="normal"></highlight></codeline>
<codeline lineno="4240"><highlight class="normal">stbi_inline<sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>stbi__zhuffman_decode(stbi__zbuf<sp/>*a,<sp/>stbi__zhuffman<sp/>*z)</highlight></codeline>
<codeline lineno="4241"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4242"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>b,s;</highlight></codeline>
<codeline lineno="4243"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(a-&gt;num_bits<sp/>&lt;<sp/>16)<sp/>{</highlight></codeline>
<codeline lineno="4244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(stbi__zeof(a))<sp/>{</highlight></codeline>
<codeline lineno="4245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>report<sp/>error<sp/>for<sp/>unexpected<sp/>end<sp/>of<sp/>data.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stbi__fill_bits(a);</highlight></codeline>
<codeline lineno="4248"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4249"><highlight class="normal"><sp/><sp/><sp/>b<sp/>=<sp/>z-&gt;fast[a-&gt;code_buffer<sp/>&amp;<sp/>STBI__ZFAST_MASK];</highlight></codeline>
<codeline lineno="4250"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(b)<sp/>{</highlight></codeline>
<codeline lineno="4251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>s<sp/>=<sp/>b<sp/>&gt;&gt;<sp/>9;</highlight></codeline>
<codeline lineno="4252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>a-&gt;code_buffer<sp/>&gt;&gt;=<sp/>s;</highlight></codeline>
<codeline lineno="4253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>a-&gt;num_bits<sp/>-=<sp/>s;</highlight></codeline>
<codeline lineno="4254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>b<sp/>&amp;<sp/>511;</highlight></codeline>
<codeline lineno="4255"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4256"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stbi__zhuffman_decode_slowpath(a,<sp/>z);</highlight></codeline>
<codeline lineno="4257"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4258"><highlight class="normal"></highlight></codeline>
<codeline lineno="4259"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>stbi__zexpand(stbi__zbuf<sp/>*z,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*zout,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n)<sp/><sp/></highlight><highlight class="comment">//<sp/>need<sp/>to<sp/>make<sp/>room<sp/>for<sp/>n<sp/>bytes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4260"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4261"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*q;</highlight></codeline>
<codeline lineno="4262"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>cur,<sp/>limit,<sp/>old_limit;</highlight></codeline>
<codeline lineno="4263"><highlight class="normal"><sp/><sp/><sp/>z-&gt;zout<sp/>=<sp/>zout;</highlight></codeline>
<codeline lineno="4264"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!z-&gt;z_expandable)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stbi__err(</highlight><highlight class="stringliteral">&quot;output<sp/>buffer<sp/>limit&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;Corrupt<sp/>PNG&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4265"><highlight class="normal"><sp/><sp/><sp/>cur<sp/><sp/><sp/>=<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>int)<sp/>(z-&gt;zout<sp/>-<sp/>z-&gt;zout_start);</highlight></codeline>
<codeline lineno="4266"><highlight class="normal"><sp/><sp/><sp/>limit<sp/>=<sp/>old_limit<sp/>=<sp/>(unsigned)<sp/>(z-&gt;zout_end<sp/>-<sp/>z-&gt;zout_start);</highlight></codeline>
<codeline lineno="4267"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(UINT_MAX<sp/>-<sp/>cur<sp/>&lt;<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal">)<sp/>n)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stbi__err(</highlight><highlight class="stringliteral">&quot;outofmem&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Out<sp/>of<sp/>memory&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4268"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(cur<sp/>+<sp/>n<sp/>&gt;<sp/>limit)<sp/>{</highlight></codeline>
<codeline lineno="4269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(limit<sp/>&gt;<sp/>UINT_MAX<sp/>/<sp/>2)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stbi__err(</highlight><highlight class="stringliteral">&quot;outofmem&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Out<sp/>of<sp/>memory&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>limit<sp/>*=<sp/>2;</highlight></codeline>
<codeline lineno="4271"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4272"><highlight class="normal"><sp/><sp/><sp/>q<sp/>=<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)<sp/>STBI_REALLOC_SIZED(z-&gt;zout_start,<sp/>old_limit,<sp/>limit);</highlight></codeline>
<codeline lineno="4273"><highlight class="normal"><sp/><sp/><sp/>STBI_NOTUSED(old_limit);</highlight></codeline>
<codeline lineno="4274"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(q<sp/>==<sp/>NULL)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stbi__err(</highlight><highlight class="stringliteral">&quot;outofmem&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Out<sp/>of<sp/>memory&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4275"><highlight class="normal"><sp/><sp/><sp/>z-&gt;zout_start<sp/>=<sp/>q;</highlight></codeline>
<codeline lineno="4276"><highlight class="normal"><sp/><sp/><sp/>z-&gt;zout<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>q<sp/>+<sp/>cur;</highlight></codeline>
<codeline lineno="4277"><highlight class="normal"><sp/><sp/><sp/>z-&gt;zout_end<sp/><sp/><sp/>=<sp/>q<sp/>+<sp/>limit;</highlight></codeline>
<codeline lineno="4278"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="4279"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4280"><highlight class="normal"></highlight></codeline>
<codeline lineno="4281"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>stbi__zlength_base[31]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="4282"><highlight class="normal"><sp/><sp/><sp/>3,4,5,6,7,8,9,10,11,13,</highlight></codeline>
<codeline lineno="4283"><highlight class="normal"><sp/><sp/><sp/>15,17,19,23,27,31,35,43,51,59,</highlight></codeline>
<codeline lineno="4284"><highlight class="normal"><sp/><sp/><sp/>67,83,99,115,131,163,195,227,258,0,0<sp/>};</highlight></codeline>
<codeline lineno="4285"><highlight class="normal"></highlight></codeline>
<codeline lineno="4286"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>stbi__zlength_extra[31]=</highlight></codeline>
<codeline lineno="4287"><highlight class="normal">{<sp/>0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0,0,0<sp/>};</highlight></codeline>
<codeline lineno="4288"><highlight class="normal"></highlight></codeline>
<codeline lineno="4289"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>stbi__zdist_base[32]<sp/>=<sp/>{<sp/>1,2,3,4,5,7,9,13,17,25,33,49,65,97,129,193,</highlight></codeline>
<codeline lineno="4290"><highlight class="normal">257,385,513,769,1025,1537,2049,3073,4097,6145,8193,12289,16385,24577,0,0};</highlight></codeline>
<codeline lineno="4291"><highlight class="normal"></highlight></codeline>
<codeline lineno="4292"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>stbi__zdist_extra[32]<sp/>=</highlight></codeline>
<codeline lineno="4293"><highlight class="normal">{<sp/>0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13};</highlight></codeline>
<codeline lineno="4294"><highlight class="normal"></highlight></codeline>
<codeline lineno="4295"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>stbi__parse_huffman_block(stbi__zbuf<sp/>*a)</highlight></codeline>
<codeline lineno="4296"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4297"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*zout<sp/>=<sp/>a-&gt;zout;</highlight></codeline>
<codeline lineno="4298"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(;;)<sp/>{</highlight></codeline>
<codeline lineno="4299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>z<sp/>=<sp/>stbi__zhuffman_decode(a,<sp/>&amp;a-&gt;z_length);</highlight></codeline>
<codeline lineno="4300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(z<sp/>&lt;<sp/>256)<sp/>{</highlight></codeline>
<codeline lineno="4301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(z<sp/>&lt;<sp/>0)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stbi__err(</highlight><highlight class="stringliteral">&quot;bad<sp/>huffman<sp/>code&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;Corrupt<sp/>PNG&quot;</highlight><highlight class="normal">);<sp/></highlight><highlight class="comment">//<sp/>error<sp/>in<sp/>huffman<sp/>codes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(zout<sp/>&gt;=<sp/>a-&gt;zout_end)<sp/>{</highlight></codeline>
<codeline lineno="4303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!stbi__zexpand(a,<sp/>zout,<sp/>1))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="4304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>zout<sp/>=<sp/>a-&gt;zout;</highlight></codeline>
<codeline lineno="4305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*zout++<sp/>=<sp/>(char)<sp/>z;</highlight></codeline>
<codeline lineno="4307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="4308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d" kindref="member">stbi_uc</ref><sp/>*p;</highlight></codeline>
<codeline lineno="4309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>len,dist;</highlight></codeline>
<codeline lineno="4310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(z<sp/>==<sp/>256)<sp/>{</highlight></codeline>
<codeline lineno="4311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>a-&gt;zout<sp/>=<sp/>zout;</highlight></codeline>
<codeline lineno="4312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="4313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(z<sp/>&gt;=<sp/>286)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stbi__err(</highlight><highlight class="stringliteral">&quot;bad<sp/>huffman<sp/>code&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;Corrupt<sp/>PNG&quot;</highlight><highlight class="normal">);<sp/></highlight><highlight class="comment">//<sp/>per<sp/>DEFLATE,<sp/>length<sp/>codes<sp/>286<sp/>and<sp/>287<sp/>must<sp/>not<sp/>appear<sp/>in<sp/>compressed<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>z<sp/>-=<sp/>257;</highlight></codeline>
<codeline lineno="4316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len<sp/>=<sp/>stbi__zlength_base[z];</highlight></codeline>
<codeline lineno="4317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(stbi__zlength_extra[z])<sp/>len<sp/>+=<sp/>stbi__zreceive(a,<sp/>stbi__zlength_extra[z]);</highlight></codeline>
<codeline lineno="4318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>z<sp/>=<sp/>stbi__zhuffman_decode(a,<sp/>&amp;a-&gt;z_distance);</highlight></codeline>
<codeline lineno="4319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(z<sp/>&lt;<sp/>0<sp/>||<sp/>z<sp/>&gt;=<sp/>30)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stbi__err(</highlight><highlight class="stringliteral">&quot;bad<sp/>huffman<sp/>code&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;Corrupt<sp/>PNG&quot;</highlight><highlight class="normal">);<sp/></highlight><highlight class="comment">//<sp/>per<sp/>DEFLATE,<sp/>distance<sp/>codes<sp/>30<sp/>and<sp/>31<sp/>must<sp/>not<sp/>appear<sp/>in<sp/>compressed<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dist<sp/>=<sp/>stbi__zdist_base[z];</highlight></codeline>
<codeline lineno="4321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(stbi__zdist_extra[z])<sp/>dist<sp/>+=<sp/>stbi__zreceive(a,<sp/>stbi__zdist_extra[z]);</highlight></codeline>
<codeline lineno="4322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(zout<sp/>-<sp/>a-&gt;zout_start<sp/>&lt;<sp/>dist)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stbi__err(</highlight><highlight class="stringliteral">&quot;bad<sp/>dist&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;Corrupt<sp/>PNG&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(zout<sp/>+<sp/>len<sp/>&gt;<sp/>a-&gt;zout_end)<sp/>{</highlight></codeline>
<codeline lineno="4324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!stbi__zexpand(a,<sp/>zout,<sp/>len))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="4325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>zout<sp/>=<sp/>a-&gt;zout;</highlight></codeline>
<codeline lineno="4326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p<sp/>=<sp/>(<ref refid="stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d" kindref="member">stbi_uc</ref><sp/>*)<sp/>(zout<sp/>-<sp/>dist);</highlight></codeline>
<codeline lineno="4328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dist<sp/>==<sp/>1)<sp/>{<sp/></highlight><highlight class="comment">//<sp/>run<sp/>of<sp/>one<sp/>byte;<sp/>common<sp/>in<sp/>images.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d" kindref="member">stbi_uc</ref><sp/>v<sp/>=<sp/>*p;</highlight></codeline>
<codeline lineno="4330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(len)<sp/>{<sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>*zout++<sp/>=<sp/>v;<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(--len);<sp/>}</highlight></codeline>
<codeline lineno="4331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="4332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(len)<sp/>{<sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>*zout++<sp/>=<sp/>*p++;<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(--len);<sp/>}</highlight></codeline>
<codeline lineno="4333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4335"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4336"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4337"><highlight class="normal"></highlight></codeline>
<codeline lineno="4338"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>stbi__compute_huffman_codes(stbi__zbuf<sp/>*a)</highlight></codeline>
<codeline lineno="4339"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4340"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d" kindref="member">stbi_uc</ref><sp/>length_dezigzag[19]<sp/>=<sp/>{<sp/>16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15<sp/>};</highlight></codeline>
<codeline lineno="4341"><highlight class="normal"><sp/><sp/><sp/>stbi__zhuffman<sp/>z_codelength;</highlight></codeline>
<codeline lineno="4342"><highlight class="normal"><sp/><sp/><sp/><ref refid="stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d" kindref="member">stbi_uc</ref><sp/>lencodes[286+32+137];</highlight><highlight class="comment">//padding<sp/>for<sp/>maximum<sp/>single<sp/>op</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4343"><highlight class="normal"><sp/><sp/><sp/><ref refid="stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d" kindref="member">stbi_uc</ref><sp/>codelength_sizes[19];</highlight></codeline>
<codeline lineno="4344"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,n;</highlight></codeline>
<codeline lineno="4345"><highlight class="normal"></highlight></codeline>
<codeline lineno="4346"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>hlit<sp/><sp/>=<sp/>stbi__zreceive(a,5)<sp/>+<sp/>257;</highlight></codeline>
<codeline lineno="4347"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>hdist<sp/>=<sp/>stbi__zreceive(a,5)<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="4348"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>hclen<sp/>=<sp/>stbi__zreceive(a,4)<sp/>+<sp/>4;</highlight></codeline>
<codeline lineno="4349"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ntot<sp/><sp/>=<sp/>hlit<sp/>+<sp/>hdist;</highlight></codeline>
<codeline lineno="4350"><highlight class="normal"></highlight></codeline>
<codeline lineno="4351"><highlight class="normal"><sp/><sp/><sp/>memset(codelength_sizes,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(codelength_sizes));</highlight></codeline>
<codeline lineno="4352"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i<sp/>&lt;<sp/>hclen;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="4353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>s<sp/>=<sp/>stbi__zreceive(a,3);</highlight></codeline>
<codeline lineno="4354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>codelength_sizes[length_dezigzag[i]]<sp/>=<sp/>(<ref refid="stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d" kindref="member">stbi_uc</ref>)<sp/>s;</highlight></codeline>
<codeline lineno="4355"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4356"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!stbi__zbuild_huffman(&amp;z_codelength,<sp/>codelength_sizes,<sp/>19))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="4357"><highlight class="normal"></highlight></codeline>
<codeline lineno="4358"><highlight class="normal"><sp/><sp/><sp/>n<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="4359"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(n<sp/>&lt;<sp/>ntot)<sp/>{</highlight></codeline>
<codeline lineno="4360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>c<sp/>=<sp/>stbi__zhuffman_decode(a,<sp/>&amp;z_codelength);</highlight></codeline>
<codeline lineno="4361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(c<sp/>&lt;<sp/>0<sp/>||<sp/>c<sp/>&gt;=<sp/>19)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stbi__err(</highlight><highlight class="stringliteral">&quot;bad<sp/>codelengths&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Corrupt<sp/>PNG&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(c<sp/>&lt;<sp/>16)</highlight></codeline>
<codeline lineno="4363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lencodes[n++]<sp/>=<sp/>(<ref refid="stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d" kindref="member">stbi_uc</ref>)<sp/>c;</highlight></codeline>
<codeline lineno="4364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="4365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d" kindref="member">stbi_uc</ref><sp/>fill<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="4366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(c<sp/>==<sp/>16)<sp/>{</highlight></codeline>
<codeline lineno="4367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c<sp/>=<sp/>stbi__zreceive(a,2)+3;</highlight></codeline>
<codeline lineno="4368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(n<sp/>==<sp/>0)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stbi__err(</highlight><highlight class="stringliteral">&quot;bad<sp/>codelengths&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Corrupt<sp/>PNG&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fill<sp/>=<sp/>lencodes[n-1];</highlight></codeline>
<codeline lineno="4370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(c<sp/>==<sp/>17)<sp/>{</highlight></codeline>
<codeline lineno="4371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c<sp/>=<sp/>stbi__zreceive(a,3)+3;</highlight></codeline>
<codeline lineno="4372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(c<sp/>==<sp/>18)<sp/>{</highlight></codeline>
<codeline lineno="4373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c<sp/>=<sp/>stbi__zreceive(a,7)+11;</highlight></codeline>
<codeline lineno="4374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="4375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stbi__err(</highlight><highlight class="stringliteral">&quot;bad<sp/>codelengths&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Corrupt<sp/>PNG&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ntot<sp/>-<sp/>n<sp/>&lt;<sp/>c)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stbi__err(</highlight><highlight class="stringliteral">&quot;bad<sp/>codelengths&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Corrupt<sp/>PNG&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memset(lencodes+n,<sp/>fill,<sp/>c);</highlight></codeline>
<codeline lineno="4379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n<sp/>+=<sp/>c;</highlight></codeline>
<codeline lineno="4380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4381"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4382"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(n<sp/>!=<sp/>ntot)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stbi__err(</highlight><highlight class="stringliteral">&quot;bad<sp/>codelengths&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;Corrupt<sp/>PNG&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4383"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!stbi__zbuild_huffman(&amp;a-&gt;z_length,<sp/>lencodes,<sp/>hlit))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="4384"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!stbi__zbuild_huffman(&amp;a-&gt;z_distance,<sp/>lencodes+hlit,<sp/>hdist))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="4385"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="4386"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4387"><highlight class="normal"></highlight></codeline>
<codeline lineno="4388"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>stbi__parse_uncompressed_block(stbi__zbuf<sp/>*a)</highlight></codeline>
<codeline lineno="4389"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4390"><highlight class="normal"><sp/><sp/><sp/><ref refid="stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d" kindref="member">stbi_uc</ref><sp/>header[4];</highlight></codeline>
<codeline lineno="4391"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>len,nlen,k;</highlight></codeline>
<codeline lineno="4392"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(a-&gt;num_bits<sp/>&amp;<sp/>7)</highlight></codeline>
<codeline lineno="4393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stbi__zreceive(a,<sp/>a-&gt;num_bits<sp/>&amp;<sp/>7);<sp/></highlight><highlight class="comment">//<sp/>discard</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4394"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>drain<sp/>the<sp/>bit-packed<sp/>data<sp/>into<sp/>header</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4395"><highlight class="normal"><sp/><sp/><sp/>k<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="4396"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(a-&gt;num_bits<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="4397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>header[k++]<sp/>=<sp/>(<ref refid="stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d" kindref="member">stbi_uc</ref>)<sp/>(a-&gt;code_buffer<sp/>&amp;<sp/>255);<sp/></highlight><highlight class="comment">//<sp/>suppress<sp/>MSVC<sp/>run-time<sp/>check</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>a-&gt;code_buffer<sp/>&gt;&gt;=<sp/>8;</highlight></codeline>
<codeline lineno="4399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>a-&gt;num_bits<sp/>-=<sp/>8;</highlight></codeline>
<codeline lineno="4400"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4401"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(a-&gt;num_bits<sp/>&lt;<sp/>0)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stbi__err(</highlight><highlight class="stringliteral">&quot;zlib<sp/>corrupt&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;Corrupt<sp/>PNG&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4402"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>now<sp/>fill<sp/>header<sp/>the<sp/>normal<sp/>way</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4403"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(k<sp/>&lt;<sp/>4)</highlight></codeline>
<codeline lineno="4404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>header[k++]<sp/>=<sp/>stbi__zget8(a);</highlight></codeline>
<codeline lineno="4405"><highlight class="normal"><sp/><sp/><sp/>len<sp/><sp/>=<sp/>header[1]<sp/>*<sp/>256<sp/>+<sp/>header[0];</highlight></codeline>
<codeline lineno="4406"><highlight class="normal"><sp/><sp/><sp/>nlen<sp/>=<sp/>header[3]<sp/>*<sp/>256<sp/>+<sp/>header[2];</highlight></codeline>
<codeline lineno="4407"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nlen<sp/>!=<sp/>(len<sp/>^<sp/>0xffff))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stbi__err(</highlight><highlight class="stringliteral">&quot;zlib<sp/>corrupt&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;Corrupt<sp/>PNG&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4408"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(a-&gt;zbuffer<sp/>+<sp/>len<sp/>&gt;<sp/>a-&gt;zbuffer_end)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stbi__err(</highlight><highlight class="stringliteral">&quot;read<sp/>past<sp/>buffer&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;Corrupt<sp/>PNG&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4409"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(a-&gt;zout<sp/>+<sp/>len<sp/>&gt;<sp/>a-&gt;zout_end)</highlight></codeline>
<codeline lineno="4410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!stbi__zexpand(a,<sp/>a-&gt;zout,<sp/>len))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="4411"><highlight class="normal"><sp/><sp/><sp/>memcpy(a-&gt;zout,<sp/>a-&gt;zbuffer,<sp/>len);</highlight></codeline>
<codeline lineno="4412"><highlight class="normal"><sp/><sp/><sp/>a-&gt;zbuffer<sp/>+=<sp/>len;</highlight></codeline>
<codeline lineno="4413"><highlight class="normal"><sp/><sp/><sp/>a-&gt;zout<sp/>+=<sp/>len;</highlight></codeline>
<codeline lineno="4414"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="4415"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4416"><highlight class="normal"></highlight></codeline>
<codeline lineno="4417"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>stbi__parse_zlib_header(stbi__zbuf<sp/>*a)</highlight></codeline>
<codeline lineno="4418"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4419"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>cmf<sp/><sp/><sp/>=<sp/>stbi__zget8(a);</highlight></codeline>
<codeline lineno="4420"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>cm<sp/><sp/><sp/><sp/>=<sp/>cmf<sp/>&amp;<sp/>15;</highlight></codeline>
<codeline lineno="4421"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>int<sp/>cinfo<sp/>=<sp/>cmf<sp/>&gt;&gt;<sp/>4;<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4422"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>flg<sp/><sp/><sp/>=<sp/>stbi__zget8(a);</highlight></codeline>
<codeline lineno="4423"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(stbi__zeof(a))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stbi__err(</highlight><highlight class="stringliteral">&quot;bad<sp/>zlib<sp/>header&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;Corrupt<sp/>PNG&quot;</highlight><highlight class="normal">);<sp/></highlight><highlight class="comment">//<sp/>zlib<sp/>spec</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4424"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((cmf*256+flg)<sp/>%<sp/>31<sp/>!=<sp/>0)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stbi__err(</highlight><highlight class="stringliteral">&quot;bad<sp/>zlib<sp/>header&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;Corrupt<sp/>PNG&quot;</highlight><highlight class="normal">);<sp/></highlight><highlight class="comment">//<sp/>zlib<sp/>spec</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4425"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(flg<sp/>&amp;<sp/>32)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stbi__err(</highlight><highlight class="stringliteral">&quot;no<sp/>preset<sp/>dict&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;Corrupt<sp/>PNG&quot;</highlight><highlight class="normal">);<sp/></highlight><highlight class="comment">//<sp/>preset<sp/>dictionary<sp/>not<sp/>allowed<sp/>in<sp/>png</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4426"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cm<sp/>!=<sp/>8)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stbi__err(</highlight><highlight class="stringliteral">&quot;bad<sp/>compression&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;Corrupt<sp/>PNG&quot;</highlight><highlight class="normal">);<sp/></highlight><highlight class="comment">//<sp/>DEFLATE<sp/>required<sp/>for<sp/>png</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4427"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>window<sp/>=<sp/>1<sp/>&lt;&lt;<sp/>(8<sp/>+<sp/>cinfo)...<sp/>but<sp/>who<sp/>cares,<sp/>we<sp/>fully<sp/>buffer<sp/>output</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4428"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="4429"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4430"><highlight class="normal"></highlight></codeline>
<codeline lineno="4431"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d" kindref="member">stbi_uc</ref><sp/>stbi__zdefault_length[STBI__ZNSYMS]<sp/>=</highlight></codeline>
<codeline lineno="4432"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4433"><highlight class="normal"><sp/><sp/><sp/>8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,<sp/>8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,</highlight></codeline>
<codeline lineno="4434"><highlight class="normal"><sp/><sp/><sp/>8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,<sp/>8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,</highlight></codeline>
<codeline lineno="4435"><highlight class="normal"><sp/><sp/><sp/>8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,<sp/>8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,</highlight></codeline>
<codeline lineno="4436"><highlight class="normal"><sp/><sp/><sp/>8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,<sp/>8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,</highlight></codeline>
<codeline lineno="4437"><highlight class="normal"><sp/><sp/><sp/>8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,<sp/>9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,</highlight></codeline>
<codeline lineno="4438"><highlight class="normal"><sp/><sp/><sp/>9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,<sp/>9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,</highlight></codeline>
<codeline lineno="4439"><highlight class="normal"><sp/><sp/><sp/>9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,<sp/>9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,</highlight></codeline>
<codeline lineno="4440"><highlight class="normal"><sp/><sp/><sp/>9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,<sp/>9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,</highlight></codeline>
<codeline lineno="4441"><highlight class="normal"><sp/><sp/><sp/>7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,<sp/>7,7,7,7,7,7,7,7,8,8,8,8,8,8,8,8</highlight></codeline>
<codeline lineno="4442"><highlight class="normal">};</highlight></codeline>
<codeline lineno="4443"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d" kindref="member">stbi_uc</ref><sp/>stbi__zdefault_distance[32]<sp/>=</highlight></codeline>
<codeline lineno="4444"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4445"><highlight class="normal"><sp/><sp/><sp/>5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5</highlight></codeline>
<codeline lineno="4446"><highlight class="normal">};</highlight></codeline>
<codeline lineno="4447"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="4448"><highlight class="comment">Init<sp/>algorithm:</highlight></codeline>
<codeline lineno="4449"><highlight class="comment">{</highlight></codeline>
<codeline lineno="4450"><highlight class="comment"><sp/><sp/><sp/>int<sp/>i;<sp/><sp/><sp/>//<sp/>use<sp/>&lt;=<sp/>to<sp/>match<sp/>clearly<sp/>with<sp/>spec</highlight></codeline>
<codeline lineno="4451"><highlight class="comment"><sp/><sp/><sp/>for<sp/>(i=0;<sp/>i<sp/>&lt;=<sp/>143;<sp/>++i)<sp/><sp/><sp/><sp/><sp/>stbi__zdefault_length[i]<sp/><sp/><sp/>=<sp/>8;</highlight></codeline>
<codeline lineno="4452"><highlight class="comment"><sp/><sp/><sp/>for<sp/>(<sp/><sp/><sp/>;<sp/>i<sp/>&lt;=<sp/>255;<sp/>++i)<sp/><sp/><sp/><sp/><sp/>stbi__zdefault_length[i]<sp/><sp/><sp/>=<sp/>9;</highlight></codeline>
<codeline lineno="4453"><highlight class="comment"><sp/><sp/><sp/>for<sp/>(<sp/><sp/><sp/>;<sp/>i<sp/>&lt;=<sp/>279;<sp/>++i)<sp/><sp/><sp/><sp/><sp/>stbi__zdefault_length[i]<sp/><sp/><sp/>=<sp/>7;</highlight></codeline>
<codeline lineno="4454"><highlight class="comment"><sp/><sp/><sp/>for<sp/>(<sp/><sp/><sp/>;<sp/>i<sp/>&lt;=<sp/>287;<sp/>++i)<sp/><sp/><sp/><sp/><sp/>stbi__zdefault_length[i]<sp/><sp/><sp/>=<sp/>8;</highlight></codeline>
<codeline lineno="4455"><highlight class="comment"></highlight></codeline>
<codeline lineno="4456"><highlight class="comment"><sp/><sp/><sp/>for<sp/>(i=0;<sp/>i<sp/>&lt;=<sp/><sp/>31;<sp/>++i)<sp/><sp/><sp/><sp/><sp/>stbi__zdefault_distance[i]<sp/>=<sp/>5;</highlight></codeline>
<codeline lineno="4457"><highlight class="comment">}</highlight></codeline>
<codeline lineno="4458"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4459"><highlight class="normal"></highlight></codeline>
<codeline lineno="4460"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>stbi__parse_zlib(stbi__zbuf<sp/>*a,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>parse_header)</highlight></codeline>
<codeline lineno="4461"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4462"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal">,<sp/>type;</highlight></codeline>
<codeline lineno="4463"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parse_header)</highlight></codeline>
<codeline lineno="4464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!stbi__parse_zlib_header(a))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="4465"><highlight class="normal"><sp/><sp/><sp/>a-&gt;num_bits<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="4466"><highlight class="normal"><sp/><sp/><sp/>a-&gt;code_buffer<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="4467"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="4468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/>=<sp/>stbi__zreceive(a,1);</highlight></codeline>
<codeline lineno="4469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>type<sp/>=<sp/>stbi__zreceive(a,2);</highlight></codeline>
<codeline lineno="4470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(type<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="4471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!stbi__parse_uncompressed_block(a))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="4472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(type<sp/>==<sp/>3)<sp/>{</highlight></codeline>
<codeline lineno="4473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="4474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="4475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(type<sp/>==<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="4476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>use<sp/>fixed<sp/>code<sp/>lengths</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!stbi__zbuild_huffman(&amp;a-&gt;z_length<sp/><sp/>,<sp/>stbi__zdefault_length<sp/><sp/>,<sp/>STBI__ZNSYMS))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="4478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!stbi__zbuild_huffman(&amp;a-&gt;z_distance,<sp/>stbi__zdefault_distance,<sp/><sp/>32))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="4479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="4480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!stbi__compute_huffman_codes(a))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="4481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!stbi__parse_huffman_block(a))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="4483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4484"><highlight class="normal"><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(!</highlight><highlight class="keyword">final</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4485"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="4486"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4487"><highlight class="normal"></highlight></codeline>
<codeline lineno="4488"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>stbi__do_zlib(stbi__zbuf<sp/>*a,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*obuf,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>olen,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>exp,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>parse_header)</highlight></codeline>
<codeline lineno="4489"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4490"><highlight class="normal"><sp/><sp/><sp/>a-&gt;zout_start<sp/>=<sp/>obuf;</highlight></codeline>
<codeline lineno="4491"><highlight class="normal"><sp/><sp/><sp/>a-&gt;zout<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>obuf;</highlight></codeline>
<codeline lineno="4492"><highlight class="normal"><sp/><sp/><sp/>a-&gt;zout_end<sp/><sp/><sp/>=<sp/>obuf<sp/>+<sp/>olen;</highlight></codeline>
<codeline lineno="4493"><highlight class="normal"><sp/><sp/><sp/>a-&gt;z_expandable<sp/>=<sp/>exp;</highlight></codeline>
<codeline lineno="4494"><highlight class="normal"></highlight></codeline>
<codeline lineno="4495"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stbi__parse_zlib(a,<sp/>parse_header);</highlight></codeline>
<codeline lineno="4496"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4497"><highlight class="normal"></highlight></codeline>
<codeline lineno="4498"><highlight class="normal"><ref refid="stb__image_8h_1a2d9ec9850cd12aefe7641b456266a4c2" kindref="member">STBIDEF</ref><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="stb__image_8h_1aaaa17a529bec51403cc23dc2e7c36d79" kindref="member">stbi_zlib_decode_malloc_guesssize</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*buffer,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>len,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>initial_size,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*outlen)</highlight></codeline>
<codeline lineno="4499"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4500"><highlight class="normal"><sp/><sp/><sp/>stbi__zbuf<sp/>a;</highlight></codeline>
<codeline lineno="4501"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*p<sp/>=<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)<sp/>stbi__malloc(initial_size);</highlight></codeline>
<codeline lineno="4502"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p<sp/>==<sp/>NULL)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="4503"><highlight class="normal"><sp/><sp/><sp/>a.zbuffer<sp/>=<sp/>(<ref refid="stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d" kindref="member">stbi_uc</ref><sp/>*)<sp/>buffer;</highlight></codeline>
<codeline lineno="4504"><highlight class="normal"><sp/><sp/><sp/>a.zbuffer_end<sp/>=<sp/>(<ref refid="stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d" kindref="member">stbi_uc</ref><sp/>*)<sp/>buffer<sp/>+<sp/>len;</highlight></codeline>
<codeline lineno="4505"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(stbi__do_zlib(&amp;a,<sp/>p,<sp/>initial_size,<sp/>1,<sp/>1))<sp/>{</highlight></codeline>
<codeline lineno="4506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(outlen)<sp/>*outlen<sp/>=<sp/>(int)<sp/>(a.zout<sp/>-<sp/>a.zout_start);</highlight></codeline>
<codeline lineno="4507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>a.zout_start;</highlight></codeline>
<codeline lineno="4508"><highlight class="normal"><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="4509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>STBI_FREE(a.zout_start);</highlight></codeline>
<codeline lineno="4510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="4511"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4512"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4513"><highlight class="normal"></highlight></codeline>
<codeline lineno="4514"><highlight class="normal"><ref refid="stb__image_8h_1a2d9ec9850cd12aefe7641b456266a4c2" kindref="member">STBIDEF</ref><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="stb__image_8h_1a4919b67b12e0e3acc5301f185ca77e2e" kindref="member">stbi_zlib_decode_malloc</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*buffer,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>len,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*outlen)</highlight></codeline>
<codeline lineno="4515"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4516"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="stb__image_8h_1aaaa17a529bec51403cc23dc2e7c36d79" kindref="member">stbi_zlib_decode_malloc_guesssize</ref>(buffer,<sp/>len,<sp/>16384,<sp/>outlen);</highlight></codeline>
<codeline lineno="4517"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4518"><highlight class="normal"></highlight></codeline>
<codeline lineno="4519"><highlight class="normal"><ref refid="stb__image_8h_1a2d9ec9850cd12aefe7641b456266a4c2" kindref="member">STBIDEF</ref><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="stb__image_8h_1a038b0e741859a482b8b9d60167e54d27" kindref="member">stbi_zlib_decode_malloc_guesssize_headerflag</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*buffer,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>len,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>initial_size,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*outlen,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>parse_header)</highlight></codeline>
<codeline lineno="4520"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4521"><highlight class="normal"><sp/><sp/><sp/>stbi__zbuf<sp/>a;</highlight></codeline>
<codeline lineno="4522"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*p<sp/>=<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)<sp/>stbi__malloc(initial_size);</highlight></codeline>
<codeline lineno="4523"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p<sp/>==<sp/>NULL)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="4524"><highlight class="normal"><sp/><sp/><sp/>a.zbuffer<sp/>=<sp/>(<ref refid="stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d" kindref="member">stbi_uc</ref><sp/>*)<sp/>buffer;</highlight></codeline>
<codeline lineno="4525"><highlight class="normal"><sp/><sp/><sp/>a.zbuffer_end<sp/>=<sp/>(<ref refid="stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d" kindref="member">stbi_uc</ref><sp/>*)<sp/>buffer<sp/>+<sp/>len;</highlight></codeline>
<codeline lineno="4526"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(stbi__do_zlib(&amp;a,<sp/>p,<sp/>initial_size,<sp/>1,<sp/>parse_header))<sp/>{</highlight></codeline>
<codeline lineno="4527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(outlen)<sp/>*outlen<sp/>=<sp/>(int)<sp/>(a.zout<sp/>-<sp/>a.zout_start);</highlight></codeline>
<codeline lineno="4528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>a.zout_start;</highlight></codeline>
<codeline lineno="4529"><highlight class="normal"><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="4530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>STBI_FREE(a.zout_start);</highlight></codeline>
<codeline lineno="4531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="4532"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4533"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4534"><highlight class="normal"></highlight></codeline>
<codeline lineno="4535"><highlight class="normal"><ref refid="stb__image_8h_1a2d9ec9850cd12aefe7641b456266a4c2" kindref="member">STBIDEF</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="stb__image_8h_1ae8447830c49bc17f8491e12c1f0ded48" kindref="member">stbi_zlib_decode_buffer</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*obuffer,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>olen,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*ibuffer,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ilen)</highlight></codeline>
<codeline lineno="4536"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4537"><highlight class="normal"><sp/><sp/><sp/>stbi__zbuf<sp/>a;</highlight></codeline>
<codeline lineno="4538"><highlight class="normal"><sp/><sp/><sp/>a.zbuffer<sp/>=<sp/>(<ref refid="stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d" kindref="member">stbi_uc</ref><sp/>*)<sp/>ibuffer;</highlight></codeline>
<codeline lineno="4539"><highlight class="normal"><sp/><sp/><sp/>a.zbuffer_end<sp/>=<sp/>(<ref refid="stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d" kindref="member">stbi_uc</ref><sp/>*)<sp/>ibuffer<sp/>+<sp/>ilen;</highlight></codeline>
<codeline lineno="4540"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(stbi__do_zlib(&amp;a,<sp/>obuffer,<sp/>olen,<sp/>0,<sp/>1))</highlight></codeline>
<codeline lineno="4541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<sp/>(a.zout<sp/>-<sp/>a.zout_start);</highlight></codeline>
<codeline lineno="4542"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="4544"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4545"><highlight class="normal"></highlight></codeline>
<codeline lineno="4546"><highlight class="normal"><ref refid="stb__image_8h_1a2d9ec9850cd12aefe7641b456266a4c2" kindref="member">STBIDEF</ref><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="stb__image_8h_1a7fbd65c83495f13f22469fe493775739" kindref="member">stbi_zlib_decode_noheader_malloc</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*buffer,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>len,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*outlen)</highlight></codeline>
<codeline lineno="4547"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4548"><highlight class="normal"><sp/><sp/><sp/>stbi__zbuf<sp/>a;</highlight></codeline>
<codeline lineno="4549"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*p<sp/>=<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)<sp/>stbi__malloc(16384);</highlight></codeline>
<codeline lineno="4550"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p<sp/>==<sp/>NULL)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="4551"><highlight class="normal"><sp/><sp/><sp/>a.zbuffer<sp/>=<sp/>(<ref refid="stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d" kindref="member">stbi_uc</ref><sp/>*)<sp/>buffer;</highlight></codeline>
<codeline lineno="4552"><highlight class="normal"><sp/><sp/><sp/>a.zbuffer_end<sp/>=<sp/>(<ref refid="stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d" kindref="member">stbi_uc</ref><sp/>*)<sp/>buffer+len;</highlight></codeline>
<codeline lineno="4553"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(stbi__do_zlib(&amp;a,<sp/>p,<sp/>16384,<sp/>1,<sp/>0))<sp/>{</highlight></codeline>
<codeline lineno="4554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(outlen)<sp/>*outlen<sp/>=<sp/>(int)<sp/>(a.zout<sp/>-<sp/>a.zout_start);</highlight></codeline>
<codeline lineno="4555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>a.zout_start;</highlight></codeline>
<codeline lineno="4556"><highlight class="normal"><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="4557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>STBI_FREE(a.zout_start);</highlight></codeline>
<codeline lineno="4558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="4559"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4560"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4561"><highlight class="normal"></highlight></codeline>
<codeline lineno="4562"><highlight class="normal"><ref refid="stb__image_8h_1a2d9ec9850cd12aefe7641b456266a4c2" kindref="member">STBIDEF</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="stb__image_8h_1a0d12efc011adfff7521f3b924feb0b0e" kindref="member">stbi_zlib_decode_noheader_buffer</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*obuffer,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>olen,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*ibuffer,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ilen)</highlight></codeline>
<codeline lineno="4563"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4564"><highlight class="normal"><sp/><sp/><sp/>stbi__zbuf<sp/>a;</highlight></codeline>
<codeline lineno="4565"><highlight class="normal"><sp/><sp/><sp/>a.zbuffer<sp/>=<sp/>(<ref refid="stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d" kindref="member">stbi_uc</ref><sp/>*)<sp/>ibuffer;</highlight></codeline>
<codeline lineno="4566"><highlight class="normal"><sp/><sp/><sp/>a.zbuffer_end<sp/>=<sp/>(<ref refid="stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d" kindref="member">stbi_uc</ref><sp/>*)<sp/>ibuffer<sp/>+<sp/>ilen;</highlight></codeline>
<codeline lineno="4567"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(stbi__do_zlib(&amp;a,<sp/>obuffer,<sp/>olen,<sp/>0,<sp/>0))</highlight></codeline>
<codeline lineno="4568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<sp/>(a.zout<sp/>-<sp/>a.zout_start);</highlight></codeline>
<codeline lineno="4569"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="4571"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4572"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4573"><highlight class="normal"></highlight></codeline>
<codeline lineno="4574"><highlight class="normal"></highlight><highlight class="comment">//<sp/>public<sp/>domain<sp/>&quot;baseline&quot;<sp/>PNG<sp/>decoder<sp/><sp/><sp/>v0.10<sp/><sp/>Sean<sp/>Barrett<sp/>2006-11-18</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4575"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>simple<sp/>implementation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4576"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>-<sp/>only<sp/>8-bit<sp/>samples</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4577"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>-<sp/>no<sp/>CRC<sp/>checking</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4578"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>-<sp/>allocates<sp/>lots<sp/>of<sp/>intermediate<sp/>memory</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4579"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/>avoids<sp/>problem<sp/>of<sp/>streaming<sp/>data<sp/>between<sp/>subsystems</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4580"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/>avoids<sp/>explicit<sp/>window<sp/>management</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4581"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>performance</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4582"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>-<sp/>uses<sp/>stb_zlib,<sp/>a<sp/>PD<sp/>zlib<sp/>implementation<sp/>with<sp/>fast<sp/>huffman<sp/>decoding</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4583"><highlight class="normal"></highlight></codeline>
<codeline lineno="4584"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>STBI_NO_PNG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4585"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4586"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4587"><highlight class="normal"><sp/><sp/><sp/>stbi__uint32<sp/>length;</highlight></codeline>
<codeline lineno="4588"><highlight class="normal"><sp/><sp/><sp/>stbi__uint32<sp/>type;</highlight></codeline>
<codeline lineno="4589"><highlight class="normal">}<sp/>stbi__pngchunk;</highlight></codeline>
<codeline lineno="4590"><highlight class="normal"></highlight></codeline>
<codeline lineno="4591"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>stbi__pngchunk<sp/>stbi__get_chunk_header(stbi__context<sp/>*s)</highlight></codeline>
<codeline lineno="4592"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4593"><highlight class="normal"><sp/><sp/><sp/>stbi__pngchunk<sp/>c;</highlight></codeline>
<codeline lineno="4594"><highlight class="normal"><sp/><sp/><sp/>c.length<sp/>=<sp/>stbi__get32be(s);</highlight></codeline>
<codeline lineno="4595"><highlight class="normal"><sp/><sp/><sp/>c.type<sp/><sp/><sp/>=<sp/>stbi__get32be(s);</highlight></codeline>
<codeline lineno="4596"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>c;</highlight></codeline>
<codeline lineno="4597"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4598"><highlight class="normal"></highlight></codeline>
<codeline lineno="4599"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>stbi__check_png_header(stbi__context<sp/>*s)</highlight></codeline>
<codeline lineno="4600"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4601"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d" kindref="member">stbi_uc</ref><sp/>png_sig[8]<sp/>=<sp/>{<sp/>137,80,78,71,13,10,26,10<sp/>};</highlight></codeline>
<codeline lineno="4602"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="4603"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i<sp/>&lt;<sp/>8;<sp/>++i)</highlight></codeline>
<codeline lineno="4604"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(stbi__get8(s)<sp/>!=<sp/>png_sig[i])<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stbi__err(</highlight><highlight class="stringliteral">&quot;bad<sp/>png<sp/>sig&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;Not<sp/>a<sp/>PNG&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4605"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="4606"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4607"><highlight class="normal"></highlight></codeline>
<codeline lineno="4608"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4609"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4610"><highlight class="normal"><sp/><sp/><sp/>stbi__context<sp/>*s;</highlight></codeline>
<codeline lineno="4611"><highlight class="normal"><sp/><sp/><sp/><ref refid="stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d" kindref="member">stbi_uc</ref><sp/>*idata,<sp/>*expanded,<sp/>*out;</highlight></codeline>
<codeline lineno="4612"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>depth;</highlight></codeline>
<codeline lineno="4613"><highlight class="normal">}<sp/>stbi__png;</highlight></codeline>
<codeline lineno="4614"><highlight class="normal"></highlight></codeline>
<codeline lineno="4615"><highlight class="normal"></highlight></codeline>
<codeline lineno="4616"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="4617"><highlight class="normal"><sp/><sp/><sp/>STBI__F_none=0,</highlight></codeline>
<codeline lineno="4618"><highlight class="normal"><sp/><sp/><sp/>STBI__F_sub=1,</highlight></codeline>
<codeline lineno="4619"><highlight class="normal"><sp/><sp/><sp/>STBI__F_up=2,</highlight></codeline>
<codeline lineno="4620"><highlight class="normal"><sp/><sp/><sp/>STBI__F_avg=3,</highlight></codeline>
<codeline lineno="4621"><highlight class="normal"><sp/><sp/><sp/>STBI__F_paeth=4,</highlight></codeline>
<codeline lineno="4622"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>synthetic<sp/>filters<sp/>used<sp/>for<sp/>first<sp/>scanline<sp/>to<sp/>avoid<sp/>needing<sp/>a<sp/>dummy<sp/>row<sp/>of<sp/>0s</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4623"><highlight class="normal"><sp/><sp/><sp/>STBI__F_avg_first,</highlight></codeline>
<codeline lineno="4624"><highlight class="normal"><sp/><sp/><sp/>STBI__F_paeth_first</highlight></codeline>
<codeline lineno="4625"><highlight class="normal">};</highlight></codeline>
<codeline lineno="4626"><highlight class="normal"></highlight></codeline>
<codeline lineno="4627"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d" kindref="member">stbi_uc</ref><sp/>first_row_filter[5]<sp/>=</highlight></codeline>
<codeline lineno="4628"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4629"><highlight class="normal"><sp/><sp/><sp/>STBI__F_none,</highlight></codeline>
<codeline lineno="4630"><highlight class="normal"><sp/><sp/><sp/>STBI__F_sub,</highlight></codeline>
<codeline lineno="4631"><highlight class="normal"><sp/><sp/><sp/>STBI__F_none,</highlight></codeline>
<codeline lineno="4632"><highlight class="normal"><sp/><sp/><sp/>STBI__F_avg_first,</highlight></codeline>
<codeline lineno="4633"><highlight class="normal"><sp/><sp/><sp/>STBI__F_paeth_first</highlight></codeline>
<codeline lineno="4634"><highlight class="normal">};</highlight></codeline>
<codeline lineno="4635"><highlight class="normal"></highlight></codeline>
<codeline lineno="4636"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>stbi__paeth(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>a,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>b,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>c)</highlight></codeline>
<codeline lineno="4637"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4638"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>p<sp/>=<sp/>a<sp/>+<sp/>b<sp/>-<sp/>c;</highlight></codeline>
<codeline lineno="4639"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pa<sp/>=<sp/>abs(p-a);</highlight></codeline>
<codeline lineno="4640"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pb<sp/>=<sp/>abs(p-b);</highlight></codeline>
<codeline lineno="4641"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pc<sp/>=<sp/>abs(p-c);</highlight></codeline>
<codeline lineno="4642"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pa<sp/>&lt;=<sp/>pb<sp/>&amp;&amp;<sp/>pa<sp/>&lt;=<sp/>pc)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>a;</highlight></codeline>
<codeline lineno="4643"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pb<sp/>&lt;=<sp/>pc)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>b;</highlight></codeline>
<codeline lineno="4644"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>c;</highlight></codeline>
<codeline lineno="4645"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4646"><highlight class="normal"></highlight></codeline>
<codeline lineno="4647"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d" kindref="member">stbi_uc</ref><sp/>stbi__depth_scale_table[9]<sp/>=<sp/>{<sp/>0,<sp/>0xff,<sp/>0x55,<sp/>0,<sp/>0x11,<sp/>0,0,0,<sp/>0x01<sp/>};</highlight></codeline>
<codeline lineno="4648"><highlight class="normal"></highlight></codeline>
<codeline lineno="4649"><highlight class="normal"></highlight><highlight class="comment">//<sp/>create<sp/>the<sp/>png<sp/>data<sp/>from<sp/>post-deflated<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4650"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>stbi__create_png_image_raw(stbi__png<sp/>*a,<sp/><ref refid="stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d" kindref="member">stbi_uc</ref><sp/>*raw,<sp/>stbi__uint32<sp/>raw_len,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>out_n,<sp/>stbi__uint32<sp/>x,<sp/>stbi__uint32<sp/>y,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>depth,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>color)</highlight></codeline>
<codeline lineno="4651"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4652"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bytes<sp/>=<sp/>(depth<sp/>==<sp/>16?<sp/>2<sp/>:<sp/>1);</highlight></codeline>
<codeline lineno="4653"><highlight class="normal"><sp/><sp/><sp/>stbi__context<sp/>*s<sp/>=<sp/>a-&gt;s;</highlight></codeline>
<codeline lineno="4654"><highlight class="normal"><sp/><sp/><sp/>stbi__uint32<sp/>i,j,stride<sp/>=<sp/>x*out_n*bytes;</highlight></codeline>
<codeline lineno="4655"><highlight class="normal"><sp/><sp/><sp/>stbi__uint32<sp/>img_len,<sp/>img_width_bytes;</highlight></codeline>
<codeline lineno="4656"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k;</highlight></codeline>
<codeline lineno="4657"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>img_n<sp/>=<sp/>s-&gt;img_n;<sp/></highlight><highlight class="comment">//<sp/>copy<sp/>it<sp/>into<sp/>a<sp/>local<sp/>for<sp/>later</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4658"><highlight class="normal"></highlight></codeline>
<codeline lineno="4659"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>output_bytes<sp/>=<sp/>out_n*bytes;</highlight></codeline>
<codeline lineno="4660"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>filter_bytes<sp/>=<sp/>img_n*bytes;</highlight></codeline>
<codeline lineno="4661"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>width<sp/>=<sp/>x;</highlight></codeline>
<codeline lineno="4662"><highlight class="normal"></highlight></codeline>
<codeline lineno="4663"><highlight class="normal"><sp/><sp/><sp/>STBI_ASSERT(out_n<sp/>==<sp/>s-&gt;img_n<sp/>||<sp/>out_n<sp/>==<sp/>s-&gt;img_n+1);</highlight></codeline>
<codeline lineno="4664"><highlight class="normal"><sp/><sp/><sp/>a-&gt;out<sp/>=<sp/>(<ref refid="stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d" kindref="member">stbi_uc</ref><sp/>*)<sp/>stbi__malloc_mad3(x,<sp/>y,<sp/>output_bytes,<sp/>0);<sp/></highlight><highlight class="comment">//<sp/>extra<sp/>bytes<sp/>to<sp/>write<sp/>off<sp/>the<sp/>end<sp/>into</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4665"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!a-&gt;out)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stbi__err(</highlight><highlight class="stringliteral">&quot;outofmem&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Out<sp/>of<sp/>memory&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4666"><highlight class="normal"></highlight></codeline>
<codeline lineno="4667"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!stbi__mad3sizes_valid(img_n,<sp/>x,<sp/>depth,<sp/>7))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stbi__err(</highlight><highlight class="stringliteral">&quot;too<sp/>large&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Corrupt<sp/>PNG&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4668"><highlight class="normal"><sp/><sp/><sp/>img_width_bytes<sp/>=<sp/>(((img_n<sp/>*<sp/>x<sp/>*<sp/>depth)<sp/>+<sp/>7)<sp/>&gt;&gt;<sp/>3);</highlight></codeline>
<codeline lineno="4669"><highlight class="normal"><sp/><sp/><sp/>img_len<sp/>=<sp/>(img_width_bytes<sp/>+<sp/>1)<sp/>*<sp/>y;</highlight></codeline>
<codeline lineno="4670"><highlight class="normal"></highlight></codeline>
<codeline lineno="4671"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>we<sp/>used<sp/>to<sp/>check<sp/>for<sp/>exact<sp/>match<sp/>between<sp/>raw_len<sp/>and<sp/>img_len<sp/>on<sp/>non-interlaced<sp/>PNGs,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4672"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>but<sp/>issue<sp/>#276<sp/>reported<sp/>a<sp/>PNG<sp/>in<sp/>the<sp/>wild<sp/>that<sp/>had<sp/>extra<sp/>data<sp/>at<sp/>the<sp/>end<sp/>(all<sp/>zeros),</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4673"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>so<sp/>just<sp/>check<sp/>for<sp/>raw_len<sp/>&lt;<sp/>img_len<sp/>always.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4674"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(raw_len<sp/>&lt;<sp/>img_len)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stbi__err(</highlight><highlight class="stringliteral">&quot;not<sp/>enough<sp/>pixels&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;Corrupt<sp/>PNG&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4675"><highlight class="normal"></highlight></codeline>
<codeline lineno="4676"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(j=0;<sp/>j<sp/>&lt;<sp/>y;<sp/>++j)<sp/>{</highlight></codeline>
<codeline lineno="4677"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d" kindref="member">stbi_uc</ref><sp/>*cur<sp/>=<sp/>a-&gt;out<sp/>+<sp/>stride*j;</highlight></codeline>
<codeline lineno="4678"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d" kindref="member">stbi_uc</ref><sp/>*prior;</highlight></codeline>
<codeline lineno="4679"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>filter<sp/>=<sp/>*raw++;</highlight></codeline>
<codeline lineno="4680"><highlight class="normal"></highlight></codeline>
<codeline lineno="4681"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(filter<sp/>&gt;<sp/>4)</highlight></codeline>
<codeline lineno="4682"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stbi__err(</highlight><highlight class="stringliteral">&quot;invalid<sp/>filter&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;Corrupt<sp/>PNG&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4683"><highlight class="normal"></highlight></codeline>
<codeline lineno="4684"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(depth<sp/>&lt;<sp/>8)<sp/>{</highlight></codeline>
<codeline lineno="4685"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(img_width_bytes<sp/>&gt;<sp/>x)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stbi__err(</highlight><highlight class="stringliteral">&quot;invalid<sp/>width&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;Corrupt<sp/>PNG&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4686"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cur<sp/>+=<sp/>x*out_n<sp/>-<sp/>img_width_bytes;<sp/></highlight><highlight class="comment">//<sp/>store<sp/>output<sp/>to<sp/>the<sp/>rightmost<sp/>img_len<sp/>bytes,<sp/>so<sp/>we<sp/>can<sp/>decode<sp/>in<sp/>place</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4687"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>filter_bytes<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="4688"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>width<sp/>=<sp/>img_width_bytes;</highlight></codeline>
<codeline lineno="4689"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4690"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>prior<sp/>=<sp/>cur<sp/>-<sp/>stride;<sp/></highlight><highlight class="comment">//<sp/>bugfix:<sp/>need<sp/>to<sp/>compute<sp/>this<sp/>after<sp/>&apos;cur<sp/>+=&apos;<sp/>computation<sp/>above</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4691"><highlight class="normal"></highlight></codeline>
<codeline lineno="4692"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>first<sp/>row,<sp/>use<sp/>special<sp/>filter<sp/>that<sp/>doesn&apos;t<sp/>sample<sp/>previous<sp/>row</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4693"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(j<sp/>==<sp/>0)<sp/>filter<sp/>=<sp/>first_row_filter[filter];</highlight></codeline>
<codeline lineno="4694"><highlight class="normal"></highlight></codeline>
<codeline lineno="4695"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>handle<sp/>first<sp/>byte<sp/>explicitly</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4696"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(k=0;<sp/>k<sp/>&lt;<sp/>filter_bytes;<sp/>++k)<sp/>{</highlight></codeline>
<codeline lineno="4697"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(filter)<sp/>{</highlight></codeline>
<codeline lineno="4698"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>STBI__F_none<sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>cur[k]<sp/>=<sp/>raw[k];<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4699"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>STBI__F_sub<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>cur[k]<sp/>=<sp/>raw[k];<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4700"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>STBI__F_up<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>cur[k]<sp/>=<sp/>STBI__BYTECAST(raw[k]<sp/>+<sp/>prior[k]);<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4701"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>STBI__F_avg<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>cur[k]<sp/>=<sp/>STBI__BYTECAST(raw[k]<sp/>+<sp/>(prior[k]&gt;&gt;1));<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4702"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>STBI__F_paeth<sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>cur[k]<sp/>=<sp/>STBI__BYTECAST(raw[k]<sp/>+<sp/>stbi__paeth(0,prior[k],0));<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4703"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>STBI__F_avg_first<sp/><sp/>:<sp/>cur[k]<sp/>=<sp/>raw[k];<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4704"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>STBI__F_paeth_first:<sp/>cur[k]<sp/>=<sp/>raw[k];<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4705"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4706"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4707"><highlight class="normal"></highlight></codeline>
<codeline lineno="4708"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(depth<sp/>==<sp/>8)<sp/>{</highlight></codeline>
<codeline lineno="4709"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(img_n<sp/>!=<sp/>out_n)</highlight></codeline>
<codeline lineno="4710"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cur[img_n]<sp/>=<sp/>255;<sp/></highlight><highlight class="comment">//<sp/>first<sp/>pixel</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4711"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>raw<sp/>+=<sp/>img_n;</highlight></codeline>
<codeline lineno="4712"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cur<sp/>+=<sp/>out_n;</highlight></codeline>
<codeline lineno="4713"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>prior<sp/>+=<sp/>out_n;</highlight></codeline>
<codeline lineno="4714"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(depth<sp/>==<sp/>16)<sp/>{</highlight></codeline>
<codeline lineno="4715"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(img_n<sp/>!=<sp/>out_n)<sp/>{</highlight></codeline>
<codeline lineno="4716"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cur[filter_bytes]<sp/><sp/><sp/>=<sp/>255;<sp/></highlight><highlight class="comment">//<sp/>first<sp/>pixel<sp/>top<sp/>byte</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4717"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cur[filter_bytes+1]<sp/>=<sp/>255;<sp/></highlight><highlight class="comment">//<sp/>first<sp/>pixel<sp/>bottom<sp/>byte</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4718"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4719"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>raw<sp/>+=<sp/>filter_bytes;</highlight></codeline>
<codeline lineno="4720"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cur<sp/>+=<sp/>output_bytes;</highlight></codeline>
<codeline lineno="4721"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>prior<sp/>+=<sp/>output_bytes;</highlight></codeline>
<codeline lineno="4722"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="4723"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>raw<sp/>+=<sp/>1;</highlight></codeline>
<codeline lineno="4724"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cur<sp/>+=<sp/>1;</highlight></codeline>
<codeline lineno="4725"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>prior<sp/>+=<sp/>1;</highlight></codeline>
<codeline lineno="4726"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4727"><highlight class="normal"></highlight></codeline>
<codeline lineno="4728"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>this<sp/>is<sp/>a<sp/>little<sp/>gross,<sp/>so<sp/>that<sp/>we<sp/>don&apos;t<sp/>switch<sp/>per-pixel<sp/>or<sp/>per-component</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4729"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(depth<sp/>&lt;<sp/>8<sp/>||<sp/>img_n<sp/>==<sp/>out_n)<sp/>{</highlight></codeline>
<codeline lineno="4730"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nk<sp/>=<sp/>(width<sp/>-<sp/>1)*filter_bytes;</highlight></codeline>
<codeline lineno="4731"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#define<sp/>STBI__CASE(f)<sp/>\</highlight></codeline>
<codeline lineno="4732"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>case<sp/>f:<sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="4733"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for<sp/>(k=0;<sp/>k<sp/>&lt;<sp/>nk;<sp/>++k)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4734"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(filter)<sp/>{</highlight></codeline>
<codeline lineno="4735"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>&quot;none&quot;<sp/>filter<sp/>turns<sp/>into<sp/>a<sp/>memcpy<sp/>here;<sp/>make<sp/>that<sp/>explicit.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4736"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>STBI__F_none:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(cur,<sp/>raw,<sp/>nk);<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4737"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>STBI__CASE(STBI__F_sub)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>cur[k]<sp/>=<sp/>STBI__BYTECAST(raw[k]<sp/>+<sp/>cur[k-filter_bytes]);<sp/>}<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4738"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>STBI__CASE(STBI__F_up)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>cur[k]<sp/>=<sp/>STBI__BYTECAST(raw[k]<sp/>+<sp/>prior[k]);<sp/>}<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4739"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>STBI__CASE(STBI__F_avg)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>cur[k]<sp/>=<sp/>STBI__BYTECAST(raw[k]<sp/>+<sp/>((prior[k]<sp/>+<sp/>cur[k-filter_bytes])&gt;&gt;1));<sp/>}<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4740"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>STBI__CASE(STBI__F_paeth)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>cur[k]<sp/>=<sp/>STBI__BYTECAST(raw[k]<sp/>+<sp/>stbi__paeth(cur[k-filter_bytes],prior[k],prior[k-filter_bytes]));<sp/>}<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4741"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>STBI__CASE(STBI__F_avg_first)<sp/><sp/><sp/><sp/>{<sp/>cur[k]<sp/>=<sp/>STBI__BYTECAST(raw[k]<sp/>+<sp/>(cur[k-filter_bytes]<sp/>&gt;&gt;<sp/>1));<sp/>}<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4742"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>STBI__CASE(STBI__F_paeth_first)<sp/><sp/>{<sp/>cur[k]<sp/>=<sp/>STBI__BYTECAST(raw[k]<sp/>+<sp/>stbi__paeth(cur[k-filter_bytes],0,0));<sp/>}<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4743"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4744"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#undef<sp/>STBI__CASE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4745"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>raw<sp/>+=<sp/>nk;</highlight></codeline>
<codeline lineno="4746"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="4747"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>STBI_ASSERT(img_n+1<sp/>==<sp/>out_n);</highlight></codeline>
<codeline lineno="4748"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#define<sp/>STBI__CASE(f)<sp/>\</highlight></codeline>
<codeline lineno="4749"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>case<sp/>f:<sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="4750"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for<sp/>(i=x-1;<sp/>i<sp/>&gt;=<sp/>1;<sp/>--i,<sp/>cur[filter_bytes]=255,raw+=filter_bytes,cur+=output_bytes,prior+=output_bytes)<sp/>\</highlight></codeline>
<codeline lineno="4751"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for<sp/>(k=0;<sp/>k<sp/>&lt;<sp/>filter_bytes;<sp/>++k)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4752"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(filter)<sp/>{</highlight></codeline>
<codeline lineno="4753"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>STBI__CASE(STBI__F_none)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>cur[k]<sp/>=<sp/>raw[k];<sp/>}<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4754"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>STBI__CASE(STBI__F_sub)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>cur[k]<sp/>=<sp/>STBI__BYTECAST(raw[k]<sp/>+<sp/>cur[k-<sp/>output_bytes]);<sp/>}<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4755"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>STBI__CASE(STBI__F_up)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>cur[k]<sp/>=<sp/>STBI__BYTECAST(raw[k]<sp/>+<sp/>prior[k]);<sp/>}<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4756"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>STBI__CASE(STBI__F_avg)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>cur[k]<sp/>=<sp/>STBI__BYTECAST(raw[k]<sp/>+<sp/>((prior[k]<sp/>+<sp/>cur[k-<sp/>output_bytes])&gt;&gt;1));<sp/>}<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4757"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>STBI__CASE(STBI__F_paeth)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>cur[k]<sp/>=<sp/>STBI__BYTECAST(raw[k]<sp/>+<sp/>stbi__paeth(cur[k-<sp/>output_bytes],prior[k],prior[k-<sp/>output_bytes]));<sp/>}<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4758"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>STBI__CASE(STBI__F_avg_first)<sp/><sp/><sp/><sp/>{<sp/>cur[k]<sp/>=<sp/>STBI__BYTECAST(raw[k]<sp/>+<sp/>(cur[k-<sp/>output_bytes]<sp/>&gt;&gt;<sp/>1));<sp/>}<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4759"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>STBI__CASE(STBI__F_paeth_first)<sp/><sp/>{<sp/>cur[k]<sp/>=<sp/>STBI__BYTECAST(raw[k]<sp/>+<sp/>stbi__paeth(cur[k-<sp/>output_bytes],0,0));<sp/>}<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4760"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4761"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#undef<sp/>STBI__CASE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4762"><highlight class="normal"></highlight></codeline>
<codeline lineno="4763"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>loop<sp/>above<sp/>sets<sp/>the<sp/>high<sp/>byte<sp/>of<sp/>the<sp/>pixels&apos;<sp/>alpha,<sp/>but<sp/>for</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4764"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>16<sp/>bit<sp/>png<sp/>files<sp/>we<sp/>also<sp/>need<sp/>the<sp/>low<sp/>byte<sp/>set.<sp/>we&apos;ll<sp/>do<sp/>that<sp/>here.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4765"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(depth<sp/>==<sp/>16)<sp/>{</highlight></codeline>
<codeline lineno="4766"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cur<sp/>=<sp/>a-&gt;out<sp/>+<sp/>stride*j;<sp/></highlight><highlight class="comment">//<sp/>start<sp/>at<sp/>the<sp/>beginning<sp/>of<sp/>the<sp/>row<sp/>again</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4767"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i<sp/>&lt;<sp/>x;<sp/>++i,cur+=output_bytes)<sp/>{</highlight></codeline>
<codeline lineno="4768"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cur[filter_bytes+1]<sp/>=<sp/>255;</highlight></codeline>
<codeline lineno="4769"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4770"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4771"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4772"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4773"><highlight class="normal"></highlight></codeline>
<codeline lineno="4774"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>we<sp/>make<sp/>a<sp/>separate<sp/>pass<sp/>to<sp/>expand<sp/>bits<sp/>to<sp/>pixels;<sp/>for<sp/>performance,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4775"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>this<sp/>could<sp/>run<sp/>two<sp/>scanlines<sp/>behind<sp/>the<sp/>above<sp/>code,<sp/>so<sp/>it<sp/>won&apos;t</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4776"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>intefere<sp/>with<sp/>filtering<sp/>but<sp/>will<sp/>still<sp/>be<sp/>in<sp/>the<sp/>cache.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4777"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(depth<sp/>&lt;<sp/>8)<sp/>{</highlight></codeline>
<codeline lineno="4778"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(j=0;<sp/>j<sp/>&lt;<sp/>y;<sp/>++j)<sp/>{</highlight></codeline>
<codeline lineno="4779"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d" kindref="member">stbi_uc</ref><sp/>*cur<sp/>=<sp/>a-&gt;out<sp/>+<sp/>stride*j;</highlight></codeline>
<codeline lineno="4780"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d" kindref="member">stbi_uc</ref><sp/>*in<sp/><sp/>=<sp/>a-&gt;out<sp/>+<sp/>stride*j<sp/>+<sp/>x*out_n<sp/>-<sp/>img_width_bytes;</highlight></codeline>
<codeline lineno="4781"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>unpack<sp/>1/2/4-bit<sp/>into<sp/>a<sp/>8-bit<sp/>buffer.<sp/>allows<sp/>us<sp/>to<sp/>keep<sp/>the<sp/>common<sp/>8-bit<sp/>path<sp/>optimal<sp/>at<sp/>minimal<sp/>cost<sp/>for<sp/>1/2/4-bit</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4782"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>png<sp/>guarante<sp/>byte<sp/>alignment,<sp/>if<sp/>width<sp/>is<sp/>not<sp/>multiple<sp/>of<sp/>8/4/2<sp/>we&apos;ll<sp/>decode<sp/>dummy<sp/>trailing<sp/>data<sp/>that<sp/>will<sp/>be<sp/>skipped<sp/>in<sp/>the<sp/>later<sp/>loop</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4783"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d" kindref="member">stbi_uc</ref><sp/>scale<sp/>=<sp/>(color<sp/>==<sp/>0)<sp/>?<sp/>stbi__depth_scale_table[depth]<sp/>:<sp/>1;<sp/></highlight><highlight class="comment">//<sp/>scale<sp/>grayscale<sp/>values<sp/>to<sp/>0..255<sp/>range</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4784"><highlight class="normal"></highlight></codeline>
<codeline lineno="4785"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>note<sp/>that<sp/>the<sp/>final<sp/>byte<sp/>might<sp/>overshoot<sp/>and<sp/>write<sp/>more<sp/>data<sp/>than<sp/>desired.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4786"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>we<sp/>can<sp/>allocate<sp/>enough<sp/>data<sp/>that<sp/>this<sp/>never<sp/>writes<sp/>out<sp/>of<sp/>memory,<sp/>but<sp/>it</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4787"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>could<sp/>also<sp/>overwrite<sp/>the<sp/>next<sp/>scanline.<sp/>can<sp/>it<sp/>overwrite<sp/>non-empty<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4788"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>on<sp/>the<sp/>next<sp/>scanline?<sp/>yes,<sp/>consider<sp/>1-pixel-wide<sp/>scanlines<sp/>with<sp/>1-bit-per-pixel.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4789"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>so<sp/>we<sp/>need<sp/>to<sp/>explicitly<sp/>clamp<sp/>the<sp/>final<sp/>ones</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4790"><highlight class="normal"></highlight></codeline>
<codeline lineno="4791"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(depth<sp/>==<sp/>4)<sp/>{</highlight></codeline>
<codeline lineno="4792"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(k=x*img_n;<sp/>k<sp/>&gt;=<sp/>2;<sp/>k-=2,<sp/>++in)<sp/>{</highlight></codeline>
<codeline lineno="4793"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*cur++<sp/>=<sp/>scale<sp/>*<sp/>((*in<sp/>&gt;&gt;<sp/>4)<sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="4794"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*cur++<sp/>=<sp/>scale<sp/>*<sp/>((*in<sp/><sp/><sp/><sp/><sp/>)<sp/>&amp;<sp/>0x0f);</highlight></codeline>
<codeline lineno="4795"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4796"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(k<sp/>&gt;<sp/>0)<sp/>*cur++<sp/>=<sp/>scale<sp/>*<sp/>((*in<sp/>&gt;&gt;<sp/>4)<sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="4797"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(depth<sp/>==<sp/>2)<sp/>{</highlight></codeline>
<codeline lineno="4798"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(k=x*img_n;<sp/>k<sp/>&gt;=<sp/>4;<sp/>k-=4,<sp/>++in)<sp/>{</highlight></codeline>
<codeline lineno="4799"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*cur++<sp/>=<sp/>scale<sp/>*<sp/>((*in<sp/>&gt;&gt;<sp/>6)<sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="4800"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*cur++<sp/>=<sp/>scale<sp/>*<sp/>((*in<sp/>&gt;&gt;<sp/>4)<sp/>&amp;<sp/>0x03);</highlight></codeline>
<codeline lineno="4801"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*cur++<sp/>=<sp/>scale<sp/>*<sp/>((*in<sp/>&gt;&gt;<sp/>2)<sp/>&amp;<sp/>0x03);</highlight></codeline>
<codeline lineno="4802"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*cur++<sp/>=<sp/>scale<sp/>*<sp/>((*in<sp/><sp/><sp/><sp/><sp/>)<sp/>&amp;<sp/>0x03);</highlight></codeline>
<codeline lineno="4803"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4804"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(k<sp/>&gt;<sp/>0)<sp/>*cur++<sp/>=<sp/>scale<sp/>*<sp/>((*in<sp/>&gt;&gt;<sp/>6)<sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="4805"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(k<sp/>&gt;<sp/>1)<sp/>*cur++<sp/>=<sp/>scale<sp/>*<sp/>((*in<sp/>&gt;&gt;<sp/>4)<sp/>&amp;<sp/>0x03);</highlight></codeline>
<codeline lineno="4806"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(k<sp/>&gt;<sp/>2)<sp/>*cur++<sp/>=<sp/>scale<sp/>*<sp/>((*in<sp/>&gt;&gt;<sp/>2)<sp/>&amp;<sp/>0x03);</highlight></codeline>
<codeline lineno="4807"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(depth<sp/>==<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="4808"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(k=x*img_n;<sp/>k<sp/>&gt;=<sp/>8;<sp/>k-=8,<sp/>++in)<sp/>{</highlight></codeline>
<codeline lineno="4809"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*cur++<sp/>=<sp/>scale<sp/>*<sp/>((*in<sp/>&gt;&gt;<sp/>7)<sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="4810"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*cur++<sp/>=<sp/>scale<sp/>*<sp/>((*in<sp/>&gt;&gt;<sp/>6)<sp/>&amp;<sp/>0x01);</highlight></codeline>
<codeline lineno="4811"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*cur++<sp/>=<sp/>scale<sp/>*<sp/>((*in<sp/>&gt;&gt;<sp/>5)<sp/>&amp;<sp/>0x01);</highlight></codeline>
<codeline lineno="4812"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*cur++<sp/>=<sp/>scale<sp/>*<sp/>((*in<sp/>&gt;&gt;<sp/>4)<sp/>&amp;<sp/>0x01);</highlight></codeline>
<codeline lineno="4813"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*cur++<sp/>=<sp/>scale<sp/>*<sp/>((*in<sp/>&gt;&gt;<sp/>3)<sp/>&amp;<sp/>0x01);</highlight></codeline>
<codeline lineno="4814"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*cur++<sp/>=<sp/>scale<sp/>*<sp/>((*in<sp/>&gt;&gt;<sp/>2)<sp/>&amp;<sp/>0x01);</highlight></codeline>
<codeline lineno="4815"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*cur++<sp/>=<sp/>scale<sp/>*<sp/>((*in<sp/>&gt;&gt;<sp/>1)<sp/>&amp;<sp/>0x01);</highlight></codeline>
<codeline lineno="4816"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*cur++<sp/>=<sp/>scale<sp/>*<sp/>((*in<sp/><sp/><sp/><sp/><sp/>)<sp/>&amp;<sp/>0x01);</highlight></codeline>
<codeline lineno="4817"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4818"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(k<sp/>&gt;<sp/>0)<sp/>*cur++<sp/>=<sp/>scale<sp/>*<sp/>((*in<sp/>&gt;&gt;<sp/>7)<sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="4819"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(k<sp/>&gt;<sp/>1)<sp/>*cur++<sp/>=<sp/>scale<sp/>*<sp/>((*in<sp/>&gt;&gt;<sp/>6)<sp/>&amp;<sp/>0x01);</highlight></codeline>
<codeline lineno="4820"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(k<sp/>&gt;<sp/>2)<sp/>*cur++<sp/>=<sp/>scale<sp/>*<sp/>((*in<sp/>&gt;&gt;<sp/>5)<sp/>&amp;<sp/>0x01);</highlight></codeline>
<codeline lineno="4821"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(k<sp/>&gt;<sp/>3)<sp/>*cur++<sp/>=<sp/>scale<sp/>*<sp/>((*in<sp/>&gt;&gt;<sp/>4)<sp/>&amp;<sp/>0x01);</highlight></codeline>
<codeline lineno="4822"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(k<sp/>&gt;<sp/>4)<sp/>*cur++<sp/>=<sp/>scale<sp/>*<sp/>((*in<sp/>&gt;&gt;<sp/>3)<sp/>&amp;<sp/>0x01);</highlight></codeline>
<codeline lineno="4823"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(k<sp/>&gt;<sp/>5)<sp/>*cur++<sp/>=<sp/>scale<sp/>*<sp/>((*in<sp/>&gt;&gt;<sp/>2)<sp/>&amp;<sp/>0x01);</highlight></codeline>
<codeline lineno="4824"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(k<sp/>&gt;<sp/>6)<sp/>*cur++<sp/>=<sp/>scale<sp/>*<sp/>((*in<sp/>&gt;&gt;<sp/>1)<sp/>&amp;<sp/>0x01);</highlight></codeline>
<codeline lineno="4825"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4826"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(img_n<sp/>!=<sp/>out_n)<sp/>{</highlight></codeline>
<codeline lineno="4827"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>q;</highlight></codeline>
<codeline lineno="4828"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>insert<sp/>alpha<sp/>=<sp/>255</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4829"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cur<sp/>=<sp/>a-&gt;out<sp/>+<sp/>stride*j;</highlight></codeline>
<codeline lineno="4830"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(img_n<sp/>==<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="4831"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(q=x-1;<sp/>q<sp/>&gt;=<sp/>0;<sp/>--q)<sp/>{</highlight></codeline>
<codeline lineno="4832"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cur[q*2+1]<sp/>=<sp/>255;</highlight></codeline>
<codeline lineno="4833"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cur[q*2+0]<sp/>=<sp/>cur[q];</highlight></codeline>
<codeline lineno="4834"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4835"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="4836"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>STBI_ASSERT(img_n<sp/>==<sp/>3);</highlight></codeline>
<codeline lineno="4837"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(q=x-1;<sp/>q<sp/>&gt;=<sp/>0;<sp/>--q)<sp/>{</highlight></codeline>
<codeline lineno="4838"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cur[q*4+3]<sp/>=<sp/>255;</highlight></codeline>
<codeline lineno="4839"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cur[q*4+2]<sp/>=<sp/>cur[q*3+2];</highlight></codeline>
<codeline lineno="4840"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cur[q*4+1]<sp/>=<sp/>cur[q*3+1];</highlight></codeline>
<codeline lineno="4841"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cur[q*4+0]<sp/>=<sp/>cur[q*3+0];</highlight></codeline>
<codeline lineno="4842"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4843"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4844"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4845"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4846"><highlight class="normal"><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(depth<sp/>==<sp/>16)<sp/>{</highlight></codeline>
<codeline lineno="4847"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>force<sp/>the<sp/>image<sp/>data<sp/>from<sp/>big-endian<sp/>to<sp/>platform-native.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4848"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>this<sp/>is<sp/>done<sp/>in<sp/>a<sp/>separate<sp/>pass<sp/>due<sp/>to<sp/>the<sp/>decoding<sp/>relying</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4849"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>on<sp/>the<sp/>data<sp/>being<sp/>untouched,<sp/>but<sp/>could<sp/>probably<sp/>be<sp/>done</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4850"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>per-line<sp/>during<sp/>decode<sp/>if<sp/>care<sp/>is<sp/>taken.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4851"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d" kindref="member">stbi_uc</ref><sp/>*cur<sp/>=<sp/>a-&gt;out;</highlight></codeline>
<codeline lineno="4852"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stbi__uint16<sp/>*cur16<sp/>=<sp/>(stbi__uint16*)cur;</highlight></codeline>
<codeline lineno="4853"><highlight class="normal"></highlight></codeline>
<codeline lineno="4854"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;<sp/>i<sp/>&lt;<sp/>x*y*out_n;<sp/>++i,cur16++,cur+=2)<sp/>{</highlight></codeline>
<codeline lineno="4855"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*cur16<sp/>=<sp/>(cur[0]<sp/>&lt;&lt;<sp/>8)<sp/>|<sp/>cur[1];</highlight></codeline>
<codeline lineno="4856"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4857"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4858"><highlight class="normal"></highlight></codeline>
<codeline lineno="4859"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="4860"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4861"><highlight class="normal"></highlight></codeline>
<codeline lineno="4862"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>stbi__create_png_image(stbi__png<sp/>*a,<sp/><ref refid="stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d" kindref="member">stbi_uc</ref><sp/>*image_data,<sp/>stbi__uint32<sp/>image_data_len,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>out_n,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>depth,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>color,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>interlaced)</highlight></codeline>
<codeline lineno="4863"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4864"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bytes<sp/>=<sp/>(depth<sp/>==<sp/>16<sp/>?<sp/>2<sp/>:<sp/>1);</highlight></codeline>
<codeline lineno="4865"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>out_bytes<sp/>=<sp/>out_n<sp/>*<sp/>bytes;</highlight></codeline>
<codeline lineno="4866"><highlight class="normal"><sp/><sp/><sp/><ref refid="stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d" kindref="member">stbi_uc</ref><sp/>*</highlight><highlight class="keyword">final</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4867"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>p;</highlight></codeline>
<codeline lineno="4868"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!interlaced)</highlight></codeline>
<codeline lineno="4869"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stbi__create_png_image_raw(a,<sp/>image_data,<sp/>image_data_len,<sp/>out_n,<sp/>a-&gt;s-&gt;img_x,<sp/>a-&gt;s-&gt;img_y,<sp/>depth,<sp/>color);</highlight></codeline>
<codeline lineno="4870"><highlight class="normal"></highlight></codeline>
<codeline lineno="4871"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>de-interlacing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4872"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/>=<sp/>(<ref refid="stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d" kindref="member">stbi_uc</ref><sp/>*)<sp/>stbi__malloc_mad3(a-&gt;s-&gt;img_x,<sp/>a-&gt;s-&gt;img_y,<sp/>out_bytes,<sp/>0);</highlight></codeline>
<codeline lineno="4873"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!</highlight><highlight class="keyword">final</highlight><highlight class="normal">)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stbi__err(</highlight><highlight class="stringliteral">&quot;outofmem&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Out<sp/>of<sp/>memory&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4874"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(p=0;<sp/>p<sp/>&lt;<sp/>7;<sp/>++p)<sp/>{</highlight></codeline>
<codeline lineno="4875"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>xorig[]<sp/>=<sp/>{<sp/>0,4,0,2,0,1,0<sp/>};</highlight></codeline>
<codeline lineno="4876"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>yorig[]<sp/>=<sp/>{<sp/>0,0,4,0,2,0,1<sp/>};</highlight></codeline>
<codeline lineno="4877"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>xspc[]<sp/><sp/>=<sp/>{<sp/>8,8,4,4,2,2,1<sp/>};</highlight></codeline>
<codeline lineno="4878"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>yspc[]<sp/><sp/>=<sp/>{<sp/>8,8,8,4,4,2,2<sp/>};</highlight></codeline>
<codeline lineno="4879"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,j,x,y;</highlight></codeline>
<codeline lineno="4880"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>pass1_x[4]<sp/>=<sp/>0,<sp/>pass1_x[5]<sp/>=<sp/>1,<sp/>pass1_x[12]<sp/>=<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4881"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>x<sp/>=<sp/>(a-&gt;s-&gt;img_x<sp/>-<sp/>xorig[p]<sp/>+<sp/>xspc[p]-1)<sp/>/<sp/>xspc[p];</highlight></codeline>
<codeline lineno="4882"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>y<sp/>=<sp/>(a-&gt;s-&gt;img_y<sp/>-<sp/>yorig[p]<sp/>+<sp/>yspc[p]-1)<sp/>/<sp/>yspc[p];</highlight></codeline>
<codeline lineno="4883"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(x<sp/>&amp;&amp;<sp/>y)<sp/>{</highlight></codeline>
<codeline lineno="4884"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stbi__uint32<sp/>img_len<sp/>=<sp/>((((a-&gt;s-&gt;img_n<sp/>*<sp/>x<sp/>*<sp/>depth)<sp/>+<sp/>7)<sp/>&gt;&gt;<sp/>3)<sp/>+<sp/>1)<sp/>*<sp/>y;</highlight></codeline>
<codeline lineno="4885"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!stbi__create_png_image_raw(a,<sp/>image_data,<sp/>image_data_len,<sp/>out_n,<sp/>x,<sp/>y,<sp/>depth,<sp/>color))<sp/>{</highlight></codeline>
<codeline lineno="4886"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>STBI_FREE(</highlight><highlight class="keyword">final</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4887"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="4888"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4889"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(j=0;<sp/>j<sp/>&lt;<sp/>y;<sp/>++j)<sp/>{</highlight></codeline>
<codeline lineno="4890"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i<sp/>&lt;<sp/>x;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="4891"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>out_y<sp/>=<sp/>j*yspc[p]+yorig[p];</highlight></codeline>
<codeline lineno="4892"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>out_x<sp/>=<sp/>i*xspc[p]+xorig[p];</highlight></codeline>
<codeline lineno="4893"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(</highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/>+<sp/>out_y*a-&gt;s-&gt;img_x*out_bytes<sp/>+<sp/>out_x*out_bytes,</highlight></codeline>
<codeline lineno="4894"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>a-&gt;out<sp/>+<sp/>(j*x+i)*out_bytes,<sp/>out_bytes);</highlight></codeline>
<codeline lineno="4895"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4896"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4897"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>STBI_FREE(a-&gt;out);</highlight></codeline>
<codeline lineno="4898"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>image_data<sp/>+=<sp/>img_len;</highlight></codeline>
<codeline lineno="4899"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>image_data_len<sp/>-=<sp/>img_len;</highlight></codeline>
<codeline lineno="4900"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4901"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4902"><highlight class="normal"><sp/><sp/><sp/>a-&gt;out<sp/>=<sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4903"><highlight class="normal"></highlight></codeline>
<codeline lineno="4904"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="4905"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4906"><highlight class="normal"></highlight></codeline>
<codeline lineno="4907"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>stbi__compute_transparency(stbi__png<sp/>*z,<sp/><ref refid="stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d" kindref="member">stbi_uc</ref><sp/>tc[3],<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>out_n)</highlight></codeline>
<codeline lineno="4908"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4909"><highlight class="normal"><sp/><sp/><sp/>stbi__context<sp/>*s<sp/>=<sp/>z-&gt;s;</highlight></codeline>
<codeline lineno="4910"><highlight class="normal"><sp/><sp/><sp/>stbi__uint32<sp/>i,<sp/>pixel_count<sp/>=<sp/>s-&gt;img_x<sp/>*<sp/>s-&gt;img_y;</highlight></codeline>
<codeline lineno="4911"><highlight class="normal"><sp/><sp/><sp/><ref refid="stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d" kindref="member">stbi_uc</ref><sp/>*p<sp/>=<sp/>z-&gt;out;</highlight></codeline>
<codeline lineno="4912"><highlight class="normal"></highlight></codeline>
<codeline lineno="4913"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>compute<sp/>color-based<sp/>transparency,<sp/>assuming<sp/>we&apos;ve</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4914"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>already<sp/>got<sp/>255<sp/>as<sp/>the<sp/>alpha<sp/>value<sp/>in<sp/>the<sp/>output</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4915"><highlight class="normal"><sp/><sp/><sp/>STBI_ASSERT(out_n<sp/>==<sp/>2<sp/>||<sp/>out_n<sp/>==<sp/>4);</highlight></codeline>
<codeline lineno="4916"><highlight class="normal"></highlight></codeline>
<codeline lineno="4917"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(out_n<sp/>==<sp/>2)<sp/>{</highlight></codeline>
<codeline lineno="4918"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i<sp/>&lt;<sp/>pixel_count;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="4919"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p[1]<sp/>=<sp/>(p[0]<sp/>==<sp/>tc[0]<sp/>?<sp/>0<sp/>:<sp/>255);</highlight></codeline>
<codeline lineno="4920"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p<sp/>+=<sp/>2;</highlight></codeline>
<codeline lineno="4921"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4922"><highlight class="normal"><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="4923"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i<sp/>&lt;<sp/>pixel_count;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="4924"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p[0]<sp/>==<sp/>tc[0]<sp/>&amp;&amp;<sp/>p[1]<sp/>==<sp/>tc[1]<sp/>&amp;&amp;<sp/>p[2]<sp/>==<sp/>tc[2])</highlight></codeline>
<codeline lineno="4925"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p[3]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="4926"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p<sp/>+=<sp/>4;</highlight></codeline>
<codeline lineno="4927"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4928"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4929"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="4930"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4931"><highlight class="normal"></highlight></codeline>
<codeline lineno="4932"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>stbi__compute_transparency16(stbi__png<sp/>*z,<sp/>stbi__uint16<sp/>tc[3],<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>out_n)</highlight></codeline>
<codeline lineno="4933"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4934"><highlight class="normal"><sp/><sp/><sp/>stbi__context<sp/>*s<sp/>=<sp/>z-&gt;s;</highlight></codeline>
<codeline lineno="4935"><highlight class="normal"><sp/><sp/><sp/>stbi__uint32<sp/>i,<sp/>pixel_count<sp/>=<sp/>s-&gt;img_x<sp/>*<sp/>s-&gt;img_y;</highlight></codeline>
<codeline lineno="4936"><highlight class="normal"><sp/><sp/><sp/>stbi__uint16<sp/>*p<sp/>=<sp/>(stbi__uint16*)<sp/>z-&gt;out;</highlight></codeline>
<codeline lineno="4937"><highlight class="normal"></highlight></codeline>
<codeline lineno="4938"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>compute<sp/>color-based<sp/>transparency,<sp/>assuming<sp/>we&apos;ve</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4939"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>already<sp/>got<sp/>65535<sp/>as<sp/>the<sp/>alpha<sp/>value<sp/>in<sp/>the<sp/>output</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4940"><highlight class="normal"><sp/><sp/><sp/>STBI_ASSERT(out_n<sp/>==<sp/>2<sp/>||<sp/>out_n<sp/>==<sp/>4);</highlight></codeline>
<codeline lineno="4941"><highlight class="normal"></highlight></codeline>
<codeline lineno="4942"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(out_n<sp/>==<sp/>2)<sp/>{</highlight></codeline>
<codeline lineno="4943"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>pixel_count;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="4944"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p[1]<sp/>=<sp/>(p[0]<sp/>==<sp/>tc[0]<sp/>?<sp/>0<sp/>:<sp/>65535);</highlight></codeline>
<codeline lineno="4945"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p<sp/>+=<sp/>2;</highlight></codeline>
<codeline lineno="4946"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4947"><highlight class="normal"><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="4948"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>pixel_count;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="4949"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p[0]<sp/>==<sp/>tc[0]<sp/>&amp;&amp;<sp/>p[1]<sp/>==<sp/>tc[1]<sp/>&amp;&amp;<sp/>p[2]<sp/>==<sp/>tc[2])</highlight></codeline>
<codeline lineno="4950"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p[3]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="4951"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p<sp/>+=<sp/>4;</highlight></codeline>
<codeline lineno="4952"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4953"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4954"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="4955"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4956"><highlight class="normal"></highlight></codeline>
<codeline lineno="4957"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>stbi__expand_png_palette(stbi__png<sp/>*a,<sp/><ref refid="stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d" kindref="member">stbi_uc</ref><sp/>*palette,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>len,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pal_img_n)</highlight></codeline>
<codeline lineno="4958"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4959"><highlight class="normal"><sp/><sp/><sp/>stbi__uint32<sp/>i,<sp/>pixel_count<sp/>=<sp/>a-&gt;s-&gt;img_x<sp/>*<sp/>a-&gt;s-&gt;img_y;</highlight></codeline>
<codeline lineno="4960"><highlight class="normal"><sp/><sp/><sp/><ref refid="stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d" kindref="member">stbi_uc</ref><sp/>*p,<sp/>*temp_out,<sp/>*orig<sp/>=<sp/>a-&gt;out;</highlight></codeline>
<codeline lineno="4961"><highlight class="normal"></highlight></codeline>
<codeline lineno="4962"><highlight class="normal"><sp/><sp/><sp/>p<sp/>=<sp/>(<ref refid="stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d" kindref="member">stbi_uc</ref><sp/>*)<sp/>stbi__malloc_mad2(pixel_count,<sp/>pal_img_n,<sp/>0);</highlight></codeline>
<codeline lineno="4963"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p<sp/>==<sp/>NULL)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stbi__err(</highlight><highlight class="stringliteral">&quot;outofmem&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Out<sp/>of<sp/>memory&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4964"><highlight class="normal"></highlight></codeline>
<codeline lineno="4965"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>between<sp/>here<sp/>and<sp/>free(out)<sp/>below,<sp/>exitting<sp/>would<sp/>leak</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4966"><highlight class="normal"><sp/><sp/><sp/>temp_out<sp/>=<sp/>p;</highlight></codeline>
<codeline lineno="4967"><highlight class="normal"></highlight></codeline>
<codeline lineno="4968"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pal_img_n<sp/>==<sp/>3)<sp/>{</highlight></codeline>
<codeline lineno="4969"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i<sp/>&lt;<sp/>pixel_count;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="4970"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n<sp/>=<sp/>orig[i]*4;</highlight></codeline>
<codeline lineno="4971"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p[0]<sp/>=<sp/>palette[n<sp/><sp/>];</highlight></codeline>
<codeline lineno="4972"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p[1]<sp/>=<sp/>palette[n+1];</highlight></codeline>
<codeline lineno="4973"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p[2]<sp/>=<sp/>palette[n+2];</highlight></codeline>
<codeline lineno="4974"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p<sp/>+=<sp/>3;</highlight></codeline>
<codeline lineno="4975"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4976"><highlight class="normal"><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="4977"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i<sp/>&lt;<sp/>pixel_count;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="4978"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n<sp/>=<sp/>orig[i]*4;</highlight></codeline>
<codeline lineno="4979"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p[0]<sp/>=<sp/>palette[n<sp/><sp/>];</highlight></codeline>
<codeline lineno="4980"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p[1]<sp/>=<sp/>palette[n+1];</highlight></codeline>
<codeline lineno="4981"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p[2]<sp/>=<sp/>palette[n+2];</highlight></codeline>
<codeline lineno="4982"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p[3]<sp/>=<sp/>palette[n+3];</highlight></codeline>
<codeline lineno="4983"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p<sp/>+=<sp/>4;</highlight></codeline>
<codeline lineno="4984"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4985"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4986"><highlight class="normal"><sp/><sp/><sp/>STBI_FREE(a-&gt;out);</highlight></codeline>
<codeline lineno="4987"><highlight class="normal"><sp/><sp/><sp/>a-&gt;out<sp/>=<sp/>temp_out;</highlight></codeline>
<codeline lineno="4988"><highlight class="normal"></highlight></codeline>
<codeline lineno="4989"><highlight class="normal"><sp/><sp/><sp/>STBI_NOTUSED(len);</highlight></codeline>
<codeline lineno="4990"><highlight class="normal"></highlight></codeline>
<codeline lineno="4991"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="4992"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4993"><highlight class="normal"></highlight></codeline>
<codeline lineno="4994"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>stbi__unpremultiply_on_load_global<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="4995"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>stbi__de_iphone_flag_global<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="4996"><highlight class="normal"></highlight></codeline>
<codeline lineno="4997"><highlight class="normal"><ref refid="stb__image_8h_1a2d9ec9850cd12aefe7641b456266a4c2" kindref="member">STBIDEF</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="stb__image_8h_1a3f02e0053e1c8d08a3ed436e6a82c7c9" kindref="member">stbi_set_unpremultiply_on_load</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>flag_true_if_should_unpremultiply)</highlight></codeline>
<codeline lineno="4998"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4999"><highlight class="normal"><sp/><sp/><sp/>stbi__unpremultiply_on_load_global<sp/>=<sp/>flag_true_if_should_unpremultiply;</highlight></codeline>
<codeline lineno="5000"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5001"><highlight class="normal"></highlight></codeline>
<codeline lineno="5002"><highlight class="normal"><ref refid="stb__image_8h_1a2d9ec9850cd12aefe7641b456266a4c2" kindref="member">STBIDEF</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="stb__image_8h_1a23525ef2b882f3de426b47ecf8d9151b" kindref="member">stbi_convert_iphone_png_to_rgb</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>flag_true_if_should_convert)</highlight></codeline>
<codeline lineno="5003"><highlight class="normal">{</highlight></codeline>
<codeline lineno="5004"><highlight class="normal"><sp/><sp/><sp/>stbi__de_iphone_flag_global<sp/>=<sp/>flag_true_if_should_convert;</highlight></codeline>
<codeline lineno="5005"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5006"><highlight class="normal"></highlight></codeline>
<codeline lineno="5007"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>STBI_THREAD_LOCAL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5008"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>stbi__unpremultiply_on_load<sp/><sp/>stbi__unpremultiply_on_load_global</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5009"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>stbi__de_iphone_flag<sp/><sp/>stbi__de_iphone_flag_global</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5010"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5011"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>STBI_THREAD_LOCAL<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>stbi__unpremultiply_on_load_local,<sp/>stbi__unpremultiply_on_load_set;</highlight></codeline>
<codeline lineno="5012"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>STBI_THREAD_LOCAL<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>stbi__de_iphone_flag_local,<sp/>stbi__de_iphone_flag_set;</highlight></codeline>
<codeline lineno="5013"><highlight class="normal"></highlight></codeline>
<codeline lineno="5014"><highlight class="normal"><ref refid="stb__image_8h_1a2d9ec9850cd12aefe7641b456266a4c2" kindref="member">STBIDEF</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="stb__image_8h_1acf48dffaa1b2bb00f5a8d9af697c6aca" kindref="member">stbi_set_unpremultiply_on_load_thread</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>flag_true_if_should_unpremultiply)</highlight></codeline>
<codeline lineno="5015"><highlight class="normal">{</highlight></codeline>
<codeline lineno="5016"><highlight class="normal"><sp/><sp/><sp/>stbi__unpremultiply_on_load_local<sp/>=<sp/>flag_true_if_should_unpremultiply;</highlight></codeline>
<codeline lineno="5017"><highlight class="normal"><sp/><sp/><sp/>stbi__unpremultiply_on_load_set<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="5018"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5019"><highlight class="normal"></highlight></codeline>
<codeline lineno="5020"><highlight class="normal"><ref refid="stb__image_8h_1a2d9ec9850cd12aefe7641b456266a4c2" kindref="member">STBIDEF</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="stb__image_8h_1aff26696e30b62a40dd00bc12415343f6" kindref="member">stbi_convert_iphone_png_to_rgb_thread</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>flag_true_if_should_convert)</highlight></codeline>
<codeline lineno="5021"><highlight class="normal">{</highlight></codeline>
<codeline lineno="5022"><highlight class="normal"><sp/><sp/><sp/>stbi__de_iphone_flag_local<sp/>=<sp/>flag_true_if_should_convert;</highlight></codeline>
<codeline lineno="5023"><highlight class="normal"><sp/><sp/><sp/>stbi__de_iphone_flag_set<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="5024"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5025"><highlight class="normal"></highlight></codeline>
<codeline lineno="5026"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>stbi__unpremultiply_on_load<sp/><sp/>(stbi__unpremultiply_on_load_set<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="5027"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>?<sp/>stbi__unpremultiply_on_load_local<sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="5028"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>stbi__unpremultiply_on_load_global)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5029"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>stbi__de_iphone_flag<sp/><sp/>(stbi__de_iphone_flag_set<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="5030"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>?<sp/>stbi__de_iphone_flag_local<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="5031"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>stbi__de_iphone_flag_global)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5032"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>STBI_THREAD_LOCAL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5033"><highlight class="normal"></highlight></codeline>
<codeline lineno="5034"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>stbi__de_iphone(stbi__png<sp/>*z)</highlight></codeline>
<codeline lineno="5035"><highlight class="normal">{</highlight></codeline>
<codeline lineno="5036"><highlight class="normal"><sp/><sp/><sp/>stbi__context<sp/>*s<sp/>=<sp/>z-&gt;s;</highlight></codeline>
<codeline lineno="5037"><highlight class="normal"><sp/><sp/><sp/>stbi__uint32<sp/>i,<sp/>pixel_count<sp/>=<sp/>s-&gt;img_x<sp/>*<sp/>s-&gt;img_y;</highlight></codeline>
<codeline lineno="5038"><highlight class="normal"><sp/><sp/><sp/><ref refid="stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d" kindref="member">stbi_uc</ref><sp/>*p<sp/>=<sp/>z-&gt;out;</highlight></codeline>
<codeline lineno="5039"><highlight class="normal"></highlight></codeline>
<codeline lineno="5040"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(s-&gt;img_out_n<sp/>==<sp/>3)<sp/>{<sp/><sp/></highlight><highlight class="comment">//<sp/>convert<sp/>bgr<sp/>to<sp/>rgb</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5041"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i<sp/>&lt;<sp/>pixel_count;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="5042"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d" kindref="member">stbi_uc</ref><sp/>t<sp/>=<sp/>p[0];</highlight></codeline>
<codeline lineno="5043"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p[0]<sp/>=<sp/>p[2];</highlight></codeline>
<codeline lineno="5044"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p[2]<sp/>=<sp/>t;</highlight></codeline>
<codeline lineno="5045"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p<sp/>+=<sp/>3;</highlight></codeline>
<codeline lineno="5046"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5047"><highlight class="normal"><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="5048"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>STBI_ASSERT(s-&gt;img_out_n<sp/>==<sp/>4);</highlight></codeline>
<codeline lineno="5049"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(stbi__unpremultiply_on_load)<sp/>{</highlight></codeline>
<codeline lineno="5050"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>convert<sp/>bgr<sp/>to<sp/>rgb<sp/>and<sp/>unpremultiply</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5051"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i<sp/>&lt;<sp/>pixel_count;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="5052"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d" kindref="member">stbi_uc</ref><sp/>a<sp/>=<sp/>p[3];</highlight></codeline>
<codeline lineno="5053"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d" kindref="member">stbi_uc</ref><sp/>t<sp/>=<sp/>p[0];</highlight></codeline>
<codeline lineno="5054"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(a)<sp/>{</highlight></codeline>
<codeline lineno="5055"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d" kindref="member">stbi_uc</ref><sp/>half<sp/>=<sp/>a<sp/>/<sp/>2;</highlight></codeline>
<codeline lineno="5056"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p[0]<sp/>=<sp/>(p[2]<sp/>*<sp/>255<sp/>+<sp/>half)<sp/>/<sp/>a;</highlight></codeline>
<codeline lineno="5057"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p[1]<sp/>=<sp/>(p[1]<sp/>*<sp/>255<sp/>+<sp/>half)<sp/>/<sp/>a;</highlight></codeline>
<codeline lineno="5058"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p[2]<sp/>=<sp/>(<sp/>t<sp/><sp/><sp/>*<sp/>255<sp/>+<sp/>half)<sp/>/<sp/>a;</highlight></codeline>
<codeline lineno="5059"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="5060"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p[0]<sp/>=<sp/>p[2];</highlight></codeline>
<codeline lineno="5061"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p[2]<sp/>=<sp/>t;</highlight></codeline>
<codeline lineno="5062"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5063"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p<sp/>+=<sp/>4;</highlight></codeline>
<codeline lineno="5064"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5065"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="5066"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>convert<sp/>bgr<sp/>to<sp/>rgb</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5067"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i<sp/>&lt;<sp/>pixel_count;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="5068"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d" kindref="member">stbi_uc</ref><sp/>t<sp/>=<sp/>p[0];</highlight></codeline>
<codeline lineno="5069"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p[0]<sp/>=<sp/>p[2];</highlight></codeline>
<codeline lineno="5070"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p[2]<sp/>=<sp/>t;</highlight></codeline>
<codeline lineno="5071"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p<sp/>+=<sp/>4;</highlight></codeline>
<codeline lineno="5072"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5073"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5074"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5075"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5076"><highlight class="normal"></highlight></codeline>
<codeline lineno="5077"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>STBI__PNG_TYPE(a,b,c,d)<sp/><sp/>(((unsigned)<sp/>(a)<sp/>&lt;&lt;<sp/>24)<sp/>+<sp/>((unsigned)<sp/>(b)<sp/>&lt;&lt;<sp/>16)<sp/>+<sp/>((unsigned)<sp/>(c)<sp/>&lt;&lt;<sp/>8)<sp/>+<sp/>(unsigned)<sp/>(d))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5078"><highlight class="normal"></highlight></codeline>
<codeline lineno="5079"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>stbi__parse_png_file(stbi__png<sp/>*z,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>scan,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>req_comp)</highlight></codeline>
<codeline lineno="5080"><highlight class="normal">{</highlight></codeline>
<codeline lineno="5081"><highlight class="normal"><sp/><sp/><sp/><ref refid="stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d" kindref="member">stbi_uc</ref><sp/>palette[1024],<sp/>pal_img_n=0;</highlight></codeline>
<codeline lineno="5082"><highlight class="normal"><sp/><sp/><sp/><ref refid="stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d" kindref="member">stbi_uc</ref><sp/>has_trans=0,<sp/>tc[3]={0};</highlight></codeline>
<codeline lineno="5083"><highlight class="normal"><sp/><sp/><sp/>stbi__uint16<sp/>tc16[3];</highlight></codeline>
<codeline lineno="5084"><highlight class="normal"><sp/><sp/><sp/>stbi__uint32<sp/>ioff=0,<sp/>idata_limit=0,<sp/>i,<sp/>pal_len=0;</highlight></codeline>
<codeline lineno="5085"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>first=1,k,interlace=0,<sp/>color=0,<sp/>is_iphone=0;</highlight></codeline>
<codeline lineno="5086"><highlight class="normal"><sp/><sp/><sp/>stbi__context<sp/>*s<sp/>=<sp/>z-&gt;s;</highlight></codeline>
<codeline lineno="5087"><highlight class="normal"></highlight></codeline>
<codeline lineno="5088"><highlight class="normal"><sp/><sp/><sp/>z-&gt;expanded<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="5089"><highlight class="normal"><sp/><sp/><sp/>z-&gt;idata<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="5090"><highlight class="normal"><sp/><sp/><sp/>z-&gt;out<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="5091"><highlight class="normal"></highlight></codeline>
<codeline lineno="5092"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!stbi__check_png_header(s))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="5093"><highlight class="normal"></highlight></codeline>
<codeline lineno="5094"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(scan<sp/>==<sp/>STBI__SCAN_type)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="5095"><highlight class="normal"></highlight></codeline>
<codeline lineno="5096"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(;;)<sp/>{</highlight></codeline>
<codeline lineno="5097"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stbi__pngchunk<sp/>c<sp/>=<sp/>stbi__get_chunk_header(s);</highlight></codeline>
<codeline lineno="5098"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(c.type)<sp/>{</highlight></codeline>
<codeline lineno="5099"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>STBI__PNG_TYPE(</highlight><highlight class="charliteral">&apos;C&apos;</highlight><highlight class="normal">,</highlight><highlight class="charliteral">&apos;g&apos;</highlight><highlight class="normal">,</highlight><highlight class="charliteral">&apos;B&apos;</highlight><highlight class="normal">,</highlight><highlight class="charliteral">&apos;I&apos;</highlight><highlight class="normal">):</highlight></codeline>
<codeline lineno="5100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>is_iphone<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="5101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stbi__skip(s,<sp/>c.length);</highlight></codeline>
<codeline lineno="5102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>STBI__PNG_TYPE(</highlight><highlight class="charliteral">&apos;I&apos;</highlight><highlight class="normal">,</highlight><highlight class="charliteral">&apos;H&apos;</highlight><highlight class="normal">,</highlight><highlight class="charliteral">&apos;D&apos;</highlight><highlight class="normal">,</highlight><highlight class="charliteral">&apos;R&apos;</highlight><highlight class="normal">):<sp/>{</highlight></codeline>
<codeline lineno="5104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>comp,filter;</highlight></codeline>
<codeline lineno="5105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!first)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stbi__err(</highlight><highlight class="stringliteral">&quot;multiple<sp/>IHDR&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;Corrupt<sp/>PNG&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>first<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="5107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(c.length<sp/>!=<sp/>13)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stbi__err(</highlight><highlight class="stringliteral">&quot;bad<sp/>IHDR<sp/>len&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;Corrupt<sp/>PNG&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s-&gt;img_x<sp/>=<sp/>stbi__get32be(s);</highlight></codeline>
<codeline lineno="5109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s-&gt;img_y<sp/>=<sp/>stbi__get32be(s);</highlight></codeline>
<codeline lineno="5110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(s-&gt;img_y<sp/>&gt;<sp/>STBI_MAX_DIMENSIONS)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stbi__err(</highlight><highlight class="stringliteral">&quot;too<sp/>large&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;Very<sp/>large<sp/>image<sp/>(corrupt?)&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(s-&gt;img_x<sp/>&gt;<sp/>STBI_MAX_DIMENSIONS)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stbi__err(</highlight><highlight class="stringliteral">&quot;too<sp/>large&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;Very<sp/>large<sp/>image<sp/>(corrupt?)&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>z-&gt;depth<sp/>=<sp/>stbi__get8(s);<sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(z-&gt;depth<sp/>!=<sp/>1<sp/>&amp;&amp;<sp/>z-&gt;depth<sp/>!=<sp/>2<sp/>&amp;&amp;<sp/>z-&gt;depth<sp/>!=<sp/>4<sp/>&amp;&amp;<sp/>z-&gt;depth<sp/>!=<sp/>8<sp/>&amp;&amp;<sp/>z-&gt;depth<sp/>!=<sp/>16)<sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stbi__err(</highlight><highlight class="stringliteral">&quot;1/2/4/8/16-bit<sp/>only&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;PNG<sp/>not<sp/>supported:<sp/>1/2/4/8/16-bit<sp/>only&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>color<sp/>=<sp/>stbi__get8(s);<sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(color<sp/>&gt;<sp/>6)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stbi__err(</highlight><highlight class="stringliteral">&quot;bad<sp/>ctype&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;Corrupt<sp/>PNG&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(color<sp/>==<sp/>3<sp/>&amp;&amp;<sp/>z-&gt;depth<sp/>==<sp/>16)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stbi__err(</highlight><highlight class="stringliteral">&quot;bad<sp/>ctype&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;Corrupt<sp/>PNG&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(color<sp/>==<sp/>3)<sp/>pal_img_n<sp/>=<sp/>3;<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(color<sp/>&amp;<sp/>1)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stbi__err(</highlight><highlight class="stringliteral">&quot;bad<sp/>ctype&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;Corrupt<sp/>PNG&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comp<sp/><sp/>=<sp/>stbi__get8(s);<sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(comp)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stbi__err(</highlight><highlight class="stringliteral">&quot;bad<sp/>comp<sp/>method&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;Corrupt<sp/>PNG&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>filter=<sp/>stbi__get8(s);<sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(filter)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stbi__err(</highlight><highlight class="stringliteral">&quot;bad<sp/>filter<sp/>method&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;Corrupt<sp/>PNG&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>interlace<sp/>=<sp/>stbi__get8(s);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(interlace&gt;1)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stbi__err(</highlight><highlight class="stringliteral">&quot;bad<sp/>interlace<sp/>method&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;Corrupt<sp/>PNG&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!s-&gt;img_x<sp/>||<sp/>!s-&gt;img_y)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stbi__err(</highlight><highlight class="stringliteral">&quot;0-pixel<sp/>image&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;Corrupt<sp/>PNG&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!pal_img_n)<sp/>{</highlight></codeline>
<codeline lineno="5121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s-&gt;img_n<sp/>=<sp/>(color<sp/>&amp;<sp/>2<sp/>?<sp/>3<sp/>:<sp/>1)<sp/>+<sp/>(color<sp/>&amp;<sp/>4<sp/>?<sp/>1<sp/>:<sp/>0);</highlight></codeline>
<codeline lineno="5122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((1<sp/>&lt;&lt;<sp/>30)<sp/>/<sp/>s-&gt;img_x<sp/>/<sp/>s-&gt;img_n<sp/>&lt;<sp/>s-&gt;img_y)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stbi__err(</highlight><highlight class="stringliteral">&quot;too<sp/>large&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Image<sp/>too<sp/>large<sp/>to<sp/>decode&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="5124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>paletted,<sp/>then<sp/>pal_n<sp/>is<sp/>our<sp/>final<sp/>components,<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>img_n<sp/>is<sp/>#<sp/>components<sp/>to<sp/>decompress/filter.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s-&gt;img_n<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="5127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((1<sp/>&lt;&lt;<sp/>30)<sp/>/<sp/>s-&gt;img_x<sp/>/<sp/>4<sp/>&lt;<sp/>s-&gt;img_y)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stbi__err(</highlight><highlight class="stringliteral">&quot;too<sp/>large&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;Corrupt<sp/>PNG&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>even<sp/>with<sp/>SCAN_header,<sp/>have<sp/>to<sp/>scan<sp/>to<sp/>see<sp/>if<sp/>we<sp/>have<sp/>a<sp/>tRNS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5132"><highlight class="normal"></highlight></codeline>
<codeline lineno="5133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>STBI__PNG_TYPE(</highlight><highlight class="charliteral">&apos;P&apos;</highlight><highlight class="normal">,</highlight><highlight class="charliteral">&apos;L&apos;</highlight><highlight class="normal">,</highlight><highlight class="charliteral">&apos;T&apos;</highlight><highlight class="normal">,</highlight><highlight class="charliteral">&apos;E&apos;</highlight><highlight class="normal">):<sp/><sp/>{</highlight></codeline>
<codeline lineno="5134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(first)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stbi__err(</highlight><highlight class="stringliteral">&quot;first<sp/>not<sp/>IHDR&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Corrupt<sp/>PNG&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(c.length<sp/>&gt;<sp/>256*3)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stbi__err(</highlight><highlight class="stringliteral">&quot;invalid<sp/>PLTE&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;Corrupt<sp/>PNG&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pal_len<sp/>=<sp/>c.length<sp/>/<sp/>3;</highlight></codeline>
<codeline lineno="5137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pal_len<sp/>*<sp/>3<sp/>!=<sp/>c.length)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stbi__err(</highlight><highlight class="stringliteral">&quot;invalid<sp/>PLTE&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;Corrupt<sp/>PNG&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i<sp/>&lt;<sp/>pal_len;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="5139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>palette[i*4+0]<sp/>=<sp/>stbi__get8(s);</highlight></codeline>
<codeline lineno="5140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>palette[i*4+1]<sp/>=<sp/>stbi__get8(s);</highlight></codeline>
<codeline lineno="5141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>palette[i*4+2]<sp/>=<sp/>stbi__get8(s);</highlight></codeline>
<codeline lineno="5142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>palette[i*4+3]<sp/>=<sp/>255;</highlight></codeline>
<codeline lineno="5143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5146"><highlight class="normal"></highlight></codeline>
<codeline lineno="5147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>STBI__PNG_TYPE(</highlight><highlight class="charliteral">&apos;t&apos;</highlight><highlight class="normal">,</highlight><highlight class="charliteral">&apos;R&apos;</highlight><highlight class="normal">,</highlight><highlight class="charliteral">&apos;N&apos;</highlight><highlight class="normal">,</highlight><highlight class="charliteral">&apos;S&apos;</highlight><highlight class="normal">):<sp/>{</highlight></codeline>
<codeline lineno="5148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(first)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stbi__err(</highlight><highlight class="stringliteral">&quot;first<sp/>not<sp/>IHDR&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Corrupt<sp/>PNG&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(z-&gt;idata)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stbi__err(</highlight><highlight class="stringliteral">&quot;tRNS<sp/>after<sp/>IDAT&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;Corrupt<sp/>PNG&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pal_img_n)<sp/>{</highlight></codeline>
<codeline lineno="5151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(scan<sp/>==<sp/>STBI__SCAN_header)<sp/>{<sp/>s-&gt;img_n<sp/>=<sp/>4;<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;<sp/>}</highlight></codeline>
<codeline lineno="5152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pal_len<sp/>==<sp/>0)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stbi__err(</highlight><highlight class="stringliteral">&quot;tRNS<sp/>before<sp/>PLTE&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;Corrupt<sp/>PNG&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(c.length<sp/>&gt;<sp/>pal_len)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stbi__err(</highlight><highlight class="stringliteral">&quot;bad<sp/>tRNS<sp/>len&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;Corrupt<sp/>PNG&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pal_img_n<sp/>=<sp/>4;</highlight></codeline>
<codeline lineno="5155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i<sp/>&lt;<sp/>c.length;<sp/>++i)</highlight></codeline>
<codeline lineno="5156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>palette[i*4+3]<sp/>=<sp/>stbi__get8(s);</highlight></codeline>
<codeline lineno="5157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="5158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(s-&gt;img_n<sp/>&amp;<sp/>1))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stbi__err(</highlight><highlight class="stringliteral">&quot;tRNS<sp/>with<sp/>alpha&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;Corrupt<sp/>PNG&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(c.length<sp/>!=<sp/>(stbi__uint32)<sp/>s-&gt;img_n*2)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stbi__err(</highlight><highlight class="stringliteral">&quot;bad<sp/>tRNS<sp/>len&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;Corrupt<sp/>PNG&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>has_trans<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="5161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>non-paletted<sp/>with<sp/>tRNS<sp/>=<sp/>constant<sp/>alpha.<sp/>if<sp/>header-scanning,<sp/>we<sp/>can<sp/>stop<sp/>now.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(scan<sp/>==<sp/>STBI__SCAN_header)<sp/>{<sp/>++s-&gt;img_n;<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;<sp/>}</highlight></codeline>
<codeline lineno="5163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(z-&gt;depth<sp/>==<sp/>16)<sp/>{</highlight></codeline>
<codeline lineno="5164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(k<sp/>=<sp/>0;<sp/>k<sp/>&lt;<sp/>s-&gt;img_n;<sp/>++k)<sp/>tc16[k]<sp/>=<sp/>(stbi__uint16)stbi__get16be(s);<sp/></highlight><highlight class="comment">//<sp/>copy<sp/>the<sp/>values<sp/>as-is</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="5166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(k<sp/>=<sp/>0;<sp/>k<sp/>&lt;<sp/>s-&gt;img_n;<sp/>++k)<sp/>tc[k]<sp/>=<sp/>(<ref refid="stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d" kindref="member">stbi_uc</ref>)(stbi__get16be(s)<sp/>&amp;<sp/>255)<sp/>*<sp/>stbi__depth_scale_table[z-&gt;depth];<sp/></highlight><highlight class="comment">//<sp/>non<sp/>8-bit<sp/>images<sp/>will<sp/>be<sp/>larger</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5171"><highlight class="normal"></highlight></codeline>
<codeline lineno="5172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>STBI__PNG_TYPE(</highlight><highlight class="charliteral">&apos;I&apos;</highlight><highlight class="normal">,</highlight><highlight class="charliteral">&apos;D&apos;</highlight><highlight class="normal">,</highlight><highlight class="charliteral">&apos;A&apos;</highlight><highlight class="normal">,</highlight><highlight class="charliteral">&apos;T&apos;</highlight><highlight class="normal">):<sp/>{</highlight></codeline>
<codeline lineno="5173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(first)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stbi__err(</highlight><highlight class="stringliteral">&quot;first<sp/>not<sp/>IHDR&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Corrupt<sp/>PNG&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pal_img_n<sp/>&amp;&amp;<sp/>!pal_len)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stbi__err(</highlight><highlight class="stringliteral">&quot;no<sp/>PLTE&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;Corrupt<sp/>PNG&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(scan<sp/>==<sp/>STBI__SCAN_header)<sp/>{</highlight></codeline>
<codeline lineno="5176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>header<sp/>scan<sp/>definitely<sp/>stops<sp/>at<sp/>first<sp/>IDAT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pal_img_n)</highlight></codeline>
<codeline lineno="5178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s-&gt;img_n<sp/>=<sp/>pal_img_n;</highlight></codeline>
<codeline lineno="5179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="5180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(c.length<sp/>&gt;<sp/>(1u<sp/>&lt;&lt;<sp/>30))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stbi__err(</highlight><highlight class="stringliteral">&quot;IDAT<sp/>size<sp/>limit&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;IDAT<sp/>section<sp/>larger<sp/>than<sp/>2^30<sp/>bytes&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)(ioff<sp/>+<sp/>c.length)<sp/>&lt;<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)ioff)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="5183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ioff<sp/>+<sp/>c.length<sp/>&gt;<sp/>idata_limit)<sp/>{</highlight></codeline>
<codeline lineno="5184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stbi__uint32<sp/>idata_limit_old<sp/>=<sp/>idata_limit;</highlight></codeline>
<codeline lineno="5185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d" kindref="member">stbi_uc</ref><sp/>*p;</highlight></codeline>
<codeline lineno="5186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(idata_limit<sp/>==<sp/>0)<sp/>idata_limit<sp/>=<sp/>c.length<sp/>&gt;<sp/>4096<sp/>?<sp/>c.length<sp/>:<sp/>4096;</highlight></codeline>
<codeline lineno="5187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(ioff<sp/>+<sp/>c.length<sp/>&gt;<sp/>idata_limit)</highlight></codeline>
<codeline lineno="5188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>idata_limit<sp/>*=<sp/>2;</highlight></codeline>
<codeline lineno="5189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>STBI_NOTUSED(idata_limit_old);</highlight></codeline>
<codeline lineno="5190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p<sp/>=<sp/>(<ref refid="stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d" kindref="member">stbi_uc</ref><sp/>*)<sp/>STBI_REALLOC_SIZED(z-&gt;idata,<sp/>idata_limit_old,<sp/>idata_limit);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p<sp/>==<sp/>NULL)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stbi__err(</highlight><highlight class="stringliteral">&quot;outofmem&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Out<sp/>of<sp/>memory&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>z-&gt;idata<sp/>=<sp/>p;</highlight></codeline>
<codeline lineno="5192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!stbi__getn(s,<sp/>z-&gt;idata+ioff,c.length))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stbi__err(</highlight><highlight class="stringliteral">&quot;outofdata&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;Corrupt<sp/>PNG&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ioff<sp/>+=<sp/>c.length;</highlight></codeline>
<codeline lineno="5195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5197"><highlight class="normal"></highlight></codeline>
<codeline lineno="5198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>STBI__PNG_TYPE(</highlight><highlight class="charliteral">&apos;I&apos;</highlight><highlight class="normal">,</highlight><highlight class="charliteral">&apos;E&apos;</highlight><highlight class="normal">,</highlight><highlight class="charliteral">&apos;N&apos;</highlight><highlight class="normal">,</highlight><highlight class="charliteral">&apos;D&apos;</highlight><highlight class="normal">):<sp/>{</highlight></codeline>
<codeline lineno="5199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stbi__uint32<sp/>raw_len,<sp/>bpl;</highlight></codeline>
<codeline lineno="5200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(first)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stbi__err(</highlight><highlight class="stringliteral">&quot;first<sp/>not<sp/>IHDR&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Corrupt<sp/>PNG&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(scan<sp/>!=<sp/>STBI__SCAN_load)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="5202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(z-&gt;idata<sp/>==<sp/>NULL)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stbi__err(</highlight><highlight class="stringliteral">&quot;no<sp/>IDAT&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;Corrupt<sp/>PNG&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>initial<sp/>guess<sp/>for<sp/>decoded<sp/>data<sp/>size<sp/>to<sp/>avoid<sp/>unnecessary<sp/>reallocs</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bpl<sp/>=<sp/>(s-&gt;img_x<sp/>*<sp/>z-&gt;depth<sp/>+<sp/>7)<sp/>/<sp/>8;<sp/></highlight><highlight class="comment">//<sp/>bytes<sp/>per<sp/>line,<sp/>per<sp/>component</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>raw_len<sp/>=<sp/>bpl<sp/>*<sp/>s-&gt;img_y<sp/>*<sp/>s-&gt;img_n<sp/></highlight><highlight class="comment">/*<sp/>pixels<sp/>*/</highlight><highlight class="normal"><sp/>+<sp/>s-&gt;img_y<sp/></highlight><highlight class="comment">/*<sp/>filter<sp/>mode<sp/>per<sp/>row<sp/>*/</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>z-&gt;expanded<sp/>=<sp/>(<ref refid="stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d" kindref="member">stbi_uc</ref><sp/>*)<sp/><ref refid="stb__image_8h_1a038b0e741859a482b8b9d60167e54d27" kindref="member">stbi_zlib_decode_malloc_guesssize_headerflag</ref>((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)<sp/>z-&gt;idata,<sp/>ioff,<sp/>raw_len,<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*)<sp/>&amp;raw_len,<sp/>!is_iphone);</highlight></codeline>
<codeline lineno="5207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(z-&gt;expanded<sp/>==<sp/>NULL)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;<sp/></highlight><highlight class="comment">//<sp/>zlib<sp/>should<sp/>set<sp/>error</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>STBI_FREE(z-&gt;idata);<sp/>z-&gt;idata<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="5209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((req_comp<sp/>==<sp/>s-&gt;img_n+1<sp/>&amp;&amp;<sp/>req_comp<sp/>!=<sp/>3<sp/>&amp;&amp;<sp/>!pal_img_n)<sp/>||<sp/>has_trans)</highlight></codeline>
<codeline lineno="5210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s-&gt;img_out_n<sp/>=<sp/>s-&gt;img_n+1;</highlight></codeline>
<codeline lineno="5211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s-&gt;img_out_n<sp/>=<sp/>s-&gt;img_n;</highlight></codeline>
<codeline lineno="5213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!stbi__create_png_image(z,<sp/>z-&gt;expanded,<sp/>raw_len,<sp/>s-&gt;img_out_n,<sp/>z-&gt;depth,<sp/>color,<sp/>interlace))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="5214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(has_trans)<sp/>{</highlight></codeline>
<codeline lineno="5215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(z-&gt;depth<sp/>==<sp/>16)<sp/>{</highlight></codeline>
<codeline lineno="5216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!stbi__compute_transparency16(z,<sp/>tc16,<sp/>s-&gt;img_out_n))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="5217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="5218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!stbi__compute_transparency(z,<sp/>tc,<sp/>s-&gt;img_out_n))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="5219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(is_iphone<sp/>&amp;&amp;<sp/>stbi__de_iphone_flag<sp/>&amp;&amp;<sp/>s-&gt;img_out_n<sp/>&gt;<sp/>2)</highlight></codeline>
<codeline lineno="5222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stbi__de_iphone(z);</highlight></codeline>
<codeline lineno="5223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pal_img_n)<sp/>{</highlight></codeline>
<codeline lineno="5224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>pal_img_n<sp/>==<sp/>3<sp/>or<sp/>4</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s-&gt;img_n<sp/>=<sp/>pal_img_n;<sp/></highlight><highlight class="comment">//<sp/>record<sp/>the<sp/>actual<sp/>colors<sp/>we<sp/>had</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s-&gt;img_out_n<sp/>=<sp/>pal_img_n;</highlight></codeline>
<codeline lineno="5227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(req_comp<sp/>&gt;=<sp/>3)<sp/>s-&gt;img_out_n<sp/>=<sp/>req_comp;</highlight></codeline>
<codeline lineno="5228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!stbi__expand_png_palette(z,<sp/>palette,<sp/>pal_len,<sp/>s-&gt;img_out_n))</highlight></codeline>
<codeline lineno="5229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="5230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(has_trans)<sp/>{</highlight></codeline>
<codeline lineno="5231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>non-paletted<sp/>image<sp/>with<sp/>tRNS<sp/>-&gt;<sp/>source<sp/>image<sp/>has<sp/>(constant)<sp/>alpha</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++s-&gt;img_n;</highlight></codeline>
<codeline lineno="5233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>STBI_FREE(z-&gt;expanded);<sp/>z-&gt;expanded<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="5235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>end<sp/>of<sp/>PNG<sp/>chunk,<sp/>read<sp/>and<sp/>skip<sp/>CRC</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stbi__get32be(s);</highlight></codeline>
<codeline lineno="5237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="5238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5239"><highlight class="normal"></highlight></codeline>
<codeline lineno="5240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="5241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>critical,<sp/>fail</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(first)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stbi__err(</highlight><highlight class="stringliteral">&quot;first<sp/>not<sp/>IHDR&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Corrupt<sp/>PNG&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((c.type<sp/>&amp;<sp/>(1<sp/>&lt;&lt;<sp/>29))<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="5244"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#ifndef<sp/>STBI_NO_FAILURE_STRINGS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>not<sp/>threadsafe</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>invalid_chunk[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;XXXX<sp/>PNG<sp/>chunk<sp/>not<sp/>known&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>invalid_chunk[0]<sp/>=<sp/>STBI__BYTECAST(c.type<sp/>&gt;&gt;<sp/>24);</highlight></codeline>
<codeline lineno="5248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>invalid_chunk[1]<sp/>=<sp/>STBI__BYTECAST(c.type<sp/>&gt;&gt;<sp/>16);</highlight></codeline>
<codeline lineno="5249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>invalid_chunk[2]<sp/>=<sp/>STBI__BYTECAST(c.type<sp/>&gt;&gt;<sp/><sp/>8);</highlight></codeline>
<codeline lineno="5250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>invalid_chunk[3]<sp/>=<sp/>STBI__BYTECAST(c.type<sp/>&gt;&gt;<sp/><sp/>0);</highlight></codeline>
<codeline lineno="5251"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stbi__err(invalid_chunk,<sp/></highlight><highlight class="stringliteral">&quot;PNG<sp/>not<sp/>supported:<sp/>unknown<sp/>PNG<sp/>chunk<sp/>type&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stbi__skip(s,<sp/>c.length);</highlight></codeline>
<codeline lineno="5255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>end<sp/>of<sp/>PNG<sp/>chunk,<sp/>read<sp/>and<sp/>skip<sp/>CRC</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stbi__get32be(s);</highlight></codeline>
<codeline lineno="5259"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5260"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5261"><highlight class="normal"></highlight></codeline>
<codeline lineno="5262"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*stbi__do_png(stbi__png<sp/>*p,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*x,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*y,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*n,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>req_comp,<sp/>stbi__result_info<sp/>*ri)</highlight></codeline>
<codeline lineno="5263"><highlight class="normal">{</highlight></codeline>
<codeline lineno="5264"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*result=NULL;</highlight></codeline>
<codeline lineno="5265"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(req_comp<sp/>&lt;<sp/>0<sp/>||<sp/>req_comp<sp/>&gt;<sp/>4)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stbi__errpuc(</highlight><highlight class="stringliteral">&quot;bad<sp/>req_comp&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Internal<sp/>error&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5266"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(stbi__parse_png_file(p,<sp/>STBI__SCAN_load,<sp/>req_comp))<sp/>{</highlight></codeline>
<codeline lineno="5267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p-&gt;depth<sp/>&lt;=<sp/>8)</highlight></codeline>
<codeline lineno="5268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ri-&gt;bits_per_channel<sp/>=<sp/>8;</highlight></codeline>
<codeline lineno="5269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p-&gt;depth<sp/>==<sp/>16)</highlight></codeline>
<codeline lineno="5270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ri-&gt;bits_per_channel<sp/>=<sp/>16;</highlight></codeline>
<codeline lineno="5271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stbi__errpuc(</highlight><highlight class="stringliteral">&quot;bad<sp/>bits_per_channel&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;PNG<sp/>not<sp/>supported:<sp/>unsupported<sp/>color<sp/>depth&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/>p-&gt;out;</highlight></codeline>
<codeline lineno="5274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>p-&gt;out<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="5275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(req_comp<sp/>&amp;&amp;<sp/>req_comp<sp/>!=<sp/>p-&gt;s-&gt;img_out_n)<sp/>{</highlight></codeline>
<codeline lineno="5276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ri-&gt;bits_per_channel<sp/>==<sp/>8)</highlight></codeline>
<codeline lineno="5277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/>stbi__convert_format((</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)<sp/>result,<sp/>p-&gt;s-&gt;img_out_n,<sp/>req_comp,<sp/>p-&gt;s-&gt;img_x,<sp/>p-&gt;s-&gt;img_y);</highlight></codeline>
<codeline lineno="5278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/>stbi__convert_format16((stbi__uint16<sp/>*)<sp/>result,<sp/>p-&gt;s-&gt;img_out_n,<sp/>req_comp,<sp/>p-&gt;s-&gt;img_x,<sp/>p-&gt;s-&gt;img_y);</highlight></codeline>
<codeline lineno="5280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p-&gt;s-&gt;img_out_n<sp/>=<sp/>req_comp;</highlight></codeline>
<codeline lineno="5281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(result<sp/>==<sp/>NULL)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="5282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*x<sp/>=<sp/>p-&gt;s-&gt;img_x;</highlight></codeline>
<codeline lineno="5284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*y<sp/>=<sp/>p-&gt;s-&gt;img_y;</highlight></codeline>
<codeline lineno="5285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(n)<sp/>*n<sp/>=<sp/>p-&gt;s-&gt;img_n;</highlight></codeline>
<codeline lineno="5286"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5287"><highlight class="normal"><sp/><sp/><sp/>STBI_FREE(p-&gt;out);<sp/><sp/><sp/><sp/><sp/><sp/>p-&gt;out<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="5288"><highlight class="normal"><sp/><sp/><sp/>STBI_FREE(p-&gt;expanded);<sp/>p-&gt;expanded<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="5289"><highlight class="normal"><sp/><sp/><sp/>STBI_FREE(p-&gt;idata);<sp/><sp/><sp/><sp/>p-&gt;idata<sp/><sp/><sp/><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="5290"><highlight class="normal"></highlight></codeline>
<codeline lineno="5291"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="5292"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5293"><highlight class="normal"></highlight></codeline>
<codeline lineno="5294"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*stbi__png_load(stbi__context<sp/>*s,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*x,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*y,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*comp,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>req_comp,<sp/>stbi__result_info<sp/>*ri)</highlight></codeline>
<codeline lineno="5295"><highlight class="normal">{</highlight></codeline>
<codeline lineno="5296"><highlight class="normal"><sp/><sp/><sp/>stbi__png<sp/>p;</highlight></codeline>
<codeline lineno="5297"><highlight class="normal"><sp/><sp/><sp/>p.s<sp/>=<sp/>s;</highlight></codeline>
<codeline lineno="5298"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stbi__do_png(&amp;p,<sp/>x,y,comp,req_comp,<sp/>ri);</highlight></codeline>
<codeline lineno="5299"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5300"><highlight class="normal"></highlight></codeline>
<codeline lineno="5301"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>stbi__png_test(stbi__context<sp/>*s)</highlight></codeline>
<codeline lineno="5302"><highlight class="normal">{</highlight></codeline>
<codeline lineno="5303"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>r;</highlight></codeline>
<codeline lineno="5304"><highlight class="normal"><sp/><sp/><sp/>r<sp/>=<sp/>stbi__check_png_header(s);</highlight></codeline>
<codeline lineno="5305"><highlight class="normal"><sp/><sp/><sp/>stbi__rewind(s);</highlight></codeline>
<codeline lineno="5306"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>r;</highlight></codeline>
<codeline lineno="5307"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5308"><highlight class="normal"></highlight></codeline>
<codeline lineno="5309"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>stbi__png_info_raw(stbi__png<sp/>*p,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*x,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*y,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*comp)</highlight></codeline>
<codeline lineno="5310"><highlight class="normal">{</highlight></codeline>
<codeline lineno="5311"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!stbi__parse_png_file(p,<sp/>STBI__SCAN_header,<sp/>0))<sp/>{</highlight></codeline>
<codeline lineno="5312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stbi__rewind(<sp/>p-&gt;s<sp/>);</highlight></codeline>
<codeline lineno="5313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="5314"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5315"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(x)<sp/>*x<sp/>=<sp/>p-&gt;s-&gt;img_x;</highlight></codeline>
<codeline lineno="5316"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(y)<sp/>*y<sp/>=<sp/>p-&gt;s-&gt;img_y;</highlight></codeline>
<codeline lineno="5317"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(comp)<sp/>*comp<sp/>=<sp/>p-&gt;s-&gt;img_n;</highlight></codeline>
<codeline lineno="5318"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="5319"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5320"><highlight class="normal"></highlight></codeline>
<codeline lineno="5321"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>stbi__png_info(stbi__context<sp/>*s,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*x,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*y,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*comp)</highlight></codeline>
<codeline lineno="5322"><highlight class="normal">{</highlight></codeline>
<codeline lineno="5323"><highlight class="normal"><sp/><sp/><sp/>stbi__png<sp/>p;</highlight></codeline>
<codeline lineno="5324"><highlight class="normal"><sp/><sp/><sp/>p.s<sp/>=<sp/>s;</highlight></codeline>
<codeline lineno="5325"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stbi__png_info_raw(&amp;p,<sp/>x,<sp/>y,<sp/>comp);</highlight></codeline>
<codeline lineno="5326"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5327"><highlight class="normal"></highlight></codeline>
<codeline lineno="5328"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>stbi__png_is16(stbi__context<sp/>*s)</highlight></codeline>
<codeline lineno="5329"><highlight class="normal">{</highlight></codeline>
<codeline lineno="5330"><highlight class="normal"><sp/><sp/><sp/>stbi__png<sp/>p;</highlight></codeline>
<codeline lineno="5331"><highlight class="normal"><sp/><sp/><sp/>p.s<sp/>=<sp/>s;</highlight></codeline>
<codeline lineno="5332"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!stbi__png_info_raw(&amp;p,<sp/>NULL,<sp/>NULL,<sp/>NULL))</highlight></codeline>
<codeline lineno="5333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="5334"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p.depth<sp/>!=<sp/>16)<sp/>{</highlight></codeline>
<codeline lineno="5335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stbi__rewind(p.s);</highlight></codeline>
<codeline lineno="5336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="5337"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5338"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="5339"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5340"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5341"><highlight class="normal"></highlight></codeline>
<codeline lineno="5342"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Microsoft/Windows<sp/>BMP<sp/>image</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5343"><highlight class="normal"></highlight></codeline>
<codeline lineno="5344"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>STBI_NO_BMP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5345"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>stbi__bmp_test_raw(stbi__context<sp/>*s)</highlight></codeline>
<codeline lineno="5346"><highlight class="normal">{</highlight></codeline>
<codeline lineno="5347"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>r;</highlight></codeline>
<codeline lineno="5348"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sz;</highlight></codeline>
<codeline lineno="5349"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(stbi__get8(s)<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;B&apos;</highlight><highlight class="normal">)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="5350"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(stbi__get8(s)<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;M&apos;</highlight><highlight class="normal">)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="5351"><highlight class="normal"><sp/><sp/><sp/>stbi__get32le(s);<sp/></highlight><highlight class="comment">//<sp/>discard<sp/>filesize</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5352"><highlight class="normal"><sp/><sp/><sp/>stbi__get16le(s);<sp/></highlight><highlight class="comment">//<sp/>discard<sp/>reserved</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5353"><highlight class="normal"><sp/><sp/><sp/>stbi__get16le(s);<sp/></highlight><highlight class="comment">//<sp/>discard<sp/>reserved</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5354"><highlight class="normal"><sp/><sp/><sp/>stbi__get32le(s);<sp/></highlight><highlight class="comment">//<sp/>discard<sp/>data<sp/>offset</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5355"><highlight class="normal"><sp/><sp/><sp/>sz<sp/>=<sp/>stbi__get32le(s);</highlight></codeline>
<codeline lineno="5356"><highlight class="normal"><sp/><sp/><sp/>r<sp/>=<sp/>(sz<sp/>==<sp/>12<sp/>||<sp/>sz<sp/>==<sp/>40<sp/>||<sp/>sz<sp/>==<sp/>56<sp/>||<sp/>sz<sp/>==<sp/>108<sp/>||<sp/>sz<sp/>==<sp/>124);</highlight></codeline>
<codeline lineno="5357"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>r;</highlight></codeline>
<codeline lineno="5358"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5359"><highlight class="normal"></highlight></codeline>
<codeline lineno="5360"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>stbi__bmp_test(stbi__context<sp/>*s)</highlight></codeline>
<codeline lineno="5361"><highlight class="normal">{</highlight></codeline>
<codeline lineno="5362"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>r<sp/>=<sp/>stbi__bmp_test_raw(s);</highlight></codeline>
<codeline lineno="5363"><highlight class="normal"><sp/><sp/><sp/>stbi__rewind(s);</highlight></codeline>
<codeline lineno="5364"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>r;</highlight></codeline>
<codeline lineno="5365"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5366"><highlight class="normal"></highlight></codeline>
<codeline lineno="5367"><highlight class="normal"></highlight></codeline>
<codeline lineno="5368"><highlight class="normal"></highlight><highlight class="comment">//<sp/>returns<sp/>0..31<sp/>for<sp/>the<sp/>highest<sp/>set<sp/>bit</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5369"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>stbi__high_bit(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>z)</highlight></codeline>
<codeline lineno="5370"><highlight class="normal">{</highlight></codeline>
<codeline lineno="5371"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n=0;</highlight></codeline>
<codeline lineno="5372"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(z<sp/>==<sp/>0)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="5373"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(z<sp/>&gt;=<sp/>0x10000)<sp/>{<sp/>n<sp/>+=<sp/>16;<sp/>z<sp/>&gt;&gt;=<sp/>16;<sp/>}</highlight></codeline>
<codeline lineno="5374"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(z<sp/>&gt;=<sp/>0x00100)<sp/>{<sp/>n<sp/>+=<sp/><sp/>8;<sp/>z<sp/>&gt;&gt;=<sp/><sp/>8;<sp/>}</highlight></codeline>
<codeline lineno="5375"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(z<sp/>&gt;=<sp/>0x00010)<sp/>{<sp/>n<sp/>+=<sp/><sp/>4;<sp/>z<sp/>&gt;&gt;=<sp/><sp/>4;<sp/>}</highlight></codeline>
<codeline lineno="5376"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(z<sp/>&gt;=<sp/>0x00004)<sp/>{<sp/>n<sp/>+=<sp/><sp/>2;<sp/>z<sp/>&gt;&gt;=<sp/><sp/>2;<sp/>}</highlight></codeline>
<codeline lineno="5377"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(z<sp/>&gt;=<sp/>0x00002)<sp/>{<sp/>n<sp/>+=<sp/><sp/>1;</highlight><highlight class="comment">/*<sp/>&gt;&gt;=<sp/><sp/>1;*/</highlight><highlight class="normal"><sp/>}</highlight></codeline>
<codeline lineno="5378"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>n;</highlight></codeline>
<codeline lineno="5379"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5380"><highlight class="normal"></highlight></codeline>
<codeline lineno="5381"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>stbi__bitcount(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>a)</highlight></codeline>
<codeline lineno="5382"><highlight class="normal">{</highlight></codeline>
<codeline lineno="5383"><highlight class="normal"><sp/><sp/><sp/>a<sp/>=<sp/>(a<sp/>&amp;<sp/>0x55555555)<sp/>+<sp/>((a<sp/>&gt;&gt;<sp/><sp/>1)<sp/>&amp;<sp/>0x55555555);<sp/></highlight><highlight class="comment">//<sp/>max<sp/>2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5384"><highlight class="normal"><sp/><sp/><sp/>a<sp/>=<sp/>(a<sp/>&amp;<sp/>0x33333333)<sp/>+<sp/>((a<sp/>&gt;&gt;<sp/><sp/>2)<sp/>&amp;<sp/>0x33333333);<sp/></highlight><highlight class="comment">//<sp/>max<sp/>4</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5385"><highlight class="normal"><sp/><sp/><sp/>a<sp/>=<sp/>(a<sp/>+<sp/>(a<sp/>&gt;&gt;<sp/>4))<sp/>&amp;<sp/>0x0f0f0f0f;<sp/></highlight><highlight class="comment">//<sp/>max<sp/>8<sp/>per<sp/>4,<sp/>now<sp/>8<sp/>bits</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5386"><highlight class="normal"><sp/><sp/><sp/>a<sp/>=<sp/>(a<sp/>+<sp/>(a<sp/>&gt;&gt;<sp/>8));<sp/></highlight><highlight class="comment">//<sp/>max<sp/>16<sp/>per<sp/>8<sp/>bits</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5387"><highlight class="normal"><sp/><sp/><sp/>a<sp/>=<sp/>(a<sp/>+<sp/>(a<sp/>&gt;&gt;<sp/>16));<sp/></highlight><highlight class="comment">//<sp/>max<sp/>32<sp/>per<sp/>8<sp/>bits</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5388"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>a<sp/>&amp;<sp/>0xff;</highlight></codeline>
<codeline lineno="5389"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5390"><highlight class="normal"></highlight></codeline>
<codeline lineno="5391"><highlight class="normal"></highlight><highlight class="comment">//<sp/>extract<sp/>an<sp/>arbitrarily-aligned<sp/>N-bit<sp/>value<sp/>(N=bits)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5392"><highlight class="normal"></highlight><highlight class="comment">//<sp/>from<sp/>v,<sp/>and<sp/>then<sp/>make<sp/>it<sp/>8-bits<sp/>long<sp/>and<sp/>fractionally</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5393"><highlight class="normal"></highlight><highlight class="comment">//<sp/>extend<sp/>it<sp/>to<sp/>full<sp/>full<sp/>range.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5394"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>stbi__shiftsigned(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>v,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>shift,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bits)</highlight></codeline>
<codeline lineno="5395"><highlight class="normal">{</highlight></codeline>
<codeline lineno="5396"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mul_table[9]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="5397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>0,</highlight></codeline>
<codeline lineno="5398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>0xff</highlight><highlight class="comment">/*0b11111111*/</highlight><highlight class="normal">,<sp/>0x55</highlight><highlight class="comment">/*0b01010101*/</highlight><highlight class="normal">,<sp/>0x49</highlight><highlight class="comment">/*0b01001001*/</highlight><highlight class="normal">,<sp/>0x11</highlight><highlight class="comment">/*0b00010001*/</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="5399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>0x21</highlight><highlight class="comment">/*0b00100001*/</highlight><highlight class="normal">,<sp/>0x41</highlight><highlight class="comment">/*0b01000001*/</highlight><highlight class="normal">,<sp/>0x81</highlight><highlight class="comment">/*0b10000001*/</highlight><highlight class="normal">,<sp/>0x01</highlight><highlight class="comment">/*0b00000001*/</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="5400"><highlight class="normal"><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="5401"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>shift_table[9]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="5402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/>0,0,1,0,2,4,6,0,</highlight></codeline>
<codeline lineno="5403"><highlight class="normal"><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="5404"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(shift<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="5405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>v<sp/>&lt;&lt;=<sp/>-shift;</highlight></codeline>
<codeline lineno="5406"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>v<sp/>&gt;&gt;=<sp/>shift;</highlight></codeline>
<codeline lineno="5408"><highlight class="normal"><sp/><sp/><sp/>STBI_ASSERT(v<sp/>&lt;<sp/>256);</highlight></codeline>
<codeline lineno="5409"><highlight class="normal"><sp/><sp/><sp/>v<sp/>&gt;&gt;=<sp/>(8-bits);</highlight></codeline>
<codeline lineno="5410"><highlight class="normal"><sp/><sp/><sp/>STBI_ASSERT(bits<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>bits<sp/>&lt;=<sp/>8);</highlight></codeline>
<codeline lineno="5411"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<sp/>((unsigned)<sp/>v<sp/>*<sp/>mul_table[bits])<sp/>&gt;&gt;<sp/>shift_table[bits];</highlight></codeline>
<codeline lineno="5412"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5413"><highlight class="normal"></highlight></codeline>
<codeline lineno="5414"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5415"><highlight class="normal">{</highlight></codeline>
<codeline lineno="5416"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bpp,<sp/>offset,<sp/>hsz;</highlight></codeline>
<codeline lineno="5417"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mr,mg,mb,ma,<sp/>all_a;</highlight></codeline>
<codeline lineno="5418"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>extra_read;</highlight></codeline>
<codeline lineno="5419"><highlight class="normal">}<sp/>stbi__bmp_data;</highlight></codeline>
<codeline lineno="5420"><highlight class="normal"></highlight></codeline>
<codeline lineno="5421"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>stbi__bmp_set_mask_defaults(stbi__bmp_data<sp/>*info,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>compress)</highlight></codeline>
<codeline lineno="5422"><highlight class="normal">{</highlight></codeline>
<codeline lineno="5423"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>BI_BITFIELDS<sp/>specifies<sp/>masks<sp/>explicitly,<sp/>don&apos;t<sp/>override</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5424"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(compress<sp/>==<sp/>3)</highlight></codeline>
<codeline lineno="5425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="5426"><highlight class="normal"></highlight></codeline>
<codeline lineno="5427"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(compress<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="5428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(info-&gt;bpp<sp/>==<sp/>16)<sp/>{</highlight></codeline>
<codeline lineno="5429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>info-&gt;mr<sp/>=<sp/>31u<sp/>&lt;&lt;<sp/>10;</highlight></codeline>
<codeline lineno="5430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>info-&gt;mg<sp/>=<sp/>31u<sp/>&lt;&lt;<sp/><sp/>5;</highlight></codeline>
<codeline lineno="5431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>info-&gt;mb<sp/>=<sp/>31u<sp/>&lt;&lt;<sp/><sp/>0;</highlight></codeline>
<codeline lineno="5432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(info-&gt;bpp<sp/>==<sp/>32)<sp/>{</highlight></codeline>
<codeline lineno="5433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>info-&gt;mr<sp/>=<sp/>0xffu<sp/>&lt;&lt;<sp/>16;</highlight></codeline>
<codeline lineno="5434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>info-&gt;mg<sp/>=<sp/>0xffu<sp/>&lt;&lt;<sp/><sp/>8;</highlight></codeline>
<codeline lineno="5435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>info-&gt;mb<sp/>=<sp/>0xffu<sp/>&lt;&lt;<sp/><sp/>0;</highlight></codeline>
<codeline lineno="5436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>info-&gt;ma<sp/>=<sp/>0xffu<sp/>&lt;&lt;<sp/>24;</highlight></codeline>
<codeline lineno="5437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>info-&gt;all_a<sp/>=<sp/>0;<sp/></highlight><highlight class="comment">//<sp/>if<sp/>all_a<sp/>is<sp/>0<sp/>at<sp/>end,<sp/>then<sp/>we<sp/>loaded<sp/>alpha<sp/>channel<sp/>but<sp/>it<sp/>was<sp/>all<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="5439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>otherwise,<sp/>use<sp/>defaults,<sp/>which<sp/>is<sp/>all-0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>info-&gt;mr<sp/>=<sp/>info-&gt;mg<sp/>=<sp/>info-&gt;mb<sp/>=<sp/>info-&gt;ma<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="5441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="5443"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5444"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;<sp/></highlight><highlight class="comment">//<sp/>error</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5445"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5446"><highlight class="normal"></highlight></codeline>
<codeline lineno="5447"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*stbi__bmp_parse_header(stbi__context<sp/>*s,<sp/>stbi__bmp_data<sp/>*info)</highlight></codeline>
<codeline lineno="5448"><highlight class="normal">{</highlight></codeline>
<codeline lineno="5449"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>hsz;</highlight></codeline>
<codeline lineno="5450"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(stbi__get8(s)<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;B&apos;</highlight><highlight class="normal"><sp/>||<sp/>stbi__get8(s)<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;M&apos;</highlight><highlight class="normal">)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stbi__errpuc(</highlight><highlight class="stringliteral">&quot;not<sp/>BMP&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Corrupt<sp/>BMP&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5451"><highlight class="normal"><sp/><sp/><sp/>stbi__get32le(s);<sp/></highlight><highlight class="comment">//<sp/>discard<sp/>filesize</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5452"><highlight class="normal"><sp/><sp/><sp/>stbi__get16le(s);<sp/></highlight><highlight class="comment">//<sp/>discard<sp/>reserved</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5453"><highlight class="normal"><sp/><sp/><sp/>stbi__get16le(s);<sp/></highlight><highlight class="comment">//<sp/>discard<sp/>reserved</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5454"><highlight class="normal"><sp/><sp/><sp/>info-&gt;offset<sp/>=<sp/>stbi__get32le(s);</highlight></codeline>
<codeline lineno="5455"><highlight class="normal"><sp/><sp/><sp/>info-&gt;hsz<sp/>=<sp/>hsz<sp/>=<sp/>stbi__get32le(s);</highlight></codeline>
<codeline lineno="5456"><highlight class="normal"><sp/><sp/><sp/>info-&gt;mr<sp/>=<sp/>info-&gt;mg<sp/>=<sp/>info-&gt;mb<sp/>=<sp/>info-&gt;ma<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="5457"><highlight class="normal"><sp/><sp/><sp/>info-&gt;extra_read<sp/>=<sp/>14;</highlight></codeline>
<codeline lineno="5458"><highlight class="normal"></highlight></codeline>
<codeline lineno="5459"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(info-&gt;offset<sp/>&lt;<sp/>0)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stbi__errpuc(</highlight><highlight class="stringliteral">&quot;bad<sp/>BMP&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;bad<sp/>BMP&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5460"><highlight class="normal"></highlight></codeline>
<codeline lineno="5461"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(hsz<sp/>!=<sp/>12<sp/>&amp;&amp;<sp/>hsz<sp/>!=<sp/>40<sp/>&amp;&amp;<sp/>hsz<sp/>!=<sp/>56<sp/>&amp;&amp;<sp/>hsz<sp/>!=<sp/>108<sp/>&amp;&amp;<sp/>hsz<sp/>!=<sp/>124)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stbi__errpuc(</highlight><highlight class="stringliteral">&quot;unknown<sp/>BMP&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;BMP<sp/>type<sp/>not<sp/>supported:<sp/>unknown&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5462"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(hsz<sp/>==<sp/>12)<sp/>{</highlight></codeline>
<codeline lineno="5463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>s-&gt;img_x<sp/>=<sp/>stbi__get16le(s);</highlight></codeline>
<codeline lineno="5464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>s-&gt;img_y<sp/>=<sp/>stbi__get16le(s);</highlight></codeline>
<codeline lineno="5465"><highlight class="normal"><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="5466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>s-&gt;img_x<sp/>=<sp/>stbi__get32le(s);</highlight></codeline>
<codeline lineno="5467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>s-&gt;img_y<sp/>=<sp/>stbi__get32le(s);</highlight></codeline>
<codeline lineno="5468"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5469"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(stbi__get16le(s)<sp/>!=<sp/>1)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stbi__errpuc(</highlight><highlight class="stringliteral">&quot;bad<sp/>BMP&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;bad<sp/>BMP&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5470"><highlight class="normal"><sp/><sp/><sp/>info-&gt;bpp<sp/>=<sp/>stbi__get16le(s);</highlight></codeline>
<codeline lineno="5471"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(hsz<sp/>!=<sp/>12)<sp/>{</highlight></codeline>
<codeline lineno="5472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>compress<sp/>=<sp/>stbi__get32le(s);</highlight></codeline>
<codeline lineno="5473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(compress<sp/>==<sp/>1<sp/>||<sp/>compress<sp/>==<sp/>2)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stbi__errpuc(</highlight><highlight class="stringliteral">&quot;BMP<sp/>RLE&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;BMP<sp/>type<sp/>not<sp/>supported:<sp/>RLE&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(compress<sp/>&gt;=<sp/>4)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stbi__errpuc(</highlight><highlight class="stringliteral">&quot;BMP<sp/>JPEG/PNG&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;BMP<sp/>type<sp/>not<sp/>supported:<sp/>unsupported<sp/>compression&quot;</highlight><highlight class="normal">);<sp/></highlight><highlight class="comment">//<sp/>this<sp/>includes<sp/>PNG/JPEG<sp/>modes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(compress<sp/>==<sp/>3<sp/>&amp;&amp;<sp/>info-&gt;bpp<sp/>!=<sp/>16<sp/>&amp;&amp;<sp/>info-&gt;bpp<sp/>!=<sp/>32)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stbi__errpuc(</highlight><highlight class="stringliteral">&quot;bad<sp/>BMP&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;bad<sp/>BMP&quot;</highlight><highlight class="normal">);<sp/></highlight><highlight class="comment">//<sp/>bitfields<sp/>requires<sp/>16<sp/>or<sp/>32<sp/>bits/pixel</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stbi__get32le(s);<sp/></highlight><highlight class="comment">//<sp/>discard<sp/>sizeof</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stbi__get32le(s);<sp/></highlight><highlight class="comment">//<sp/>discard<sp/>hres</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stbi__get32le(s);<sp/></highlight><highlight class="comment">//<sp/>discard<sp/>vres</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stbi__get32le(s);<sp/></highlight><highlight class="comment">//<sp/>discard<sp/>colorsused</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stbi__get32le(s);<sp/></highlight><highlight class="comment">//<sp/>discard<sp/>max<sp/>important</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(hsz<sp/>==<sp/>40<sp/>||<sp/>hsz<sp/>==<sp/>56)<sp/>{</highlight></codeline>
<codeline lineno="5482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(hsz<sp/>==<sp/>56)<sp/>{</highlight></codeline>
<codeline lineno="5483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stbi__get32le(s);</highlight></codeline>
<codeline lineno="5484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stbi__get32le(s);</highlight></codeline>
<codeline lineno="5485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stbi__get32le(s);</highlight></codeline>
<codeline lineno="5486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stbi__get32le(s);</highlight></codeline>
<codeline lineno="5487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(info-&gt;bpp<sp/>==<sp/>16<sp/>||<sp/>info-&gt;bpp<sp/>==<sp/>32)<sp/>{</highlight></codeline>
<codeline lineno="5489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(compress<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="5490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stbi__bmp_set_mask_defaults(info,<sp/>compress);</highlight></codeline>
<codeline lineno="5491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(compress<sp/>==<sp/>3)<sp/>{</highlight></codeline>
<codeline lineno="5492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>info-&gt;mr<sp/>=<sp/>stbi__get32le(s);</highlight></codeline>
<codeline lineno="5493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>info-&gt;mg<sp/>=<sp/>stbi__get32le(s);</highlight></codeline>
<codeline lineno="5494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>info-&gt;mb<sp/>=<sp/>stbi__get32le(s);</highlight></codeline>
<codeline lineno="5495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>info-&gt;extra_read<sp/>+=<sp/>12;</highlight></codeline>
<codeline lineno="5496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>not<sp/>documented,<sp/>but<sp/>generated<sp/>by<sp/>photoshop<sp/>and<sp/>handled<sp/>by<sp/>mspaint</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(info-&gt;mr<sp/>==<sp/>info-&gt;mg<sp/>&amp;&amp;<sp/>info-&gt;mg<sp/>==<sp/>info-&gt;mb)<sp/>{</highlight></codeline>
<codeline lineno="5498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>?!?!?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stbi__errpuc(</highlight><highlight class="stringliteral">&quot;bad<sp/>BMP&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;bad<sp/>BMP&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stbi__errpuc(</highlight><highlight class="stringliteral">&quot;bad<sp/>BMP&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;bad<sp/>BMP&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="5505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>V4/V5<sp/>header</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="5507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(hsz<sp/>!=<sp/>108<sp/>&amp;&amp;<sp/>hsz<sp/>!=<sp/>124)</highlight></codeline>
<codeline lineno="5508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stbi__errpuc(</highlight><highlight class="stringliteral">&quot;bad<sp/>BMP&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;bad<sp/>BMP&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>info-&gt;mr<sp/>=<sp/>stbi__get32le(s);</highlight></codeline>
<codeline lineno="5510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>info-&gt;mg<sp/>=<sp/>stbi__get32le(s);</highlight></codeline>
<codeline lineno="5511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>info-&gt;mb<sp/>=<sp/>stbi__get32le(s);</highlight></codeline>
<codeline lineno="5512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>info-&gt;ma<sp/>=<sp/>stbi__get32le(s);</highlight></codeline>
<codeline lineno="5513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(compress<sp/>!=<sp/>3)<sp/></highlight><highlight class="comment">//<sp/>override<sp/>mr/mg/mb<sp/>unless<sp/>in<sp/>BI_BITFIELDS<sp/>mode,<sp/>as<sp/>per<sp/>docs</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stbi__bmp_set_mask_defaults(info,<sp/>compress);</highlight></codeline>
<codeline lineno="5515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stbi__get32le(s);<sp/></highlight><highlight class="comment">//<sp/>discard<sp/>color<sp/>space</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i<sp/>&lt;<sp/>12;<sp/>++i)</highlight></codeline>
<codeline lineno="5517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stbi__get32le(s);<sp/></highlight><highlight class="comment">//<sp/>discard<sp/>color<sp/>space<sp/>parameters</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(hsz<sp/>==<sp/>124)<sp/>{</highlight></codeline>
<codeline lineno="5519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stbi__get32le(s);<sp/></highlight><highlight class="comment">//<sp/>discard<sp/>rendering<sp/>intent</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stbi__get32le(s);<sp/></highlight><highlight class="comment">//<sp/>discard<sp/>offset<sp/>of<sp/>profile<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stbi__get32le(s);<sp/></highlight><highlight class="comment">//<sp/>discard<sp/>size<sp/>of<sp/>profile<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stbi__get32le(s);<sp/></highlight><highlight class="comment">//<sp/>discard<sp/>reserved</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5525"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5526"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)<sp/>1;</highlight></codeline>
<codeline lineno="5527"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5528"><highlight class="normal"></highlight></codeline>
<codeline lineno="5529"><highlight class="normal"></highlight></codeline>
<codeline lineno="5530"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*stbi__bmp_load(stbi__context<sp/>*s,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*x,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*y,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*comp,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>req_comp,<sp/>stbi__result_info<sp/>*ri)</highlight></codeline>
<codeline lineno="5531"><highlight class="normal">{</highlight></codeline>
<codeline lineno="5532"><highlight class="normal"><sp/><sp/><sp/><ref refid="stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d" kindref="member">stbi_uc</ref><sp/>*out;</highlight></codeline>
<codeline lineno="5533"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mr=0,mg=0,mb=0,ma=0,<sp/>all_a;</highlight></codeline>
<codeline lineno="5534"><highlight class="normal"><sp/><sp/><sp/><ref refid="stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d" kindref="member">stbi_uc</ref><sp/>pal[256][4];</highlight></codeline>
<codeline lineno="5535"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>psize=0,i,j,width;</highlight></codeline>
<codeline lineno="5536"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>flip_vertically,<sp/>pad,<sp/>target;</highlight></codeline>
<codeline lineno="5537"><highlight class="normal"><sp/><sp/><sp/>stbi__bmp_data<sp/>info;</highlight></codeline>
<codeline lineno="5538"><highlight class="normal"><sp/><sp/><sp/>STBI_NOTUSED(ri);</highlight></codeline>
<codeline lineno="5539"><highlight class="normal"></highlight></codeline>
<codeline lineno="5540"><highlight class="normal"><sp/><sp/><sp/>info.all_a<sp/>=<sp/>255;</highlight></codeline>
<codeline lineno="5541"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(stbi__bmp_parse_header(s,<sp/>&amp;info)<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="5542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;<sp/></highlight><highlight class="comment">//<sp/>error<sp/>code<sp/>already<sp/>set</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5543"><highlight class="normal"></highlight></codeline>
<codeline lineno="5544"><highlight class="normal"><sp/><sp/><sp/>flip_vertically<sp/>=<sp/>((int)<sp/>s-&gt;img_y)<sp/>&gt;<sp/>0;</highlight></codeline>
<codeline lineno="5545"><highlight class="normal"><sp/><sp/><sp/>s-&gt;img_y<sp/>=<sp/>abs((</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<sp/>s-&gt;img_y);</highlight></codeline>
<codeline lineno="5546"><highlight class="normal"></highlight></codeline>
<codeline lineno="5547"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(s-&gt;img_y<sp/>&gt;<sp/>STBI_MAX_DIMENSIONS)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stbi__errpuc(</highlight><highlight class="stringliteral">&quot;too<sp/>large&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;Very<sp/>large<sp/>image<sp/>(corrupt?)&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5548"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(s-&gt;img_x<sp/>&gt;<sp/>STBI_MAX_DIMENSIONS)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stbi__errpuc(</highlight><highlight class="stringliteral">&quot;too<sp/>large&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;Very<sp/>large<sp/>image<sp/>(corrupt?)&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5549"><highlight class="normal"></highlight></codeline>
<codeline lineno="5550"><highlight class="normal"><sp/><sp/><sp/>mr<sp/>=<sp/>info.mr;</highlight></codeline>
<codeline lineno="5551"><highlight class="normal"><sp/><sp/><sp/>mg<sp/>=<sp/>info.mg;</highlight></codeline>
<codeline lineno="5552"><highlight class="normal"><sp/><sp/><sp/>mb<sp/>=<sp/>info.mb;</highlight></codeline>
<codeline lineno="5553"><highlight class="normal"><sp/><sp/><sp/>ma<sp/>=<sp/>info.ma;</highlight></codeline>
<codeline lineno="5554"><highlight class="normal"><sp/><sp/><sp/>all_a<sp/>=<sp/>info.all_a;</highlight></codeline>
<codeline lineno="5555"><highlight class="normal"></highlight></codeline>
<codeline lineno="5556"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(info.hsz<sp/>==<sp/>12)<sp/>{</highlight></codeline>
<codeline lineno="5557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(info.bpp<sp/>&lt;<sp/>24)</highlight></codeline>
<codeline lineno="5558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>psize<sp/>=<sp/>(info.offset<sp/>-<sp/>info.extra_read<sp/>-<sp/>24)<sp/>/<sp/>3;</highlight></codeline>
<codeline lineno="5559"><highlight class="normal"><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="5560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(info.bpp<sp/>&lt;<sp/>16)</highlight></codeline>
<codeline lineno="5561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>psize<sp/>=<sp/>(info.offset<sp/>-<sp/>info.extra_read<sp/>-<sp/>info.hsz)<sp/>&gt;&gt;<sp/>2;</highlight></codeline>
<codeline lineno="5562"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5563"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(psize<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="5564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>accept<sp/>some<sp/>number<sp/>of<sp/>extra<sp/>bytes<sp/>after<sp/>the<sp/>header,<sp/>but<sp/>if<sp/>the<sp/>offset<sp/>points<sp/>either<sp/>to<sp/>before</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>header<sp/>ends<sp/>or<sp/>implies<sp/>a<sp/>large<sp/>amount<sp/>of<sp/>extra<sp/>data,<sp/>reject<sp/>the<sp/>file<sp/>as<sp/>malformed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bytes_read_so_far<sp/>=<sp/>s-&gt;callback_already_read<sp/>+<sp/>(int)(s-&gt;img_buffer<sp/>-<sp/>s-&gt;img_buffer_original);</highlight></codeline>
<codeline lineno="5567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>header_limit<sp/>=<sp/>1024;<sp/></highlight><highlight class="comment">//<sp/>max<sp/>we<sp/>actually<sp/>read<sp/>is<sp/>below<sp/>256<sp/>bytes<sp/>currently.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>extra_data_limit<sp/>=<sp/>256*4;<sp/></highlight><highlight class="comment">//<sp/>what<sp/>ordinarily<sp/>goes<sp/>here<sp/>is<sp/>a<sp/>palette;<sp/>256<sp/>entries*4<sp/>bytes<sp/>is<sp/>its<sp/>max<sp/>size.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bytes_read_so_far<sp/>&lt;=<sp/>0<sp/>||<sp/>bytes_read_so_far<sp/>&gt;<sp/>header_limit)<sp/>{</highlight></codeline>
<codeline lineno="5570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stbi__errpuc(</highlight><highlight class="stringliteral">&quot;bad<sp/>header&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Corrupt<sp/>BMP&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>we<sp/>established<sp/>that<sp/>bytes_read_so_far<sp/>is<sp/>positive<sp/>and<sp/>sensible.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>first<sp/>half<sp/>of<sp/>this<sp/>test<sp/>rejects<sp/>offsets<sp/>that<sp/>are<sp/>either<sp/>too<sp/>small<sp/>positives,<sp/>or</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>negative,<sp/>and<sp/>guarantees<sp/>that<sp/>info.offset<sp/>&gt;=<sp/>bytes_read_so_far<sp/>&gt;<sp/>0.<sp/>this<sp/>in<sp/>turn</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>ensures<sp/>the<sp/>number<sp/>computed<sp/>in<sp/>the<sp/>second<sp/>half<sp/>of<sp/>the<sp/>test<sp/>can&apos;t<sp/>overflow.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(info.offset<sp/>&lt;<sp/>bytes_read_so_far<sp/>||<sp/>info.offset<sp/>-<sp/>bytes_read_so_far<sp/>&gt;<sp/>extra_data_limit)<sp/>{</highlight></codeline>
<codeline lineno="5577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stbi__errpuc(</highlight><highlight class="stringliteral">&quot;bad<sp/>offset&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Corrupt<sp/>BMP&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="5579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stbi__skip(s,<sp/>info.offset<sp/>-<sp/>bytes_read_so_far);</highlight></codeline>
<codeline lineno="5580"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5581"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5582"><highlight class="normal"></highlight></codeline>
<codeline lineno="5583"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(info.bpp<sp/>==<sp/>24<sp/>&amp;&amp;<sp/>ma<sp/>==<sp/>0xff000000)</highlight></codeline>
<codeline lineno="5584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>s-&gt;img_n<sp/>=<sp/>3;</highlight></codeline>
<codeline lineno="5585"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5586"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>s-&gt;img_n<sp/>=<sp/>ma<sp/>?<sp/>4<sp/>:<sp/>3;</highlight></codeline>
<codeline lineno="5587"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(req_comp<sp/>&amp;&amp;<sp/>req_comp<sp/>&gt;=<sp/>3)<sp/></highlight><highlight class="comment">//<sp/>we<sp/>can<sp/>directly<sp/>decode<sp/>3<sp/>or<sp/>4</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5588"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>target<sp/>=<sp/>req_comp;</highlight></codeline>
<codeline lineno="5589"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5590"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>target<sp/>=<sp/>s-&gt;img_n;<sp/></highlight><highlight class="comment">//<sp/>if<sp/>they<sp/>want<sp/>monochrome,<sp/>we&apos;ll<sp/>post-convert</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5591"><highlight class="normal"></highlight></codeline>
<codeline lineno="5592"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>sanity-check<sp/>size</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5593"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!stbi__mad3sizes_valid(target,<sp/>s-&gt;img_x,<sp/>s-&gt;img_y,<sp/>0))</highlight></codeline>
<codeline lineno="5594"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stbi__errpuc(</highlight><highlight class="stringliteral">&quot;too<sp/>large&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Corrupt<sp/>BMP&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5595"><highlight class="normal"></highlight></codeline>
<codeline lineno="5596"><highlight class="normal"><sp/><sp/><sp/>out<sp/>=<sp/>(<ref refid="stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d" kindref="member">stbi_uc</ref><sp/>*)<sp/>stbi__malloc_mad3(target,<sp/>s-&gt;img_x,<sp/>s-&gt;img_y,<sp/>0);</highlight></codeline>
<codeline lineno="5597"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!out)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stbi__errpuc(</highlight><highlight class="stringliteral">&quot;outofmem&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Out<sp/>of<sp/>memory&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5598"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(info.bpp<sp/>&lt;<sp/>16)<sp/>{</highlight></codeline>
<codeline lineno="5599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>z=0;</highlight></codeline>
<codeline lineno="5600"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(psize<sp/>==<sp/>0<sp/>||<sp/>psize<sp/>&gt;<sp/>256)<sp/>{<sp/>STBI_FREE(out);<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stbi__errpuc(</highlight><highlight class="stringliteral">&quot;invalid&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Corrupt<sp/>BMP&quot;</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="5601"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i<sp/>&lt;<sp/>psize;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="5602"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pal[i][2]<sp/>=<sp/>stbi__get8(s);</highlight></codeline>
<codeline lineno="5603"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pal[i][1]<sp/>=<sp/>stbi__get8(s);</highlight></codeline>
<codeline lineno="5604"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pal[i][0]<sp/>=<sp/>stbi__get8(s);</highlight></codeline>
<codeline lineno="5605"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(info.hsz<sp/>!=<sp/>12)<sp/>stbi__get8(s);</highlight></codeline>
<codeline lineno="5606"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pal[i][3]<sp/>=<sp/>255;</highlight></codeline>
<codeline lineno="5607"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5608"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stbi__skip(s,<sp/>info.offset<sp/>-<sp/>info.extra_read<sp/>-<sp/>info.hsz<sp/>-<sp/>psize<sp/>*<sp/>(info.hsz<sp/>==<sp/>12<sp/>?<sp/>3<sp/>:<sp/>4));</highlight></codeline>
<codeline lineno="5609"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(info.bpp<sp/>==<sp/>1)<sp/>width<sp/>=<sp/>(s-&gt;img_x<sp/>+<sp/>7)<sp/>&gt;&gt;<sp/>3;</highlight></codeline>
<codeline lineno="5610"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(info.bpp<sp/>==<sp/>4)<sp/>width<sp/>=<sp/>(s-&gt;img_x<sp/>+<sp/>1)<sp/>&gt;&gt;<sp/>1;</highlight></codeline>
<codeline lineno="5611"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(info.bpp<sp/>==<sp/>8)<sp/>width<sp/>=<sp/>s-&gt;img_x;</highlight></codeline>
<codeline lineno="5612"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{<sp/>STBI_FREE(out);<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stbi__errpuc(</highlight><highlight class="stringliteral">&quot;bad<sp/>bpp&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Corrupt<sp/>BMP&quot;</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="5613"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pad<sp/>=<sp/>(-width)&amp;3;</highlight></codeline>
<codeline lineno="5614"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(info.bpp<sp/>==<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="5615"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(j=0;<sp/>j<sp/>&lt;<sp/>(int)<sp/>s-&gt;img_y;<sp/>++j)<sp/>{</highlight></codeline>
<codeline lineno="5616"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bit_offset<sp/>=<sp/>7,<sp/>v<sp/>=<sp/>stbi__get8(s);</highlight></codeline>
<codeline lineno="5617"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i<sp/>&lt;<sp/>(int)<sp/>s-&gt;img_x;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="5618"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>color<sp/>=<sp/>(v&gt;&gt;bit_offset)&amp;0x1;</highlight></codeline>
<codeline lineno="5619"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out[z++]<sp/>=<sp/>pal[color][0];</highlight></codeline>
<codeline lineno="5620"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out[z++]<sp/>=<sp/>pal[color][1];</highlight></codeline>
<codeline lineno="5621"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out[z++]<sp/>=<sp/>pal[color][2];</highlight></codeline>
<codeline lineno="5622"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(target<sp/>==<sp/>4)<sp/>out[z++]<sp/>=<sp/>255;</highlight></codeline>
<codeline lineno="5623"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i+1<sp/>==<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<sp/>s-&gt;img_x)<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5624"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((--bit_offset)<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="5625"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bit_offset<sp/>=<sp/>7;</highlight></codeline>
<codeline lineno="5626"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v<sp/>=<sp/>stbi__get8(s);</highlight></codeline>
<codeline lineno="5627"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5628"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5629"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stbi__skip(s,<sp/>pad);</highlight></codeline>
<codeline lineno="5630"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5631"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="5632"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(j=0;<sp/>j<sp/>&lt;<sp/>(int)<sp/>s-&gt;img_y;<sp/>++j)<sp/>{</highlight></codeline>
<codeline lineno="5633"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i<sp/>&lt;<sp/>(int)<sp/>s-&gt;img_x;<sp/>i<sp/>+=<sp/>2)<sp/>{</highlight></codeline>
<codeline lineno="5634"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>v=stbi__get8(s),v2=0;</highlight></codeline>
<codeline lineno="5635"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(info.bpp<sp/>==<sp/>4)<sp/>{</highlight></codeline>
<codeline lineno="5636"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v2<sp/>=<sp/>v<sp/>&amp;<sp/>15;</highlight></codeline>
<codeline lineno="5637"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v<sp/>&gt;&gt;=<sp/>4;</highlight></codeline>
<codeline lineno="5638"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5639"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out[z++]<sp/>=<sp/>pal[v][0];</highlight></codeline>
<codeline lineno="5640"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out[z++]<sp/>=<sp/>pal[v][1];</highlight></codeline>
<codeline lineno="5641"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out[z++]<sp/>=<sp/>pal[v][2];</highlight></codeline>
<codeline lineno="5642"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(target<sp/>==<sp/>4)<sp/>out[z++]<sp/>=<sp/>255;</highlight></codeline>
<codeline lineno="5643"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i+1<sp/>==<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<sp/>s-&gt;img_x)<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5644"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v<sp/>=<sp/>(info.bpp<sp/>==<sp/>8)<sp/>?<sp/>stbi__get8(s)<sp/>:<sp/>v2;</highlight></codeline>
<codeline lineno="5645"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out[z++]<sp/>=<sp/>pal[v][0];</highlight></codeline>
<codeline lineno="5646"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out[z++]<sp/>=<sp/>pal[v][1];</highlight></codeline>
<codeline lineno="5647"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out[z++]<sp/>=<sp/>pal[v][2];</highlight></codeline>
<codeline lineno="5648"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(target<sp/>==<sp/>4)<sp/>out[z++]<sp/>=<sp/>255;</highlight></codeline>
<codeline lineno="5649"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5650"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stbi__skip(s,<sp/>pad);</highlight></codeline>
<codeline lineno="5651"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5652"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5653"><highlight class="normal"><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="5654"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rshift=0,gshift=0,bshift=0,ashift=0,rcount=0,gcount=0,bcount=0,acount=0;</highlight></codeline>
<codeline lineno="5655"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>z<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="5656"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>easy=0;</highlight></codeline>
<codeline lineno="5657"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stbi__skip(s,<sp/>info.offset<sp/>-<sp/>info.extra_read<sp/>-<sp/>info.hsz);</highlight></codeline>
<codeline lineno="5658"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(info.bpp<sp/>==<sp/>24)<sp/>width<sp/>=<sp/>3<sp/>*<sp/>s-&gt;img_x;</highlight></codeline>
<codeline lineno="5659"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(info.bpp<sp/>==<sp/>16)<sp/>width<sp/>=<sp/>2*s-&gt;img_x;</highlight></codeline>
<codeline lineno="5660"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">/*<sp/>bpp<sp/>=<sp/>32<sp/>and<sp/>pad<sp/>=<sp/>0<sp/>*/</highlight><highlight class="normal"><sp/>width=0;</highlight></codeline>
<codeline lineno="5661"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pad<sp/>=<sp/>(-width)<sp/>&amp;<sp/>3;</highlight></codeline>
<codeline lineno="5662"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(info.bpp<sp/>==<sp/>24)<sp/>{</highlight></codeline>
<codeline lineno="5663"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>easy<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="5664"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(info.bpp<sp/>==<sp/>32)<sp/>{</highlight></codeline>
<codeline lineno="5665"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mb<sp/>==<sp/>0xff<sp/>&amp;&amp;<sp/>mg<sp/>==<sp/>0xff00<sp/>&amp;&amp;<sp/>mr<sp/>==<sp/>0x00ff0000<sp/>&amp;&amp;<sp/>ma<sp/>==<sp/>0xff000000)</highlight></codeline>
<codeline lineno="5666"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>easy<sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="5667"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5668"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!easy)<sp/>{</highlight></codeline>
<codeline lineno="5669"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!mr<sp/>||<sp/>!mg<sp/>||<sp/>!mb)<sp/>{<sp/>STBI_FREE(out);<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stbi__errpuc(</highlight><highlight class="stringliteral">&quot;bad<sp/>masks&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Corrupt<sp/>BMP&quot;</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="5670"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>right<sp/>shift<sp/>amt<sp/>to<sp/>put<sp/>high<sp/>bit<sp/>in<sp/>position<sp/>#7</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5671"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rshift<sp/>=<sp/>stbi__high_bit(mr)-7;<sp/>rcount<sp/>=<sp/>stbi__bitcount(mr);</highlight></codeline>
<codeline lineno="5672"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gshift<sp/>=<sp/>stbi__high_bit(mg)-7;<sp/>gcount<sp/>=<sp/>stbi__bitcount(mg);</highlight></codeline>
<codeline lineno="5673"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bshift<sp/>=<sp/>stbi__high_bit(mb)-7;<sp/>bcount<sp/>=<sp/>stbi__bitcount(mb);</highlight></codeline>
<codeline lineno="5674"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ashift<sp/>=<sp/>stbi__high_bit(ma)-7;<sp/>acount<sp/>=<sp/>stbi__bitcount(ma);</highlight></codeline>
<codeline lineno="5675"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rcount<sp/>&gt;<sp/>8<sp/>||<sp/>gcount<sp/>&gt;<sp/>8<sp/>||<sp/>bcount<sp/>&gt;<sp/>8<sp/>||<sp/>acount<sp/>&gt;<sp/>8)<sp/>{<sp/>STBI_FREE(out);<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stbi__errpuc(</highlight><highlight class="stringliteral">&quot;bad<sp/>masks&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Corrupt<sp/>BMP&quot;</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="5676"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5677"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(j=0;<sp/>j<sp/>&lt;<sp/>(int)<sp/>s-&gt;img_y;<sp/>++j)<sp/>{</highlight></codeline>
<codeline lineno="5678"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(easy)<sp/>{</highlight></codeline>
<codeline lineno="5679"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i<sp/>&lt;<sp/>(int)<sp/>s-&gt;img_x;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="5680"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>a;</highlight></codeline>
<codeline lineno="5681"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out[z+2]<sp/>=<sp/>stbi__get8(s);</highlight></codeline>
<codeline lineno="5682"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out[z+1]<sp/>=<sp/>stbi__get8(s);</highlight></codeline>
<codeline lineno="5683"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out[z+0]<sp/>=<sp/>stbi__get8(s);</highlight></codeline>
<codeline lineno="5684"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>z<sp/>+=<sp/>3;</highlight></codeline>
<codeline lineno="5685"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>a<sp/>=<sp/>(easy<sp/>==<sp/>2<sp/>?<sp/>stbi__get8(s)<sp/>:<sp/>255);</highlight></codeline>
<codeline lineno="5686"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>all_a<sp/>|=<sp/>a;</highlight></codeline>
<codeline lineno="5687"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(target<sp/>==<sp/>4)<sp/>out[z++]<sp/>=<sp/>a;</highlight></codeline>
<codeline lineno="5688"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5689"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="5690"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bpp<sp/>=<sp/>info.bpp;</highlight></codeline>
<codeline lineno="5691"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i<sp/>&lt;<sp/>(int)<sp/>s-&gt;img_x;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="5692"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stbi__uint32<sp/>v<sp/>=<sp/>(bpp<sp/>==<sp/>16<sp/>?<sp/>(stbi__uint32)<sp/>stbi__get16le(s)<sp/>:<sp/>stbi__get32le(s));</highlight></codeline>
<codeline lineno="5693"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>a;</highlight></codeline>
<codeline lineno="5694"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out[z++]<sp/>=<sp/>STBI__BYTECAST(stbi__shiftsigned(v<sp/>&amp;<sp/>mr,<sp/>rshift,<sp/>rcount));</highlight></codeline>
<codeline lineno="5695"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out[z++]<sp/>=<sp/>STBI__BYTECAST(stbi__shiftsigned(v<sp/>&amp;<sp/>mg,<sp/>gshift,<sp/>gcount));</highlight></codeline>
<codeline lineno="5696"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out[z++]<sp/>=<sp/>STBI__BYTECAST(stbi__shiftsigned(v<sp/>&amp;<sp/>mb,<sp/>bshift,<sp/>bcount));</highlight></codeline>
<codeline lineno="5697"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>a<sp/>=<sp/>(ma<sp/>?<sp/>stbi__shiftsigned(v<sp/>&amp;<sp/>ma,<sp/>ashift,<sp/>acount)<sp/>:<sp/>255);</highlight></codeline>
<codeline lineno="5698"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>all_a<sp/>|=<sp/>a;</highlight></codeline>
<codeline lineno="5699"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(target<sp/>==<sp/>4)<sp/>out[z++]<sp/>=<sp/>STBI__BYTECAST(a);</highlight></codeline>
<codeline lineno="5700"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5701"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5702"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stbi__skip(s,<sp/>pad);</highlight></codeline>
<codeline lineno="5703"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5704"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5705"><highlight class="normal"></highlight></codeline>
<codeline lineno="5706"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>alpha<sp/>channel<sp/>is<sp/>all<sp/>0s,<sp/>replace<sp/>with<sp/>all<sp/>255s</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5707"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(target<sp/>==<sp/>4<sp/>&amp;&amp;<sp/>all_a<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="5708"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=4*s-&gt;img_x*s-&gt;img_y-1;<sp/>i<sp/>&gt;=<sp/>0;<sp/>i<sp/>-=<sp/>4)</highlight></codeline>
<codeline lineno="5709"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out[i]<sp/>=<sp/>255;</highlight></codeline>
<codeline lineno="5710"><highlight class="normal"></highlight></codeline>
<codeline lineno="5711"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(flip_vertically)<sp/>{</highlight></codeline>
<codeline lineno="5712"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d" kindref="member">stbi_uc</ref><sp/>t;</highlight></codeline>
<codeline lineno="5713"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(j=0;<sp/>j<sp/>&lt;<sp/>(int)<sp/>s-&gt;img_y&gt;&gt;1;<sp/>++j)<sp/>{</highlight></codeline>
<codeline lineno="5714"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d" kindref="member">stbi_uc</ref><sp/>*p1<sp/>=<sp/>out<sp/>+<sp/><sp/><sp/><sp/><sp/><sp/>j<sp/><sp/><sp/><sp/><sp/>*s-&gt;img_x*target;</highlight></codeline>
<codeline lineno="5715"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d" kindref="member">stbi_uc</ref><sp/>*p2<sp/>=<sp/>out<sp/>+<sp/>(s-&gt;img_y-1-j)*s-&gt;img_x*target;</highlight></codeline>
<codeline lineno="5716"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for<sp/>(i=0;<sp/>i<sp/>&lt;<sp/>(int)<sp/>s-&gt;img_x*target;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="5717"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t<sp/>=<sp/>p1[i];<sp/>p1[i]<sp/>=<sp/>p2[i];<sp/>p2[i]<sp/>=<sp/>t;</highlight></codeline>
<codeline lineno="5718"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5719"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5720"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5721"><highlight class="normal"></highlight></codeline>
<codeline lineno="5722"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(req_comp<sp/>&amp;&amp;<sp/>req_comp<sp/>!=<sp/>target)<sp/>{</highlight></codeline>
<codeline lineno="5723"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>out<sp/>=<sp/>stbi__convert_format(out,<sp/>target,<sp/>req_comp,<sp/>s-&gt;img_x,<sp/>s-&gt;img_y);</highlight></codeline>
<codeline lineno="5724"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(out<sp/>==<sp/>NULL)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>out;<sp/></highlight><highlight class="comment">//<sp/>stbi__convert_format<sp/>frees<sp/>input<sp/>on<sp/>failure</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5725"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5726"><highlight class="normal"></highlight></codeline>
<codeline lineno="5727"><highlight class="normal"><sp/><sp/><sp/>*x<sp/>=<sp/>s-&gt;img_x;</highlight></codeline>
<codeline lineno="5728"><highlight class="normal"><sp/><sp/><sp/>*y<sp/>=<sp/>s-&gt;img_y;</highlight></codeline>
<codeline lineno="5729"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(comp)<sp/>*comp<sp/>=<sp/>s-&gt;img_n;</highlight></codeline>
<codeline lineno="5730"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>out;</highlight></codeline>
<codeline lineno="5731"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5732"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5733"><highlight class="normal"></highlight></codeline>
<codeline lineno="5734"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Targa<sp/>Truevision<sp/>-<sp/>TGA</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5735"><highlight class="normal"></highlight><highlight class="comment">//<sp/>by<sp/>Jonathan<sp/>Dummer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5736"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>STBI_NO_TGA</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5737"><highlight class="normal"></highlight><highlight class="comment">//<sp/>returns<sp/>STBI_rgb<sp/>or<sp/>whatever,<sp/>0<sp/>on<sp/>error</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5738"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>stbi__tga_get_comp(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bits_per_pixel,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>is_grey,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>is_rgb16)</highlight></codeline>
<codeline lineno="5739"><highlight class="normal">{</highlight></codeline>
<codeline lineno="5740"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>only<sp/>RGB<sp/>or<sp/>RGBA<sp/>(incl.<sp/>16bit)<sp/>or<sp/>grey<sp/>allowed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5741"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(is_rgb16)<sp/>*is_rgb16<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="5742"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(bits_per_pixel)<sp/>{</highlight></codeline>
<codeline lineno="5743"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>8:<sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="stb__image_8h_1a06fc87d81c62e9abb8790b6e5713c55bad1eb95ca1fa7706bf732bf35a0ed40aa" kindref="member">STBI_grey</ref>;</highlight></codeline>
<codeline lineno="5744"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>16:<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(is_grey)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="stb__image_8h_1a06fc87d81c62e9abb8790b6e5713c55baf5829d16d4cca6077465c5abd346e2f8" kindref="member">STBI_grey_alpha</ref>;</highlight></codeline>
<codeline lineno="5745"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>fallthrough</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5746"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>15:<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(is_rgb16)<sp/>*is_rgb16<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="5747"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="stb__image_8h_1a06fc87d81c62e9abb8790b6e5713c55baa59123e5d0af25f9b1539f5cf1facddf" kindref="member">STBI_rgb</ref>;</highlight></codeline>
<codeline lineno="5748"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>24:<sp/></highlight><highlight class="comment">//<sp/>fallthrough</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5749"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>32:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>bits_per_pixel/8;</highlight></codeline>
<codeline lineno="5750"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="5751"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5752"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5753"><highlight class="normal"></highlight></codeline>
<codeline lineno="5754"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>stbi__tga_info(stbi__context<sp/>*s,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*x,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*y,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*comp)</highlight></codeline>
<codeline lineno="5755"><highlight class="normal">{</highlight></codeline>
<codeline lineno="5756"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tga_w,<sp/>tga_h,<sp/>tga_comp,<sp/>tga_image_type,<sp/>tga_bits_per_pixel,<sp/>tga_colormap_bpp;</highlight></codeline>
<codeline lineno="5757"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sz,<sp/>tga_colormap_type;</highlight></codeline>
<codeline lineno="5758"><highlight class="normal"><sp/><sp/><sp/><sp/>stbi__get8(s);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>discard<sp/>Offset</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5759"><highlight class="normal"><sp/><sp/><sp/><sp/>tga_colormap_type<sp/>=<sp/>stbi__get8(s);<sp/></highlight><highlight class="comment">//<sp/>colormap<sp/>type</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5760"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>tga_colormap_type<sp/>&gt;<sp/>1<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="5761"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stbi__rewind(s);</highlight></codeline>
<codeline lineno="5762"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>only<sp/>RGB<sp/>or<sp/>indexed<sp/>allowed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5763"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5764"><highlight class="normal"><sp/><sp/><sp/><sp/>tga_image_type<sp/>=<sp/>stbi__get8(s);<sp/></highlight><highlight class="comment">//<sp/>image<sp/>type</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5765"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>tga_colormap_type<sp/>==<sp/>1<sp/>)<sp/>{<sp/></highlight><highlight class="comment">//<sp/>colormapped<sp/>(paletted)<sp/>image</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5766"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tga_image_type<sp/>!=<sp/>1<sp/>&amp;&amp;<sp/>tga_image_type<sp/>!=<sp/>9)<sp/>{</highlight></codeline>
<codeline lineno="5767"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stbi__rewind(s);</highlight></codeline>
<codeline lineno="5768"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="5769"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5770"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stbi__skip(s,4);<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>skip<sp/>index<sp/>of<sp/>first<sp/>colormap<sp/>entry<sp/>and<sp/>number<sp/>of<sp/>entries</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5771"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sz<sp/>=<sp/>stbi__get8(s);<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>check<sp/>bits<sp/>per<sp/>palette<sp/>color<sp/>entry</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5772"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>(sz<sp/>!=<sp/>8)<sp/>&amp;&amp;<sp/>(sz<sp/>!=<sp/>15)<sp/>&amp;&amp;<sp/>(sz<sp/>!=<sp/>16)<sp/>&amp;&amp;<sp/>(sz<sp/>!=<sp/>24)<sp/>&amp;&amp;<sp/>(sz<sp/>!=<sp/>32)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="5773"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stbi__rewind(s);</highlight></codeline>
<codeline lineno="5774"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="5775"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5776"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stbi__skip(s,4);<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>skip<sp/>image<sp/>x<sp/>and<sp/>y<sp/>origin</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5777"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tga_colormap_bpp<sp/>=<sp/>sz;</highlight></codeline>
<codeline lineno="5778"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{<sp/></highlight><highlight class="comment">//<sp/>&quot;normal&quot;<sp/>image<sp/>w/o<sp/>colormap<sp/>-<sp/>only<sp/>RGB<sp/>or<sp/>grey<sp/>allowed,<sp/>+/-<sp/>RLE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5779"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>(tga_image_type<sp/>!=<sp/>2)<sp/>&amp;&amp;<sp/>(tga_image_type<sp/>!=<sp/>3)<sp/>&amp;&amp;<sp/>(tga_image_type<sp/>!=<sp/>10)<sp/>&amp;&amp;<sp/>(tga_image_type<sp/>!=<sp/>11)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="5780"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stbi__rewind(s);</highlight></codeline>
<codeline lineno="5781"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;<sp/></highlight><highlight class="comment">//<sp/>only<sp/>RGB<sp/>or<sp/>grey<sp/>allowed,<sp/>+/-<sp/>RLE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5782"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5783"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stbi__skip(s,9);<sp/></highlight><highlight class="comment">//<sp/>skip<sp/>colormap<sp/>specification<sp/>and<sp/>image<sp/>x/y<sp/>origin</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5784"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tga_colormap_bpp<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="5785"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5786"><highlight class="normal"><sp/><sp/><sp/><sp/>tga_w<sp/>=<sp/>stbi__get16le(s);</highlight></codeline>
<codeline lineno="5787"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>tga_w<sp/>&lt;<sp/>1<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="5788"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stbi__rewind(s);</highlight></codeline>
<codeline lineno="5789"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>test<sp/>width</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5790"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5791"><highlight class="normal"><sp/><sp/><sp/><sp/>tga_h<sp/>=<sp/>stbi__get16le(s);</highlight></codeline>
<codeline lineno="5792"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>tga_h<sp/>&lt;<sp/>1<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="5793"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stbi__rewind(s);</highlight></codeline>
<codeline lineno="5794"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>test<sp/>height</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5795"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5796"><highlight class="normal"><sp/><sp/><sp/><sp/>tga_bits_per_pixel<sp/>=<sp/>stbi__get8(s);<sp/></highlight><highlight class="comment">//<sp/>bits<sp/>per<sp/>pixel</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5797"><highlight class="normal"><sp/><sp/><sp/><sp/>stbi__get8(s);<sp/></highlight><highlight class="comment">//<sp/>ignore<sp/>alpha<sp/>bits</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5798"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tga_colormap_bpp<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="5799"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((tga_bits_per_pixel<sp/>!=<sp/>8)<sp/>&amp;&amp;<sp/>(tga_bits_per_pixel<sp/>!=<sp/>16))<sp/>{</highlight></codeline>
<codeline lineno="5800"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>when<sp/>using<sp/>a<sp/>colormap,<sp/>tga_bits_per_pixel<sp/>is<sp/>the<sp/>size<sp/>of<sp/>the<sp/>indexes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5801"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>I<sp/>don&apos;t<sp/>think<sp/>anything<sp/>but<sp/>8<sp/>or<sp/>16bit<sp/>indexes<sp/>makes<sp/>sense</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5802"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stbi__rewind(s);</highlight></codeline>
<codeline lineno="5803"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="5804"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5805"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tga_comp<sp/>=<sp/>stbi__tga_get_comp(tga_colormap_bpp,<sp/>0,<sp/>NULL);</highlight></codeline>
<codeline lineno="5806"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="5807"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tga_comp<sp/>=<sp/>stbi__tga_get_comp(tga_bits_per_pixel,<sp/>(tga_image_type<sp/>==<sp/>3)<sp/>||<sp/>(tga_image_type<sp/>==<sp/>11),<sp/>NULL);</highlight></codeline>
<codeline lineno="5808"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5809"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!tga_comp)<sp/>{</highlight></codeline>
<codeline lineno="5810"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stbi__rewind(s);</highlight></codeline>
<codeline lineno="5811"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="5812"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5813"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(x)<sp/>*x<sp/>=<sp/>tga_w;</highlight></codeline>
<codeline lineno="5814"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(y)<sp/>*y<sp/>=<sp/>tga_h;</highlight></codeline>
<codeline lineno="5815"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(comp)<sp/>*comp<sp/>=<sp/>tga_comp;</highlight></codeline>
<codeline lineno="5816"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>seems<sp/>to<sp/>have<sp/>passed<sp/>everything</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5817"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5818"><highlight class="normal"></highlight></codeline>
<codeline lineno="5819"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>stbi__tga_test(stbi__context<sp/>*s)</highlight></codeline>
<codeline lineno="5820"><highlight class="normal">{</highlight></codeline>
<codeline lineno="5821"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>res<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="5822"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sz,<sp/>tga_color_type;</highlight></codeline>
<codeline lineno="5823"><highlight class="normal"><sp/><sp/><sp/>stbi__get8(s);<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>discard<sp/>Offset</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5824"><highlight class="normal"><sp/><sp/><sp/>tga_color_type<sp/>=<sp/>stbi__get8(s);<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>color<sp/>type</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5825"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>tga_color_type<sp/>&gt;<sp/>1<sp/>)<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>errorEnd;<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>only<sp/>RGB<sp/>or<sp/>indexed<sp/>allowed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5826"><highlight class="normal"><sp/><sp/><sp/>sz<sp/>=<sp/>stbi__get8(s);<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>image<sp/>type</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5827"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>tga_color_type<sp/>==<sp/>1<sp/>)<sp/>{<sp/></highlight><highlight class="comment">//<sp/>colormapped<sp/>(paletted)<sp/>image</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5828"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sz<sp/>!=<sp/>1<sp/>&amp;&amp;<sp/>sz<sp/>!=<sp/>9)<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>errorEnd;<sp/></highlight><highlight class="comment">//<sp/>colortype<sp/>1<sp/>demands<sp/>image<sp/>type<sp/>1<sp/>or<sp/>9</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5829"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stbi__skip(s,4);<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>skip<sp/>index<sp/>of<sp/>first<sp/>colormap<sp/>entry<sp/>and<sp/>number<sp/>of<sp/>entries</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5830"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>sz<sp/>=<sp/>stbi__get8(s);<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>check<sp/>bits<sp/>per<sp/>palette<sp/>color<sp/>entry</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5831"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>(sz<sp/>!=<sp/>8)<sp/>&amp;&amp;<sp/>(sz<sp/>!=<sp/>15)<sp/>&amp;&amp;<sp/>(sz<sp/>!=<sp/>16)<sp/>&amp;&amp;<sp/>(sz<sp/>!=<sp/>24)<sp/>&amp;&amp;<sp/>(sz<sp/>!=<sp/>32)<sp/>)<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>errorEnd;</highlight></codeline>
<codeline lineno="5832"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stbi__skip(s,4);<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>skip<sp/>image<sp/>x<sp/>and<sp/>y<sp/>origin</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5833"><highlight class="normal"><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{<sp/></highlight><highlight class="comment">//<sp/>&quot;normal&quot;<sp/>image<sp/>w/o<sp/>colormap</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5834"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>(sz<sp/>!=<sp/>2)<sp/>&amp;&amp;<sp/>(sz<sp/>!=<sp/>3)<sp/>&amp;&amp;<sp/>(sz<sp/>!=<sp/>10)<sp/>&amp;&amp;<sp/>(sz<sp/>!=<sp/>11)<sp/>)<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>errorEnd;<sp/></highlight><highlight class="comment">//<sp/>only<sp/>RGB<sp/>or<sp/>grey<sp/>allowed,<sp/>+/-<sp/>RLE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5835"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stbi__skip(s,9);<sp/></highlight><highlight class="comment">//<sp/>skip<sp/>colormap<sp/>specification<sp/>and<sp/>image<sp/>x/y<sp/>origin</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5836"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5837"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>stbi__get16le(s)<sp/>&lt;<sp/>1<sp/>)<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>errorEnd;<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>test<sp/>width</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5838"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>stbi__get16le(s)<sp/>&lt;<sp/>1<sp/>)<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>errorEnd;<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>test<sp/>height</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5839"><highlight class="normal"><sp/><sp/><sp/>sz<sp/>=<sp/>stbi__get8(s);<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>bits<sp/>per<sp/>pixel</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5840"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>(tga_color_type<sp/>==<sp/>1)<sp/>&amp;&amp;<sp/>(sz<sp/>!=<sp/>8)<sp/>&amp;&amp;<sp/>(sz<sp/>!=<sp/>16)<sp/>)<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>errorEnd;<sp/></highlight><highlight class="comment">//<sp/>for<sp/>colormapped<sp/>images,<sp/>bpp<sp/>is<sp/>size<sp/>of<sp/>an<sp/>index</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5841"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>(sz<sp/>!=<sp/>8)<sp/>&amp;&amp;<sp/>(sz<sp/>!=<sp/>15)<sp/>&amp;&amp;<sp/>(sz<sp/>!=<sp/>16)<sp/>&amp;&amp;<sp/>(sz<sp/>!=<sp/>24)<sp/>&amp;&amp;<sp/>(sz<sp/>!=<sp/>32)<sp/>)<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>errorEnd;</highlight></codeline>
<codeline lineno="5842"><highlight class="normal"></highlight></codeline>
<codeline lineno="5843"><highlight class="normal"><sp/><sp/><sp/>res<sp/>=<sp/>1;<sp/></highlight><highlight class="comment">//<sp/>if<sp/>we<sp/>got<sp/>this<sp/>far,<sp/>everything&apos;s<sp/>good<sp/>and<sp/>we<sp/>can<sp/>return<sp/>1<sp/>instead<sp/>of<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5844"><highlight class="normal"></highlight></codeline>
<codeline lineno="5845"><highlight class="normal">errorEnd:</highlight></codeline>
<codeline lineno="5846"><highlight class="normal"><sp/><sp/><sp/>stbi__rewind(s);</highlight></codeline>
<codeline lineno="5847"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>res;</highlight></codeline>
<codeline lineno="5848"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5849"><highlight class="normal"></highlight></codeline>
<codeline lineno="5850"><highlight class="normal"></highlight><highlight class="comment">//<sp/>read<sp/>16bit<sp/>value<sp/>and<sp/>convert<sp/>to<sp/>24bit<sp/>RGB</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5851"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>stbi__tga_read_rgb16(stbi__context<sp/>*s,<sp/><ref refid="stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d" kindref="member">stbi_uc</ref>*<sp/>out)</highlight></codeline>
<codeline lineno="5852"><highlight class="normal">{</highlight></codeline>
<codeline lineno="5853"><highlight class="normal"><sp/><sp/><sp/>stbi__uint16<sp/>px<sp/>=<sp/>(stbi__uint16)stbi__get16le(s);</highlight></codeline>
<codeline lineno="5854"><highlight class="normal"><sp/><sp/><sp/>stbi__uint16<sp/>fiveBitMask<sp/>=<sp/>31;</highlight></codeline>
<codeline lineno="5855"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>we<sp/>have<sp/>3<sp/>channels<sp/>with<sp/>5bits<sp/>each</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5856"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>r<sp/>=<sp/>(px<sp/>&gt;&gt;<sp/>10)<sp/>&amp;<sp/>fiveBitMask;</highlight></codeline>
<codeline lineno="5857"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>g<sp/>=<sp/>(px<sp/>&gt;&gt;<sp/>5)<sp/>&amp;<sp/>fiveBitMask;</highlight></codeline>
<codeline lineno="5858"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>b<sp/>=<sp/>px<sp/>&amp;<sp/>fiveBitMask;</highlight></codeline>
<codeline lineno="5859"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Note<sp/>that<sp/>this<sp/>saves<sp/>the<sp/>data<sp/>in<sp/>RGB(A)<sp/>order,<sp/>so<sp/>it<sp/>doesn&apos;t<sp/>need<sp/>to<sp/>be<sp/>swapped<sp/>later</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5860"><highlight class="normal"><sp/><sp/><sp/>out[0]<sp/>=<sp/>(<ref refid="stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d" kindref="member">stbi_uc</ref>)((r<sp/>*<sp/>255)/31);</highlight></codeline>
<codeline lineno="5861"><highlight class="normal"><sp/><sp/><sp/>out[1]<sp/>=<sp/>(<ref refid="stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d" kindref="member">stbi_uc</ref>)((g<sp/>*<sp/>255)/31);</highlight></codeline>
<codeline lineno="5862"><highlight class="normal"><sp/><sp/><sp/>out[2]<sp/>=<sp/>(<ref refid="stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d" kindref="member">stbi_uc</ref>)((b<sp/>*<sp/>255)/31);</highlight></codeline>
<codeline lineno="5863"><highlight class="normal"></highlight></codeline>
<codeline lineno="5864"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>some<sp/>people<sp/>claim<sp/>that<sp/>the<sp/>most<sp/>significant<sp/>bit<sp/>might<sp/>be<sp/>used<sp/>for<sp/>alpha</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5865"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>(possibly<sp/>if<sp/>an<sp/>alpha-bit<sp/>is<sp/>set<sp/>in<sp/>the<sp/>&quot;image<sp/>descriptor<sp/>byte&quot;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5866"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>but<sp/>that<sp/>only<sp/>made<sp/>16bit<sp/>test<sp/>images<sp/>completely<sp/>translucent..</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5867"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>so<sp/>let&apos;s<sp/>treat<sp/>all<sp/>15<sp/>and<sp/>16bit<sp/>TGAs<sp/>as<sp/>RGB<sp/>with<sp/>no<sp/>alpha.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5868"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5869"><highlight class="normal"></highlight></codeline>
<codeline lineno="5870"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*stbi__tga_load(stbi__context<sp/>*s,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*x,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*y,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*comp,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>req_comp,<sp/>stbi__result_info<sp/>*ri)</highlight></codeline>
<codeline lineno="5871"><highlight class="normal">{</highlight></codeline>
<codeline lineno="5872"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>read<sp/>in<sp/>the<sp/>TGA<sp/>header<sp/>stuff</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5873"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tga_offset<sp/>=<sp/>stbi__get8(s);</highlight></codeline>
<codeline lineno="5874"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tga_indexed<sp/>=<sp/>stbi__get8(s);</highlight></codeline>
<codeline lineno="5875"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tga_image_type<sp/>=<sp/>stbi__get8(s);</highlight></codeline>
<codeline lineno="5876"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tga_is_RLE<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="5877"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tga_palette_start<sp/>=<sp/>stbi__get16le(s);</highlight></codeline>
<codeline lineno="5878"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tga_palette_len<sp/>=<sp/>stbi__get16le(s);</highlight></codeline>
<codeline lineno="5879"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tga_palette_bits<sp/>=<sp/>stbi__get8(s);</highlight></codeline>
<codeline lineno="5880"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tga_x_origin<sp/>=<sp/>stbi__get16le(s);</highlight></codeline>
<codeline lineno="5881"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tga_y_origin<sp/>=<sp/>stbi__get16le(s);</highlight></codeline>
<codeline lineno="5882"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tga_width<sp/>=<sp/>stbi__get16le(s);</highlight></codeline>
<codeline lineno="5883"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tga_height<sp/>=<sp/>stbi__get16le(s);</highlight></codeline>
<codeline lineno="5884"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tga_bits_per_pixel<sp/>=<sp/>stbi__get8(s);</highlight></codeline>
<codeline lineno="5885"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tga_comp,<sp/>tga_rgb16=0;</highlight></codeline>
<codeline lineno="5886"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tga_inverted<sp/>=<sp/>stbi__get8(s);</highlight></codeline>
<codeline lineno="5887"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>int<sp/>tga_alpha_bits<sp/>=<sp/>tga_inverted<sp/>&amp;<sp/>15;<sp/>//<sp/>the<sp/>4<sp/>lowest<sp/>bits<sp/>-<sp/>unused<sp/>(useless?)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5888"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>image<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5889"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*tga_data;</highlight></codeline>
<codeline lineno="5890"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*tga_palette<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="5891"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,<sp/>j;</highlight></codeline>
<codeline lineno="5892"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>raw_data[4]<sp/>=<sp/>{0};</highlight></codeline>
<codeline lineno="5893"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>RLE_count<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="5894"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>RLE_repeating<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="5895"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>read_next_pixel<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="5896"><highlight class="normal"><sp/><sp/><sp/>STBI_NOTUSED(ri);</highlight></codeline>
<codeline lineno="5897"><highlight class="normal"><sp/><sp/><sp/>STBI_NOTUSED(tga_x_origin);<sp/></highlight><highlight class="comment">//<sp/>@TODO</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5898"><highlight class="normal"><sp/><sp/><sp/>STBI_NOTUSED(tga_y_origin);<sp/></highlight><highlight class="comment">//<sp/>@TODO</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5899"><highlight class="normal"></highlight></codeline>
<codeline lineno="5900"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tga_height<sp/>&gt;<sp/>STBI_MAX_DIMENSIONS)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stbi__errpuc(</highlight><highlight class="stringliteral">&quot;too<sp/>large&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;Very<sp/>large<sp/>image<sp/>(corrupt?)&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5901"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tga_width<sp/>&gt;<sp/>STBI_MAX_DIMENSIONS)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stbi__errpuc(</highlight><highlight class="stringliteral">&quot;too<sp/>large&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;Very<sp/>large<sp/>image<sp/>(corrupt?)&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5902"><highlight class="normal"></highlight></codeline>
<codeline lineno="5903"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>do<sp/>a<sp/>tiny<sp/>bit<sp/>of<sp/>precessing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5904"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>tga_image_type<sp/>&gt;=<sp/>8<sp/>)</highlight></codeline>
<codeline lineno="5905"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5906"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tga_image_type<sp/>-=<sp/>8;</highlight></codeline>
<codeline lineno="5907"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tga_is_RLE<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="5908"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5909"><highlight class="normal"><sp/><sp/><sp/>tga_inverted<sp/>=<sp/>1<sp/>-<sp/>((tga_inverted<sp/>&gt;&gt;<sp/>5)<sp/>&amp;<sp/>1);</highlight></codeline>
<codeline lineno="5910"><highlight class="normal"></highlight></codeline>
<codeline lineno="5911"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>If<sp/>I&apos;m<sp/>paletted,<sp/>then<sp/>I&apos;ll<sp/>use<sp/>the<sp/>number<sp/>of<sp/>bits<sp/>from<sp/>the<sp/>palette</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5912"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>tga_indexed<sp/>)<sp/>tga_comp<sp/>=<sp/>stbi__tga_get_comp(tga_palette_bits,<sp/>0,<sp/>&amp;tga_rgb16);</highlight></codeline>
<codeline lineno="5913"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>tga_comp<sp/>=<sp/>stbi__tga_get_comp(tga_bits_per_pixel,<sp/>(tga_image_type<sp/>==<sp/>3),<sp/>&amp;tga_rgb16);</highlight></codeline>
<codeline lineno="5914"><highlight class="normal"></highlight></codeline>
<codeline lineno="5915"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!tga_comp)<sp/></highlight><highlight class="comment">//<sp/>shouldn&apos;t<sp/>really<sp/>happen,<sp/>stbi__tga_test()<sp/>should<sp/>have<sp/>ensured<sp/>basic<sp/>consistency</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5916"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stbi__errpuc(</highlight><highlight class="stringliteral">&quot;bad<sp/>format&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Can&apos;t<sp/>find<sp/>out<sp/>TGA<sp/>pixelformat&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5917"><highlight class="normal"></highlight></codeline>
<codeline lineno="5918"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>tga<sp/>info</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5919"><highlight class="normal"><sp/><sp/><sp/>*x<sp/>=<sp/>tga_width;</highlight></codeline>
<codeline lineno="5920"><highlight class="normal"><sp/><sp/><sp/>*y<sp/>=<sp/>tga_height;</highlight></codeline>
<codeline lineno="5921"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(comp)<sp/>*comp<sp/>=<sp/>tga_comp;</highlight></codeline>
<codeline lineno="5922"><highlight class="normal"></highlight></codeline>
<codeline lineno="5923"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!stbi__mad3sizes_valid(tga_width,<sp/>tga_height,<sp/>tga_comp,<sp/>0))</highlight></codeline>
<codeline lineno="5924"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stbi__errpuc(</highlight><highlight class="stringliteral">&quot;too<sp/>large&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Corrupt<sp/>TGA&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5925"><highlight class="normal"></highlight></codeline>
<codeline lineno="5926"><highlight class="normal"><sp/><sp/><sp/>tga_data<sp/>=<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)stbi__malloc_mad3(tga_width,<sp/>tga_height,<sp/>tga_comp,<sp/>0);</highlight></codeline>
<codeline lineno="5927"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!tga_data)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stbi__errpuc(</highlight><highlight class="stringliteral">&quot;outofmem&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Out<sp/>of<sp/>memory&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5928"><highlight class="normal"></highlight></codeline>
<codeline lineno="5929"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>skip<sp/>to<sp/>the<sp/>data&apos;s<sp/>starting<sp/>position<sp/>(offset<sp/>usually<sp/>=<sp/>0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5930"><highlight class="normal"><sp/><sp/><sp/>stbi__skip(s,<sp/>tga_offset<sp/>);</highlight></codeline>
<codeline lineno="5931"><highlight class="normal"></highlight></codeline>
<codeline lineno="5932"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!tga_indexed<sp/>&amp;&amp;<sp/>!tga_is_RLE<sp/>&amp;&amp;<sp/>!tga_rgb16<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="5933"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i<sp/>&lt;<sp/>tga_height;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="5934"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>row<sp/>=<sp/>tga_inverted<sp/>?<sp/>tga_height<sp/>-i<sp/>-<sp/>1<sp/>:<sp/>i;</highlight></codeline>
<codeline lineno="5935"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d" kindref="member">stbi_uc</ref><sp/>*tga_row<sp/>=<sp/>tga_data<sp/>+<sp/>row*tga_width*tga_comp;</highlight></codeline>
<codeline lineno="5936"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stbi__getn(s,<sp/>tga_row,<sp/>tga_width<sp/>*<sp/>tga_comp);</highlight></codeline>
<codeline lineno="5937"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5938"><highlight class="normal"><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="5939"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>do<sp/>I<sp/>need<sp/>to<sp/>load<sp/>a<sp/>palette?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5940"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>tga_indexed)</highlight></codeline>
<codeline lineno="5941"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5942"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tga_palette_len<sp/>==<sp/>0)<sp/>{<sp/><sp/></highlight><highlight class="comment">/*<sp/>you<sp/>have<sp/>to<sp/>have<sp/>at<sp/>least<sp/>one<sp/>entry!<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5943"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>STBI_FREE(tga_data);</highlight></codeline>
<codeline lineno="5944"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stbi__errpuc(</highlight><highlight class="stringliteral">&quot;bad<sp/>palette&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Corrupt<sp/>TGA&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5945"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5946"><highlight class="normal"></highlight></codeline>
<codeline lineno="5947"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>any<sp/>data<sp/>to<sp/>skip?<sp/>(offset<sp/>usually<sp/>=<sp/>0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5948"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stbi__skip(s,<sp/>tga_palette_start<sp/>);</highlight></codeline>
<codeline lineno="5949"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>load<sp/>the<sp/>palette</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5950"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tga_palette<sp/>=<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)stbi__malloc_mad2(tga_palette_len,<sp/>tga_comp,<sp/>0);</highlight></codeline>
<codeline lineno="5951"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!tga_palette)<sp/>{</highlight></codeline>
<codeline lineno="5952"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>STBI_FREE(tga_data);</highlight></codeline>
<codeline lineno="5953"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stbi__errpuc(</highlight><highlight class="stringliteral">&quot;outofmem&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Out<sp/>of<sp/>memory&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5954"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5955"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tga_rgb16)<sp/>{</highlight></codeline>
<codeline lineno="5956"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d" kindref="member">stbi_uc</ref><sp/>*pal_entry<sp/>=<sp/>tga_palette;</highlight></codeline>
<codeline lineno="5957"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>STBI_ASSERT(tga_comp<sp/>==<sp/><ref refid="stb__image_8h_1a06fc87d81c62e9abb8790b6e5713c55baa59123e5d0af25f9b1539f5cf1facddf" kindref="member">STBI_rgb</ref>);</highlight></codeline>
<codeline lineno="5958"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i<sp/>&lt;<sp/>tga_palette_len;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="5959"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stbi__tga_read_rgb16(s,<sp/>pal_entry);</highlight></codeline>
<codeline lineno="5960"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pal_entry<sp/>+=<sp/>tga_comp;</highlight></codeline>
<codeline lineno="5961"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5962"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!stbi__getn(s,<sp/>tga_palette,<sp/>tga_palette_len<sp/>*<sp/>tga_comp))<sp/>{</highlight></codeline>
<codeline lineno="5963"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>STBI_FREE(tga_data);</highlight></codeline>
<codeline lineno="5964"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>STBI_FREE(tga_palette);</highlight></codeline>
<codeline lineno="5965"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stbi__errpuc(</highlight><highlight class="stringliteral">&quot;bad<sp/>palette&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Corrupt<sp/>TGA&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5966"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5967"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5968"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>load<sp/>the<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5969"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i<sp/>&lt;<sp/>tga_width<sp/>*<sp/>tga_height;<sp/>++i)</highlight></codeline>
<codeline lineno="5970"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5971"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>if<sp/>I&apos;m<sp/>in<sp/>RLE<sp/>mode,<sp/>do<sp/>I<sp/>need<sp/>to<sp/>get<sp/>a<sp/>RLE<sp/>stbi__pngchunk?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5972"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>tga_is_RLE<sp/>)</highlight></codeline>
<codeline lineno="5973"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5974"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>RLE_count<sp/>==<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="5975"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5976"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>yep,<sp/>get<sp/>the<sp/>next<sp/>byte<sp/>as<sp/>a<sp/>RLE<sp/>command</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5977"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>RLE_cmd<sp/>=<sp/>stbi__get8(s);</highlight></codeline>
<codeline lineno="5978"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RLE_count<sp/>=<sp/>1<sp/>+<sp/>(RLE_cmd<sp/>&amp;<sp/>127);</highlight></codeline>
<codeline lineno="5979"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RLE_repeating<sp/>=<sp/>RLE_cmd<sp/>&gt;&gt;<sp/>7;</highlight></codeline>
<codeline lineno="5980"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>read_next_pixel<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="5981"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!RLE_repeating<sp/>)</highlight></codeline>
<codeline lineno="5982"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5983"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>read_next_pixel<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="5984"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5985"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5986"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5987"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>read_next_pixel<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="5988"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5989"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>OK,<sp/>if<sp/>I<sp/>need<sp/>to<sp/>read<sp/>a<sp/>pixel,<sp/>do<sp/>it<sp/>now</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5990"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>read_next_pixel<sp/>)</highlight></codeline>
<codeline lineno="5991"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5992"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>load<sp/>however<sp/>much<sp/>data<sp/>we<sp/>did<sp/>have</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5993"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>tga_indexed<sp/>)</highlight></codeline>
<codeline lineno="5994"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5995"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>read<sp/>in<sp/>index,<sp/>then<sp/>perform<sp/>the<sp/>lookup</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5996"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pal_idx<sp/>=<sp/>(tga_bits_per_pixel<sp/>==<sp/>8)<sp/>?<sp/>stbi__get8(s)<sp/>:<sp/>stbi__get16le(s);</highlight></codeline>
<codeline lineno="5997"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>pal_idx<sp/>&gt;=<sp/>tga_palette_len<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="5998"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>invalid<sp/>index</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5999"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pal_idx<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="6000"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6001"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pal_idx<sp/>*=<sp/>tga_comp;</highlight></codeline>
<codeline lineno="6002"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>tga_comp;<sp/>++j)<sp/>{</highlight></codeline>
<codeline lineno="6003"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>raw_data[j]<sp/>=<sp/>tga_palette[pal_idx+j];</highlight></codeline>
<codeline lineno="6004"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6005"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(tga_rgb16)<sp/>{</highlight></codeline>
<codeline lineno="6006"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>STBI_ASSERT(tga_comp<sp/>==<sp/><ref refid="stb__image_8h_1a06fc87d81c62e9abb8790b6e5713c55baa59123e5d0af25f9b1539f5cf1facddf" kindref="member">STBI_rgb</ref>);</highlight></codeline>
<codeline lineno="6007"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stbi__tga_read_rgb16(s,<sp/>raw_data);</highlight></codeline>
<codeline lineno="6008"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="6009"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>read<sp/>in<sp/>the<sp/>data<sp/>raw</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6010"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>tga_comp;<sp/>++j)<sp/>{</highlight></codeline>
<codeline lineno="6011"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>raw_data[j]<sp/>=<sp/>stbi__get8(s);</highlight></codeline>
<codeline lineno="6012"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6013"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6014"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>clear<sp/>the<sp/>reading<sp/>flag<sp/>for<sp/>the<sp/>next<sp/>pixel</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6015"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>read_next_pixel<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="6016"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="comment">//<sp/>end<sp/>of<sp/>reading<sp/>a<sp/>pixel</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6017"><highlight class="normal"></highlight></codeline>
<codeline lineno="6018"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>copy<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6019"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>tga_comp;<sp/>++j)</highlight></codeline>
<codeline lineno="6020"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tga_data[i*tga_comp+j]<sp/>=<sp/>raw_data[j];</highlight></codeline>
<codeline lineno="6021"><highlight class="normal"></highlight></codeline>
<codeline lineno="6022"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>in<sp/>case<sp/>we&apos;re<sp/>in<sp/>RLE<sp/>mode,<sp/>keep<sp/>counting<sp/>down</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6023"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>--RLE_count;</highlight></codeline>
<codeline lineno="6024"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6025"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>do<sp/>I<sp/>need<sp/>to<sp/>invert<sp/>the<sp/>image?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6026"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>tga_inverted<sp/>)</highlight></codeline>
<codeline lineno="6027"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="6028"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(j<sp/>=<sp/>0;<sp/>j*2<sp/>&lt;<sp/>tga_height;<sp/>++j)</highlight></codeline>
<codeline lineno="6029"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="6030"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index1<sp/>=<sp/>j<sp/>*<sp/>tga_width<sp/>*<sp/>tga_comp;</highlight></codeline>
<codeline lineno="6031"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index2<sp/>=<sp/>(tga_height<sp/>-<sp/>1<sp/>-<sp/>j)<sp/>*<sp/>tga_width<sp/>*<sp/>tga_comp;</highlight></codeline>
<codeline lineno="6032"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>tga_width<sp/>*<sp/>tga_comp;<sp/>i<sp/>&gt;<sp/>0;<sp/>--i)</highlight></codeline>
<codeline lineno="6033"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="6034"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>temp<sp/>=<sp/>tga_data[index1];</highlight></codeline>
<codeline lineno="6035"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tga_data[index1]<sp/>=<sp/>tga_data[index2];</highlight></codeline>
<codeline lineno="6036"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tga_data[index2]<sp/>=<sp/>temp;</highlight></codeline>
<codeline lineno="6037"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++index1;</highlight></codeline>
<codeline lineno="6038"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++index2;</highlight></codeline>
<codeline lineno="6039"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6040"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6041"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6042"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>clear<sp/>my<sp/>palette,<sp/>if<sp/>I<sp/>had<sp/>one</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6043"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>tga_palette<sp/>!=<sp/>NULL<sp/>)</highlight></codeline>
<codeline lineno="6044"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="6045"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>STBI_FREE(<sp/>tga_palette<sp/>);</highlight></codeline>
<codeline lineno="6046"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6047"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6048"><highlight class="normal"></highlight></codeline>
<codeline lineno="6049"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>swap<sp/>RGB<sp/>-<sp/>if<sp/>the<sp/>source<sp/>data<sp/>was<sp/>RGB16,<sp/>it<sp/>already<sp/>is<sp/>in<sp/>the<sp/>right<sp/>order</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6050"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tga_comp<sp/>&gt;=<sp/>3<sp/>&amp;&amp;<sp/>!tga_rgb16)</highlight></codeline>
<codeline lineno="6051"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="6052"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>tga_pixel<sp/>=<sp/>tga_data;</highlight></codeline>
<codeline lineno="6053"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i<sp/>&lt;<sp/>tga_width<sp/>*<sp/>tga_height;<sp/>++i)</highlight></codeline>
<codeline lineno="6054"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="6055"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>temp<sp/>=<sp/>tga_pixel[0];</highlight></codeline>
<codeline lineno="6056"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tga_pixel[0]<sp/>=<sp/>tga_pixel[2];</highlight></codeline>
<codeline lineno="6057"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tga_pixel[2]<sp/>=<sp/>temp;</highlight></codeline>
<codeline lineno="6058"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tga_pixel<sp/>+=<sp/>tga_comp;</highlight></codeline>
<codeline lineno="6059"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6060"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6061"><highlight class="normal"></highlight></codeline>
<codeline lineno="6062"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>convert<sp/>to<sp/>target<sp/>component<sp/>count</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6063"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(req_comp<sp/>&amp;&amp;<sp/>req_comp<sp/>!=<sp/>tga_comp)</highlight></codeline>
<codeline lineno="6064"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tga_data<sp/>=<sp/>stbi__convert_format(tga_data,<sp/>tga_comp,<sp/>req_comp,<sp/>tga_width,<sp/>tga_height);</highlight></codeline>
<codeline lineno="6065"><highlight class="normal"></highlight></codeline>
<codeline lineno="6066"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>the<sp/>things<sp/>I<sp/>do<sp/>to<sp/>get<sp/>rid<sp/>of<sp/>an<sp/>error<sp/>message,<sp/>and<sp/>yet<sp/>keep</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6067"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>Microsoft&apos;s<sp/>C<sp/>compilers<sp/>happy...<sp/>[8^(</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6068"><highlight class="normal"><sp/><sp/><sp/>tga_palette_start<sp/>=<sp/>tga_palette_len<sp/>=<sp/>tga_palette_bits<sp/>=</highlight></codeline>
<codeline lineno="6069"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tga_x_origin<sp/>=<sp/>tga_y_origin<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="6070"><highlight class="normal"><sp/><sp/><sp/>STBI_NOTUSED(tga_palette_start);</highlight></codeline>
<codeline lineno="6071"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>OK,<sp/>done</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6072"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tga_data;</highlight></codeline>
<codeline lineno="6073"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6074"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6075"><highlight class="normal"></highlight></codeline>
<codeline lineno="6076"><highlight class="normal"></highlight><highlight class="comment">//<sp/>*************************************************************************************************</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6077"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Photoshop<sp/>PSD<sp/>loader<sp/>--<sp/>PD<sp/>by<sp/>Thatcher<sp/>Ulrich,<sp/>integration<sp/>by<sp/>Nicolas<sp/>Schulz,<sp/>tweaked<sp/>by<sp/>STB</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6078"><highlight class="normal"></highlight></codeline>
<codeline lineno="6079"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>STBI_NO_PSD</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6080"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>stbi__psd_test(stbi__context<sp/>*s)</highlight></codeline>
<codeline lineno="6081"><highlight class="normal">{</highlight></codeline>
<codeline lineno="6082"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>r<sp/>=<sp/>(stbi__get32be(s)<sp/>==<sp/>0x38425053);</highlight></codeline>
<codeline lineno="6083"><highlight class="normal"><sp/><sp/><sp/>stbi__rewind(s);</highlight></codeline>
<codeline lineno="6084"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>r;</highlight></codeline>
<codeline lineno="6085"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6086"><highlight class="normal"></highlight></codeline>
<codeline lineno="6087"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>stbi__psd_decode_rle(stbi__context<sp/>*s,<sp/><ref refid="stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d" kindref="member">stbi_uc</ref><sp/>*p,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pixelCount)</highlight></codeline>
<codeline lineno="6088"><highlight class="normal">{</highlight></codeline>
<codeline lineno="6089"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>count,<sp/>nleft,<sp/>len;</highlight></codeline>
<codeline lineno="6090"><highlight class="normal"></highlight></codeline>
<codeline lineno="6091"><highlight class="normal"><sp/><sp/><sp/>count<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="6092"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>((nleft<sp/>=<sp/>pixelCount<sp/>-<sp/>count)<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="6093"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>len<sp/>=<sp/>stbi__get8(s);</highlight></codeline>
<codeline lineno="6094"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(len<sp/>==<sp/>128)<sp/>{</highlight></codeline>
<codeline lineno="6095"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>No-op.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6096"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(len<sp/>&lt;<sp/>128)<sp/>{</highlight></codeline>
<codeline lineno="6097"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Copy<sp/>next<sp/>len+1<sp/>bytes<sp/>literally.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6098"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len++;</highlight></codeline>
<codeline lineno="6099"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(len<sp/>&gt;<sp/>nleft)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;<sp/></highlight><highlight class="comment">//<sp/>corrupt<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>count<sp/>+=<sp/>len;</highlight></codeline>
<codeline lineno="6101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(len)<sp/>{</highlight></codeline>
<codeline lineno="6102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*p<sp/>=<sp/>stbi__get8(s);</highlight></codeline>
<codeline lineno="6103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p<sp/>+=<sp/>4;</highlight></codeline>
<codeline lineno="6104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len--;</highlight></codeline>
<codeline lineno="6105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(len<sp/>&gt;<sp/>128)<sp/>{</highlight></codeline>
<codeline lineno="6107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d" kindref="member">stbi_uc</ref><sp/><sp/><sp/>val;</highlight></codeline>
<codeline lineno="6108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Next<sp/>-len+1<sp/>bytes<sp/>in<sp/>the<sp/>dest<sp/>are<sp/>replicated<sp/>from<sp/>next<sp/>source<sp/>byte.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>(Interpret<sp/>len<sp/>as<sp/>a<sp/>negative<sp/>8-bit<sp/>int.)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len<sp/>=<sp/>257<sp/>-<sp/>len;</highlight></codeline>
<codeline lineno="6111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(len<sp/>&gt;<sp/>nleft)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;<sp/></highlight><highlight class="comment">//<sp/>corrupt<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>val<sp/>=<sp/>stbi__get8(s);</highlight></codeline>
<codeline lineno="6113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>count<sp/>+=<sp/>len;</highlight></codeline>
<codeline lineno="6114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(len)<sp/>{</highlight></codeline>
<codeline lineno="6115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*p<sp/>=<sp/>val;</highlight></codeline>
<codeline lineno="6116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p<sp/>+=<sp/>4;</highlight></codeline>
<codeline lineno="6117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len--;</highlight></codeline>
<codeline lineno="6118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6120"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6121"><highlight class="normal"></highlight></codeline>
<codeline lineno="6122"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="6123"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6124"><highlight class="normal"></highlight></codeline>
<codeline lineno="6125"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*stbi__psd_load(stbi__context<sp/>*s,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*x,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*y,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*comp,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>req_comp,<sp/>stbi__result_info<sp/>*ri,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bpc)</highlight></codeline>
<codeline lineno="6126"><highlight class="normal">{</highlight></codeline>
<codeline lineno="6127"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pixelCount;</highlight></codeline>
<codeline lineno="6128"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>channelCount,<sp/>compression;</highlight></codeline>
<codeline lineno="6129"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>channel,<sp/>i;</highlight></codeline>
<codeline lineno="6130"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bitdepth;</highlight></codeline>
<codeline lineno="6131"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>w,h;</highlight></codeline>
<codeline lineno="6132"><highlight class="normal"><sp/><sp/><sp/><ref refid="stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d" kindref="member">stbi_uc</ref><sp/>*out;</highlight></codeline>
<codeline lineno="6133"><highlight class="normal"><sp/><sp/><sp/>STBI_NOTUSED(ri);</highlight></codeline>
<codeline lineno="6134"><highlight class="normal"></highlight></codeline>
<codeline lineno="6135"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>identifier</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6136"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(stbi__get32be(s)<sp/>!=<sp/>0x38425053)<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>&quot;8BPS&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stbi__errpuc(</highlight><highlight class="stringliteral">&quot;not<sp/>PSD&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Corrupt<sp/>PSD<sp/>image&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="6138"><highlight class="normal"></highlight></codeline>
<codeline lineno="6139"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>file<sp/>type<sp/>version.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6140"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(stbi__get16be(s)<sp/>!=<sp/>1)</highlight></codeline>
<codeline lineno="6141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stbi__errpuc(</highlight><highlight class="stringliteral">&quot;wrong<sp/>version&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Unsupported<sp/>version<sp/>of<sp/>PSD<sp/>image&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="6142"><highlight class="normal"></highlight></codeline>
<codeline lineno="6143"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Skip<sp/>6<sp/>reserved<sp/>bytes.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6144"><highlight class="normal"><sp/><sp/><sp/>stbi__skip(s,<sp/>6<sp/>);</highlight></codeline>
<codeline lineno="6145"><highlight class="normal"></highlight></codeline>
<codeline lineno="6146"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Read<sp/>the<sp/>number<sp/>of<sp/>channels<sp/>(R,<sp/>G,<sp/>B,<sp/>A,<sp/>etc).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6147"><highlight class="normal"><sp/><sp/><sp/>channelCount<sp/>=<sp/>stbi__get16be(s);</highlight></codeline>
<codeline lineno="6148"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(channelCount<sp/>&lt;<sp/>0<sp/>||<sp/>channelCount<sp/>&gt;<sp/>16)</highlight></codeline>
<codeline lineno="6149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stbi__errpuc(</highlight><highlight class="stringliteral">&quot;wrong<sp/>channel<sp/>count&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Unsupported<sp/>number<sp/>of<sp/>channels<sp/>in<sp/>PSD<sp/>image&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="6150"><highlight class="normal"></highlight></codeline>
<codeline lineno="6151"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Read<sp/>the<sp/>rows<sp/>and<sp/>columns<sp/>of<sp/>the<sp/>image.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6152"><highlight class="normal"><sp/><sp/><sp/>h<sp/>=<sp/>stbi__get32be(s);</highlight></codeline>
<codeline lineno="6153"><highlight class="normal"><sp/><sp/><sp/>w<sp/>=<sp/>stbi__get32be(s);</highlight></codeline>
<codeline lineno="6154"><highlight class="normal"></highlight></codeline>
<codeline lineno="6155"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(h<sp/>&gt;<sp/>STBI_MAX_DIMENSIONS)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stbi__errpuc(</highlight><highlight class="stringliteral">&quot;too<sp/>large&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;Very<sp/>large<sp/>image<sp/>(corrupt?)&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="6156"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(w<sp/>&gt;<sp/>STBI_MAX_DIMENSIONS)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stbi__errpuc(</highlight><highlight class="stringliteral">&quot;too<sp/>large&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;Very<sp/>large<sp/>image<sp/>(corrupt?)&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="6157"><highlight class="normal"></highlight></codeline>
<codeline lineno="6158"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Make<sp/>sure<sp/>the<sp/>depth<sp/>is<sp/>8<sp/>bits.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6159"><highlight class="normal"><sp/><sp/><sp/>bitdepth<sp/>=<sp/>stbi__get16be(s);</highlight></codeline>
<codeline lineno="6160"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bitdepth<sp/>!=<sp/>8<sp/>&amp;&amp;<sp/>bitdepth<sp/>!=<sp/>16)</highlight></codeline>
<codeline lineno="6161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stbi__errpuc(</highlight><highlight class="stringliteral">&quot;unsupported<sp/>bit<sp/>depth&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;PSD<sp/>bit<sp/>depth<sp/>is<sp/>not<sp/>8<sp/>or<sp/>16<sp/>bit&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="6162"><highlight class="normal"></highlight></codeline>
<codeline lineno="6163"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Make<sp/>sure<sp/>the<sp/>color<sp/>mode<sp/>is<sp/>RGB.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6164"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Valid<sp/>options<sp/>are:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6165"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>0:<sp/>Bitmap</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6166"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>1:<sp/>Grayscale</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6167"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>2:<sp/>Indexed<sp/>color</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6168"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>3:<sp/>RGB<sp/>color</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6169"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>4:<sp/>CMYK<sp/>color</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6170"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>7:<sp/>Multichannel</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6171"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>8:<sp/>Duotone</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6172"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>9:<sp/>Lab<sp/>color</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6173"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(stbi__get16be(s)<sp/>!=<sp/>3)</highlight></codeline>
<codeline lineno="6174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stbi__errpuc(</highlight><highlight class="stringliteral">&quot;wrong<sp/>color<sp/>format&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;PSD<sp/>is<sp/>not<sp/>in<sp/>RGB<sp/>color<sp/>format&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="6175"><highlight class="normal"></highlight></codeline>
<codeline lineno="6176"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Skip<sp/>the<sp/>Mode<sp/>Data.<sp/><sp/>(It&apos;s<sp/>the<sp/>palette<sp/>for<sp/>indexed<sp/>color;<sp/>other<sp/>info<sp/>for<sp/>other<sp/>modes.)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6177"><highlight class="normal"><sp/><sp/><sp/>stbi__skip(s,stbi__get32be(s)<sp/>);</highlight></codeline>
<codeline lineno="6178"><highlight class="normal"></highlight></codeline>
<codeline lineno="6179"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Skip<sp/>the<sp/>image<sp/>resources.<sp/><sp/>(resolution,<sp/>pen<sp/>tool<sp/>paths,<sp/>etc)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6180"><highlight class="normal"><sp/><sp/><sp/>stbi__skip(s,<sp/>stbi__get32be(s)<sp/>);</highlight></codeline>
<codeline lineno="6181"><highlight class="normal"></highlight></codeline>
<codeline lineno="6182"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Skip<sp/>the<sp/>reserved<sp/>data.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6183"><highlight class="normal"><sp/><sp/><sp/>stbi__skip(s,<sp/>stbi__get32be(s)<sp/>);</highlight></codeline>
<codeline lineno="6184"><highlight class="normal"></highlight></codeline>
<codeline lineno="6185"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Find<sp/>out<sp/>if<sp/>the<sp/>data<sp/>is<sp/>compressed.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6186"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Known<sp/>values:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6187"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>0:<sp/>no<sp/>compression</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6188"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>1:<sp/>RLE<sp/>compressed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6189"><highlight class="normal"><sp/><sp/><sp/>compression<sp/>=<sp/>stbi__get16be(s);</highlight></codeline>
<codeline lineno="6190"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(compression<sp/>&gt;<sp/>1)</highlight></codeline>
<codeline lineno="6191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stbi__errpuc(</highlight><highlight class="stringliteral">&quot;bad<sp/>compression&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;PSD<sp/>has<sp/>an<sp/>unknown<sp/>compression<sp/>format&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="6192"><highlight class="normal"></highlight></codeline>
<codeline lineno="6193"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>size</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6194"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!stbi__mad3sizes_valid(4,<sp/>w,<sp/>h,<sp/>0))</highlight></codeline>
<codeline lineno="6195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stbi__errpuc(</highlight><highlight class="stringliteral">&quot;too<sp/>large&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Corrupt<sp/>PSD&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="6196"><highlight class="normal"></highlight></codeline>
<codeline lineno="6197"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>the<sp/>destination<sp/>image.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6198"><highlight class="normal"></highlight></codeline>
<codeline lineno="6199"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!compression<sp/>&amp;&amp;<sp/>bitdepth<sp/>==<sp/>16<sp/>&amp;&amp;<sp/>bpc<sp/>==<sp/>16)<sp/>{</highlight></codeline>
<codeline lineno="6200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>out<sp/>=<sp/>(<ref refid="stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d" kindref="member">stbi_uc</ref><sp/>*)<sp/>stbi__malloc_mad3(8,<sp/>w,<sp/>h,<sp/>0);</highlight></codeline>
<codeline lineno="6201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ri-&gt;bits_per_channel<sp/>=<sp/>16;</highlight></codeline>
<codeline lineno="6202"><highlight class="normal"><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>out<sp/>=<sp/>(<ref refid="stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d" kindref="member">stbi_uc</ref><sp/>*)<sp/>stbi__malloc(4<sp/>*<sp/>w*h);</highlight></codeline>
<codeline lineno="6204"><highlight class="normal"></highlight></codeline>
<codeline lineno="6205"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!out)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stbi__errpuc(</highlight><highlight class="stringliteral">&quot;outofmem&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Out<sp/>of<sp/>memory&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="6206"><highlight class="normal"><sp/><sp/><sp/>pixelCount<sp/>=<sp/>w*h;</highlight></codeline>
<codeline lineno="6207"><highlight class="normal"></highlight></codeline>
<codeline lineno="6208"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Initialize<sp/>the<sp/>data<sp/>to<sp/>zero.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6209"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//memset(<sp/>out,<sp/>0,<sp/>pixelCount<sp/>*<sp/>4<sp/>);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6210"><highlight class="normal"></highlight></codeline>
<codeline lineno="6211"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Finally,<sp/>the<sp/>image<sp/>data.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6212"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(compression)<sp/>{</highlight></codeline>
<codeline lineno="6213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>RLE<sp/>as<sp/>used<sp/>by<sp/>.PSD<sp/>and<sp/>.TIFF</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Loop<sp/>until<sp/>you<sp/>get<sp/>the<sp/>number<sp/>of<sp/>unpacked<sp/>bytes<sp/>you<sp/>are<sp/>expecting:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>Read<sp/>the<sp/>next<sp/>source<sp/>byte<sp/>into<sp/>n.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>If<sp/>n<sp/>is<sp/>between<sp/>0<sp/>and<sp/>127<sp/>inclusive,<sp/>copy<sp/>the<sp/>next<sp/>n+1<sp/>bytes<sp/>literally.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>Else<sp/>if<sp/>n<sp/>is<sp/>between<sp/>-127<sp/>and<sp/>-1<sp/>inclusive,<sp/>copy<sp/>the<sp/>next<sp/>byte<sp/>-n+1<sp/>times.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>Else<sp/>if<sp/>n<sp/>is<sp/>128,<sp/>noop.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Endloop</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6220"><highlight class="normal"></highlight></codeline>
<codeline lineno="6221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>RLE-compressed<sp/>data<sp/>is<sp/>preceded<sp/>by<sp/>a<sp/>2-byte<sp/>data<sp/>count<sp/>for<sp/>each<sp/>row<sp/>in<sp/>the<sp/>data,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>which<sp/>we&apos;re<sp/>going<sp/>to<sp/>just<sp/>skip.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stbi__skip(s,<sp/>h<sp/>*<sp/>channelCount<sp/>*<sp/>2<sp/>);</highlight></codeline>
<codeline lineno="6224"><highlight class="normal"></highlight></codeline>
<codeline lineno="6225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Read<sp/>the<sp/>RLE<sp/>data<sp/>by<sp/>channel.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(channel<sp/>=<sp/>0;<sp/>channel<sp/>&lt;<sp/>4;<sp/>channel++)<sp/>{</highlight></codeline>
<codeline lineno="6227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d" kindref="member">stbi_uc</ref><sp/>*p;</highlight></codeline>
<codeline lineno="6228"><highlight class="normal"></highlight></codeline>
<codeline lineno="6229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p<sp/>=<sp/>out+channel;</highlight></codeline>
<codeline lineno="6230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(channel<sp/>&gt;=<sp/>channelCount)<sp/>{</highlight></codeline>
<codeline lineno="6231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Fill<sp/>this<sp/>channel<sp/>with<sp/>default<sp/>data.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>pixelCount;<sp/>i++,<sp/>p<sp/>+=<sp/>4)</highlight></codeline>
<codeline lineno="6233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*p<sp/>=<sp/>(channel<sp/>==<sp/>3<sp/>?<sp/>255<sp/>:<sp/>0);</highlight></codeline>
<codeline lineno="6234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="6235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Read<sp/>the<sp/>RLE<sp/>data.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!stbi__psd_decode_rle(s,<sp/>p,<sp/>pixelCount))<sp/>{</highlight></codeline>
<codeline lineno="6237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>STBI_FREE(out);</highlight></codeline>
<codeline lineno="6238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stbi__errpuc(</highlight><highlight class="stringliteral">&quot;corrupt&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;bad<sp/>RLE<sp/>data&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="6239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6242"><highlight class="normal"></highlight></codeline>
<codeline lineno="6243"><highlight class="normal"><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="6244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We&apos;re<sp/>at<sp/>the<sp/>raw<sp/>image<sp/>data.<sp/><sp/>It&apos;s<sp/>each<sp/>channel<sp/>in<sp/>order<sp/>(Red,<sp/>Green,<sp/>Blue,<sp/>Alpha,<sp/>...)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>where<sp/>each<sp/>channel<sp/>consists<sp/>of<sp/>an<sp/>8-bit<sp/>(or<sp/>16-bit)<sp/>value<sp/>for<sp/>each<sp/>pixel<sp/>in<sp/>the<sp/>image.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6246"><highlight class="normal"></highlight></codeline>
<codeline lineno="6247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Read<sp/>the<sp/>data<sp/>by<sp/>channel.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(channel<sp/>=<sp/>0;<sp/>channel<sp/>&lt;<sp/>4;<sp/>channel++)<sp/>{</highlight></codeline>
<codeline lineno="6249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(channel<sp/>&gt;=<sp/>channelCount)<sp/>{</highlight></codeline>
<codeline lineno="6250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Fill<sp/>this<sp/>channel<sp/>with<sp/>default<sp/>data.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bitdepth<sp/>==<sp/>16<sp/>&amp;&amp;<sp/>bpc<sp/>==<sp/>16)<sp/>{</highlight></codeline>
<codeline lineno="6252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stbi__uint16<sp/>*q<sp/>=<sp/>((stbi__uint16<sp/>*)<sp/>out)<sp/>+<sp/>channel;</highlight></codeline>
<codeline lineno="6253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stbi__uint16<sp/>val<sp/>=<sp/>channel<sp/>==<sp/>3<sp/>?<sp/>65535<sp/>:<sp/>0;</highlight></codeline>
<codeline lineno="6254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>pixelCount;<sp/>i++,<sp/>q<sp/>+=<sp/>4)</highlight></codeline>
<codeline lineno="6255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*q<sp/>=<sp/>val;</highlight></codeline>
<codeline lineno="6256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="6257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d" kindref="member">stbi_uc</ref><sp/>*p<sp/>=<sp/>out+channel;</highlight></codeline>
<codeline lineno="6258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d" kindref="member">stbi_uc</ref><sp/>val<sp/>=<sp/>channel<sp/>==<sp/>3<sp/>?<sp/>255<sp/>:<sp/>0;</highlight></codeline>
<codeline lineno="6259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>pixelCount;<sp/>i++,<sp/>p<sp/>+=<sp/>4)</highlight></codeline>
<codeline lineno="6260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*p<sp/>=<sp/>val;</highlight></codeline>
<codeline lineno="6261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="6263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ri-&gt;bits_per_channel<sp/>==<sp/>16)<sp/>{<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>output<sp/>bpc</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stbi__uint16<sp/>*q<sp/>=<sp/>((stbi__uint16<sp/>*)<sp/>out)<sp/>+<sp/>channel;</highlight></codeline>
<codeline lineno="6265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>pixelCount;<sp/>i++,<sp/>q<sp/>+=<sp/>4)</highlight></codeline>
<codeline lineno="6266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*q<sp/>=<sp/>(stbi__uint16)<sp/>stbi__get16be(s);</highlight></codeline>
<codeline lineno="6267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="6268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d" kindref="member">stbi_uc</ref><sp/>*p<sp/>=<sp/>out+channel;</highlight></codeline>
<codeline lineno="6269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bitdepth<sp/>==<sp/>16)<sp/>{<sp/><sp/></highlight><highlight class="comment">//<sp/>input<sp/>bpc</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>pixelCount;<sp/>i++,<sp/>p<sp/>+=<sp/>4)</highlight></codeline>
<codeline lineno="6271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*p<sp/>=<sp/>(<ref refid="stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d" kindref="member">stbi_uc</ref>)<sp/>(stbi__get16be(s)<sp/>&gt;&gt;<sp/>8);</highlight></codeline>
<codeline lineno="6272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="6273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>pixelCount;<sp/>i++,<sp/>p<sp/>+=<sp/>4)</highlight></codeline>
<codeline lineno="6274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*p<sp/>=<sp/>stbi__get8(s);</highlight></codeline>
<codeline lineno="6275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6279"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6280"><highlight class="normal"></highlight></codeline>
<codeline lineno="6281"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>remove<sp/>weird<sp/>white<sp/>matte<sp/>from<sp/>PSD</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6282"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(channelCount<sp/>&gt;=<sp/>4)<sp/>{</highlight></codeline>
<codeline lineno="6283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ri-&gt;bits_per_channel<sp/>==<sp/>16)<sp/>{</highlight></codeline>
<codeline lineno="6284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i<sp/>&lt;<sp/>w*h;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="6285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stbi__uint16<sp/>*pixel<sp/>=<sp/>(stbi__uint16<sp/>*)<sp/>out<sp/>+<sp/>4*i;</highlight></codeline>
<codeline lineno="6286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pixel[3]<sp/>!=<sp/>0<sp/>&amp;&amp;<sp/>pixel[3]<sp/>!=<sp/>65535)<sp/>{</highlight></codeline>
<codeline lineno="6287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>a<sp/>=<sp/>pixel[3]<sp/>/<sp/>65535.0f;</highlight></codeline>
<codeline lineno="6288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>ra<sp/>=<sp/>1.0f<sp/>/<sp/>a;</highlight></codeline>
<codeline lineno="6289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>inv_a<sp/>=<sp/>65535.0f<sp/>*<sp/>(1<sp/>-<sp/>ra);</highlight></codeline>
<codeline lineno="6290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pixel[0]<sp/>=<sp/>(stbi__uint16)<sp/>(pixel[0]*ra<sp/>+<sp/>inv_a);</highlight></codeline>
<codeline lineno="6291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pixel[1]<sp/>=<sp/>(stbi__uint16)<sp/>(pixel[1]*ra<sp/>+<sp/>inv_a);</highlight></codeline>
<codeline lineno="6292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pixel[2]<sp/>=<sp/>(stbi__uint16)<sp/>(pixel[2]*ra<sp/>+<sp/>inv_a);</highlight></codeline>
<codeline lineno="6293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="6296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i<sp/>&lt;<sp/>w*h;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="6297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*pixel<sp/>=<sp/>out<sp/>+<sp/>4*i;</highlight></codeline>
<codeline lineno="6298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pixel[3]<sp/>!=<sp/>0<sp/>&amp;&amp;<sp/>pixel[3]<sp/>!=<sp/>255)<sp/>{</highlight></codeline>
<codeline lineno="6299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>a<sp/>=<sp/>pixel[3]<sp/>/<sp/>255.0f;</highlight></codeline>
<codeline lineno="6300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>ra<sp/>=<sp/>1.0f<sp/>/<sp/>a;</highlight></codeline>
<codeline lineno="6301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>inv_a<sp/>=<sp/>255.0f<sp/>*<sp/>(1<sp/>-<sp/>ra);</highlight></codeline>
<codeline lineno="6302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pixel[0]<sp/>=<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>char)<sp/>(pixel[0]*ra<sp/>+<sp/>inv_a);</highlight></codeline>
<codeline lineno="6303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pixel[1]<sp/>=<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>char)<sp/>(pixel[1]*ra<sp/>+<sp/>inv_a);</highlight></codeline>
<codeline lineno="6304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pixel[2]<sp/>=<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>char)<sp/>(pixel[2]*ra<sp/>+<sp/>inv_a);</highlight></codeline>
<codeline lineno="6305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6308"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6309"><highlight class="normal"></highlight></codeline>
<codeline lineno="6310"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>convert<sp/>to<sp/>desired<sp/>output<sp/>format</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6311"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(req_comp<sp/>&amp;&amp;<sp/>req_comp<sp/>!=<sp/>4)<sp/>{</highlight></codeline>
<codeline lineno="6312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ri-&gt;bits_per_channel<sp/>==<sp/>16)</highlight></codeline>
<codeline lineno="6313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out<sp/>=<sp/>(<ref refid="stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d" kindref="member">stbi_uc</ref><sp/>*)<sp/>stbi__convert_format16((stbi__uint16<sp/>*)<sp/>out,<sp/>4,<sp/>req_comp,<sp/>w,<sp/>h);</highlight></codeline>
<codeline lineno="6314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out<sp/>=<sp/>stbi__convert_format(out,<sp/>4,<sp/>req_comp,<sp/>w,<sp/>h);</highlight></codeline>
<codeline lineno="6316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(out<sp/>==<sp/>NULL)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>out;<sp/></highlight><highlight class="comment">//<sp/>stbi__convert_format<sp/>frees<sp/>input<sp/>on<sp/>failure</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6317"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6318"><highlight class="normal"></highlight></codeline>
<codeline lineno="6319"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(comp)<sp/>*comp<sp/>=<sp/>4;</highlight></codeline>
<codeline lineno="6320"><highlight class="normal"><sp/><sp/><sp/>*y<sp/>=<sp/>h;</highlight></codeline>
<codeline lineno="6321"><highlight class="normal"><sp/><sp/><sp/>*x<sp/>=<sp/>w;</highlight></codeline>
<codeline lineno="6322"><highlight class="normal"></highlight></codeline>
<codeline lineno="6323"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>out;</highlight></codeline>
<codeline lineno="6324"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6325"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6326"><highlight class="normal"></highlight></codeline>
<codeline lineno="6327"><highlight class="normal"></highlight><highlight class="comment">//<sp/>*************************************************************************************************</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6328"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Softimage<sp/>PIC<sp/>loader</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6329"><highlight class="normal"></highlight><highlight class="comment">//<sp/>by<sp/>Tom<sp/>Seddon</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6330"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6331"><highlight class="normal"></highlight><highlight class="comment">//<sp/>See<sp/>http://softimage.wiki.softimage.com/index.php/INFO:_PIC_file_format</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6332"><highlight class="normal"></highlight><highlight class="comment">//<sp/>See<sp/>http://ozviz.wasp.uwa.edu.au/~pbourke/dataformats/softimagepic/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6333"><highlight class="normal"></highlight></codeline>
<codeline lineno="6334"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>STBI_NO_PIC</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6335"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>stbi__pic_is4(stbi__context<sp/>*s,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*str)</highlight></codeline>
<codeline lineno="6336"><highlight class="normal">{</highlight></codeline>
<codeline lineno="6337"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="6338"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i&lt;4;<sp/>++i)</highlight></codeline>
<codeline lineno="6339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(stbi__get8(s)<sp/>!=<sp/>(<ref refid="stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d" kindref="member">stbi_uc</ref>)str[i])</highlight></codeline>
<codeline lineno="6340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="6341"><highlight class="normal"></highlight></codeline>
<codeline lineno="6342"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="6343"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6344"><highlight class="normal"></highlight></codeline>
<codeline lineno="6345"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>stbi__pic_test_core(stbi__context<sp/>*s)</highlight></codeline>
<codeline lineno="6346"><highlight class="normal">{</highlight></codeline>
<codeline lineno="6347"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="6348"><highlight class="normal"></highlight></codeline>
<codeline lineno="6349"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!stbi__pic_is4(s,</highlight><highlight class="stringliteral">&quot;\x53\x80\xF6\x34&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="6350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="6351"><highlight class="normal"></highlight></codeline>
<codeline lineno="6352"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;i&lt;84;++i)</highlight></codeline>
<codeline lineno="6353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stbi__get8(s);</highlight></codeline>
<codeline lineno="6354"><highlight class="normal"></highlight></codeline>
<codeline lineno="6355"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!stbi__pic_is4(s,</highlight><highlight class="stringliteral">&quot;PICT&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="6356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="6357"><highlight class="normal"></highlight></codeline>
<codeline lineno="6358"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="6359"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6360"><highlight class="normal"></highlight></codeline>
<codeline lineno="6361"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6362"><highlight class="normal">{</highlight></codeline>
<codeline lineno="6363"><highlight class="normal"><sp/><sp/><sp/><ref refid="stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d" kindref="member">stbi_uc</ref><sp/>size,type,channel;</highlight></codeline>
<codeline lineno="6364"><highlight class="normal">}<sp/>stbi__pic_packet;</highlight></codeline>
<codeline lineno="6365"><highlight class="normal"></highlight></codeline>
<codeline lineno="6366"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d" kindref="member">stbi_uc</ref><sp/>*stbi__readval(stbi__context<sp/>*s,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>channel,<sp/><ref refid="stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d" kindref="member">stbi_uc</ref><sp/>*dest)</highlight></codeline>
<codeline lineno="6367"><highlight class="normal">{</highlight></codeline>
<codeline lineno="6368"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mask=0x80,<sp/>i;</highlight></codeline>
<codeline lineno="6369"><highlight class="normal"></highlight></codeline>
<codeline lineno="6370"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i&lt;4;<sp/>++i,<sp/>mask&gt;&gt;=1)<sp/>{</highlight></codeline>
<codeline lineno="6371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(channel<sp/>&amp;<sp/>mask)<sp/>{</highlight></codeline>
<codeline lineno="6372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(stbi__at_eof(s))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stbi__errpuc(</highlight><highlight class="stringliteral">&quot;bad<sp/>file&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;PIC<sp/>file<sp/>too<sp/>short&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="6373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dest[i]=stbi__get8(s);</highlight></codeline>
<codeline lineno="6374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6375"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6376"><highlight class="normal"></highlight></codeline>
<codeline lineno="6377"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>dest;</highlight></codeline>
<codeline lineno="6378"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6379"><highlight class="normal"></highlight></codeline>
<codeline lineno="6380"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>stbi__copyval(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>channel,<ref refid="stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d" kindref="member">stbi_uc</ref><sp/>*dest,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d" kindref="member">stbi_uc</ref><sp/>*src)</highlight></codeline>
<codeline lineno="6381"><highlight class="normal">{</highlight></codeline>
<codeline lineno="6382"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mask=0x80,i;</highlight></codeline>
<codeline lineno="6383"><highlight class="normal"></highlight></codeline>
<codeline lineno="6384"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;i&lt;4;<sp/>++i,<sp/>mask&gt;&gt;=1)</highlight></codeline>
<codeline lineno="6385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(channel&amp;mask)</highlight></codeline>
<codeline lineno="6386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dest[i]=src[i];</highlight></codeline>
<codeline lineno="6387"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6388"><highlight class="normal"></highlight></codeline>
<codeline lineno="6389"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d" kindref="member">stbi_uc</ref><sp/>*stbi__pic_load_core(stbi__context<sp/>*s,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>width,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>height,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*comp,<sp/><ref refid="stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d" kindref="member">stbi_uc</ref><sp/>*result)</highlight></codeline>
<codeline lineno="6390"><highlight class="normal">{</highlight></codeline>
<codeline lineno="6391"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>act_comp=0,num_packets=0,y,chained;</highlight></codeline>
<codeline lineno="6392"><highlight class="normal"><sp/><sp/><sp/>stbi__pic_packet<sp/>packets[10];</highlight></codeline>
<codeline lineno="6393"><highlight class="normal"></highlight></codeline>
<codeline lineno="6394"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>this<sp/>will<sp/>(should...)<sp/>cater<sp/>for<sp/>even<sp/>some<sp/>bizarre<sp/>stuff<sp/>like<sp/>having<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6395"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>for<sp/>the<sp/>same<sp/>channel<sp/>in<sp/>multiple<sp/>packets.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6396"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="6397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stbi__pic_packet<sp/>*packet;</highlight></codeline>
<codeline lineno="6398"><highlight class="normal"></highlight></codeline>
<codeline lineno="6399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(num_packets==</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(packets)/</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(packets[0]))</highlight></codeline>
<codeline lineno="6400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stbi__errpuc(</highlight><highlight class="stringliteral">&quot;bad<sp/>format&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;too<sp/>many<sp/>packets&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="6401"><highlight class="normal"></highlight></codeline>
<codeline lineno="6402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>packet<sp/>=<sp/>&amp;packets[num_packets++];</highlight></codeline>
<codeline lineno="6403"><highlight class="normal"></highlight></codeline>
<codeline lineno="6404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>chained<sp/>=<sp/>stbi__get8(s);</highlight></codeline>
<codeline lineno="6405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>packet-&gt;size<sp/><sp/><sp/><sp/>=<sp/>stbi__get8(s);</highlight></codeline>
<codeline lineno="6406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>packet-&gt;type<sp/><sp/><sp/><sp/>=<sp/>stbi__get8(s);</highlight></codeline>
<codeline lineno="6407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>packet-&gt;channel<sp/>=<sp/>stbi__get8(s);</highlight></codeline>
<codeline lineno="6408"><highlight class="normal"></highlight></codeline>
<codeline lineno="6409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>act_comp<sp/>|=<sp/>packet-&gt;channel;</highlight></codeline>
<codeline lineno="6410"><highlight class="normal"></highlight></codeline>
<codeline lineno="6411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(stbi__at_eof(s))<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stbi__errpuc(</highlight><highlight class="stringliteral">&quot;bad<sp/>file&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;file<sp/>too<sp/>short<sp/>(reading<sp/>packets)&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="6412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(packet-&gt;size<sp/>!=<sp/>8)<sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stbi__errpuc(</highlight><highlight class="stringliteral">&quot;bad<sp/>format&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;packet<sp/>isn&apos;t<sp/>8bpp&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="6413"><highlight class="normal"><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(chained);</highlight></codeline>
<codeline lineno="6414"><highlight class="normal"></highlight></codeline>
<codeline lineno="6415"><highlight class="normal"><sp/><sp/><sp/>*comp<sp/>=<sp/>(act_comp<sp/>&amp;<sp/>0x10<sp/>?<sp/>4<sp/>:<sp/>3);<sp/></highlight><highlight class="comment">//<sp/>has<sp/>alpha<sp/>channel?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6416"><highlight class="normal"></highlight></codeline>
<codeline lineno="6417"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(y=0;<sp/>y&lt;height;<sp/>++y)<sp/>{</highlight></codeline>
<codeline lineno="6418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>packet_idx;</highlight></codeline>
<codeline lineno="6419"><highlight class="normal"></highlight></codeline>
<codeline lineno="6420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(packet_idx=0;<sp/>packet_idx<sp/>&lt;<sp/>num_packets;<sp/>++packet_idx)<sp/>{</highlight></codeline>
<codeline lineno="6421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stbi__pic_packet<sp/>*packet<sp/>=<sp/>&amp;packets[packet_idx];</highlight></codeline>
<codeline lineno="6422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d" kindref="member">stbi_uc</ref><sp/>*dest<sp/>=<sp/>result+y*width*4;</highlight></codeline>
<codeline lineno="6423"><highlight class="normal"></highlight></codeline>
<codeline lineno="6424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(packet-&gt;type)<sp/>{</highlight></codeline>
<codeline lineno="6425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="6426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stbi__errpuc(</highlight><highlight class="stringliteral">&quot;bad<sp/>format&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;packet<sp/>has<sp/>bad<sp/>compression<sp/>type&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="6427"><highlight class="normal"></highlight></codeline>
<codeline lineno="6428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0:<sp/>{</highlight><highlight class="comment">//uncompressed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x;</highlight></codeline>
<codeline lineno="6430"><highlight class="normal"></highlight></codeline>
<codeline lineno="6431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(x=0;x&lt;width;++x,<sp/>dest+=4)</highlight></codeline>
<codeline lineno="6432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!stbi__readval(s,packet-&gt;channel,dest))</highlight></codeline>
<codeline lineno="6433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="6434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6436"><highlight class="normal"></highlight></codeline>
<codeline lineno="6437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>1:</highlight><highlight class="comment">//Pure<sp/>RLE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="6439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>left=width,<sp/>i;</highlight></codeline>
<codeline lineno="6440"><highlight class="normal"></highlight></codeline>
<codeline lineno="6441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(left&gt;0)<sp/>{</highlight></codeline>
<codeline lineno="6442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d" kindref="member">stbi_uc</ref><sp/>count,value[4];</highlight></codeline>
<codeline lineno="6443"><highlight class="normal"></highlight></codeline>
<codeline lineno="6444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>count=stbi__get8(s);</highlight></codeline>
<codeline lineno="6445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(stbi__at_eof(s))<sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stbi__errpuc(</highlight><highlight class="stringliteral">&quot;bad<sp/>file&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;file<sp/>too<sp/>short<sp/>(pure<sp/>read<sp/>count)&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="6446"><highlight class="normal"></highlight></codeline>
<codeline lineno="6447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(count<sp/>&gt;<sp/>left)</highlight></codeline>
<codeline lineno="6448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>count<sp/>=<sp/>(<ref refid="stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d" kindref="member">stbi_uc</ref>)<sp/>left;</highlight></codeline>
<codeline lineno="6449"><highlight class="normal"></highlight></codeline>
<codeline lineno="6450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!stbi__readval(s,packet-&gt;channel,value))<sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="6451"><highlight class="normal"></highlight></codeline>
<codeline lineno="6452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;<sp/>i&lt;count;<sp/>++i,dest+=4)</highlight></codeline>
<codeline lineno="6453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stbi__copyval(packet-&gt;channel,dest,value);</highlight></codeline>
<codeline lineno="6454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>left<sp/>-=<sp/>count;</highlight></codeline>
<codeline lineno="6455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6458"><highlight class="normal"></highlight></codeline>
<codeline lineno="6459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>2:<sp/>{</highlight><highlight class="comment">//Mixed<sp/>RLE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>left=width;</highlight></codeline>
<codeline lineno="6461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(left&gt;0)<sp/>{</highlight></codeline>
<codeline lineno="6462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>count<sp/>=<sp/>stbi__get8(s),<sp/>i;</highlight></codeline>
<codeline lineno="6463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(stbi__at_eof(s))<sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stbi__errpuc(</highlight><highlight class="stringliteral">&quot;bad<sp/>file&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;file<sp/>too<sp/>short<sp/>(mixed<sp/>read<sp/>count)&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="6464"><highlight class="normal"></highlight></codeline>
<codeline lineno="6465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(count<sp/>&gt;=<sp/>128)<sp/>{<sp/></highlight><highlight class="comment">//<sp/>Repeated</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d" kindref="member">stbi_uc</ref><sp/>value[4];</highlight></codeline>
<codeline lineno="6467"><highlight class="normal"></highlight></codeline>
<codeline lineno="6468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(count==128)</highlight></codeline>
<codeline lineno="6469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>count<sp/>=<sp/>stbi__get16be(s);</highlight></codeline>
<codeline lineno="6470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>count<sp/>-=<sp/>127;</highlight></codeline>
<codeline lineno="6472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(count<sp/>&gt;<sp/>left)</highlight></codeline>
<codeline lineno="6473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stbi__errpuc(</highlight><highlight class="stringliteral">&quot;bad<sp/>file&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;scanline<sp/>overrun&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="6474"><highlight class="normal"></highlight></codeline>
<codeline lineno="6475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!stbi__readval(s,packet-&gt;channel,value))</highlight></codeline>
<codeline lineno="6476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="6477"><highlight class="normal"></highlight></codeline>
<codeline lineno="6478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;i&lt;count;++i,<sp/>dest<sp/>+=<sp/>4)</highlight></codeline>
<codeline lineno="6479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stbi__copyval(packet-&gt;channel,dest,value);</highlight></codeline>
<codeline lineno="6480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{<sp/></highlight><highlight class="comment">//<sp/>Raw</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++count;</highlight></codeline>
<codeline lineno="6482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(count&gt;left)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stbi__errpuc(</highlight><highlight class="stringliteral">&quot;bad<sp/>file&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;scanline<sp/>overrun&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="6483"><highlight class="normal"></highlight></codeline>
<codeline lineno="6484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;i&lt;count;++i,<sp/>dest+=4)</highlight></codeline>
<codeline lineno="6485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!stbi__readval(s,packet-&gt;channel,dest))</highlight></codeline>
<codeline lineno="6486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="6487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>left-=count;</highlight></codeline>
<codeline lineno="6489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6494"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6495"><highlight class="normal"></highlight></codeline>
<codeline lineno="6496"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="6497"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6498"><highlight class="normal"></highlight></codeline>
<codeline lineno="6499"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*stbi__pic_load(stbi__context<sp/>*s,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*px,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*py,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*comp,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>req_comp,<sp/>stbi__result_info<sp/>*ri)</highlight></codeline>
<codeline lineno="6500"><highlight class="normal">{</highlight></codeline>
<codeline lineno="6501"><highlight class="normal"><sp/><sp/><sp/><ref refid="stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d" kindref="member">stbi_uc</ref><sp/>*result;</highlight></codeline>
<codeline lineno="6502"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,<sp/>x,y,<sp/>internal_comp;</highlight></codeline>
<codeline lineno="6503"><highlight class="normal"><sp/><sp/><sp/>STBI_NOTUSED(ri);</highlight></codeline>
<codeline lineno="6504"><highlight class="normal"></highlight></codeline>
<codeline lineno="6505"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!comp)<sp/>comp<sp/>=<sp/>&amp;internal_comp;</highlight></codeline>
<codeline lineno="6506"><highlight class="normal"></highlight></codeline>
<codeline lineno="6507"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i&lt;92;<sp/>++i)</highlight></codeline>
<codeline lineno="6508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stbi__get8(s);</highlight></codeline>
<codeline lineno="6509"><highlight class="normal"></highlight></codeline>
<codeline lineno="6510"><highlight class="normal"><sp/><sp/><sp/>x<sp/>=<sp/>stbi__get16be(s);</highlight></codeline>
<codeline lineno="6511"><highlight class="normal"><sp/><sp/><sp/>y<sp/>=<sp/>stbi__get16be(s);</highlight></codeline>
<codeline lineno="6512"><highlight class="normal"></highlight></codeline>
<codeline lineno="6513"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(y<sp/>&gt;<sp/>STBI_MAX_DIMENSIONS)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stbi__errpuc(</highlight><highlight class="stringliteral">&quot;too<sp/>large&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;Very<sp/>large<sp/>image<sp/>(corrupt?)&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="6514"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(x<sp/>&gt;<sp/>STBI_MAX_DIMENSIONS)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stbi__errpuc(</highlight><highlight class="stringliteral">&quot;too<sp/>large&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;Very<sp/>large<sp/>image<sp/>(corrupt?)&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="6515"><highlight class="normal"></highlight></codeline>
<codeline lineno="6516"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(stbi__at_eof(s))<sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stbi__errpuc(</highlight><highlight class="stringliteral">&quot;bad<sp/>file&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;file<sp/>too<sp/>short<sp/>(pic<sp/>header)&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="6517"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!stbi__mad3sizes_valid(x,<sp/>y,<sp/>4,<sp/>0))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stbi__errpuc(</highlight><highlight class="stringliteral">&quot;too<sp/>large&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;PIC<sp/>image<sp/>too<sp/>large<sp/>to<sp/>decode&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="6518"><highlight class="normal"></highlight></codeline>
<codeline lineno="6519"><highlight class="normal"><sp/><sp/><sp/>stbi__get32be(s);<sp/></highlight><highlight class="comment">//skip<sp/>`ratio&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6520"><highlight class="normal"><sp/><sp/><sp/>stbi__get16be(s);<sp/></highlight><highlight class="comment">//skip<sp/>`fields&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6521"><highlight class="normal"><sp/><sp/><sp/>stbi__get16be(s);<sp/></highlight><highlight class="comment">//skip<sp/>`pad&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6522"><highlight class="normal"></highlight></codeline>
<codeline lineno="6523"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>intermediate<sp/>buffer<sp/>is<sp/>RGBA</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6524"><highlight class="normal"><sp/><sp/><sp/>result<sp/>=<sp/>(<ref refid="stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d" kindref="member">stbi_uc</ref><sp/>*)<sp/>stbi__malloc_mad3(x,<sp/>y,<sp/>4,<sp/>0);</highlight></codeline>
<codeline lineno="6525"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!result)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stbi__errpuc(</highlight><highlight class="stringliteral">&quot;outofmem&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Out<sp/>of<sp/>memory&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="6526"><highlight class="normal"><sp/><sp/><sp/>memset(result,<sp/>0xff,<sp/>x*y*4);</highlight></codeline>
<codeline lineno="6527"><highlight class="normal"></highlight></codeline>
<codeline lineno="6528"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!stbi__pic_load_core(s,x,y,comp,<sp/>result))<sp/>{</highlight></codeline>
<codeline lineno="6529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>STBI_FREE(result);</highlight></codeline>
<codeline lineno="6530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result=0;</highlight></codeline>
<codeline lineno="6531"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6532"><highlight class="normal"><sp/><sp/><sp/>*px<sp/>=<sp/>x;</highlight></codeline>
<codeline lineno="6533"><highlight class="normal"><sp/><sp/><sp/>*py<sp/>=<sp/>y;</highlight></codeline>
<codeline lineno="6534"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(req_comp<sp/>==<sp/>0)<sp/>req_comp<sp/>=<sp/>*comp;</highlight></codeline>
<codeline lineno="6535"><highlight class="normal"><sp/><sp/><sp/>result=stbi__convert_format(result,4,req_comp,x,y);</highlight></codeline>
<codeline lineno="6536"><highlight class="normal"></highlight></codeline>
<codeline lineno="6537"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="6538"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6539"><highlight class="normal"></highlight></codeline>
<codeline lineno="6540"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>stbi__pic_test(stbi__context<sp/>*s)</highlight></codeline>
<codeline lineno="6541"><highlight class="normal">{</highlight></codeline>
<codeline lineno="6542"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>r<sp/>=<sp/>stbi__pic_test_core(s);</highlight></codeline>
<codeline lineno="6543"><highlight class="normal"><sp/><sp/><sp/>stbi__rewind(s);</highlight></codeline>
<codeline lineno="6544"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>r;</highlight></codeline>
<codeline lineno="6545"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6546"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6547"><highlight class="normal"></highlight></codeline>
<codeline lineno="6548"><highlight class="normal"></highlight><highlight class="comment">//<sp/>*************************************************************************************************</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6549"><highlight class="normal"></highlight><highlight class="comment">//<sp/>GIF<sp/>loader<sp/>--<sp/>public<sp/>domain<sp/>by<sp/>Jean-Marc<sp/>Lienher<sp/>--<sp/>simplified/shrunk<sp/>by<sp/>stb</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6550"><highlight class="normal"></highlight></codeline>
<codeline lineno="6551"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>STBI_NO_GIF</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6552"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6553"><highlight class="normal">{</highlight></codeline>
<codeline lineno="6554"><highlight class="normal"><sp/><sp/><sp/>stbi__int16<sp/>prefix;</highlight></codeline>
<codeline lineno="6555"><highlight class="normal"><sp/><sp/><sp/><ref refid="stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d" kindref="member">stbi_uc</ref><sp/>first;</highlight></codeline>
<codeline lineno="6556"><highlight class="normal"><sp/><sp/><sp/><ref refid="stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d" kindref="member">stbi_uc</ref><sp/>suffix;</highlight></codeline>
<codeline lineno="6557"><highlight class="normal">}<sp/>stbi__gif_lzw;</highlight></codeline>
<codeline lineno="6558"><highlight class="normal"></highlight></codeline>
<codeline lineno="6559"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6560"><highlight class="normal">{</highlight></codeline>
<codeline lineno="6561"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>w,h;</highlight></codeline>
<codeline lineno="6562"><highlight class="normal"><sp/><sp/><sp/><ref refid="stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d" kindref="member">stbi_uc</ref><sp/>*out;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>output<sp/>buffer<sp/>(always<sp/>4<sp/>components)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6563"><highlight class="normal"><sp/><sp/><sp/><ref refid="stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d" kindref="member">stbi_uc</ref><sp/>*background;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>current<sp/>&quot;background&quot;<sp/>as<sp/>far<sp/>as<sp/>a<sp/>gif<sp/>is<sp/>concerned</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6564"><highlight class="normal"><sp/><sp/><sp/><ref refid="stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d" kindref="member">stbi_uc</ref><sp/>*history;</highlight></codeline>
<codeline lineno="6565"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>flags,<sp/>bgindex,<sp/>ratio,<sp/>transparent,<sp/>eflags;</highlight></codeline>
<codeline lineno="6566"><highlight class="normal"><sp/><sp/><sp/><ref refid="stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d" kindref="member">stbi_uc</ref><sp/><sp/>pal[256][4];</highlight></codeline>
<codeline lineno="6567"><highlight class="normal"><sp/><sp/><sp/><ref refid="stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d" kindref="member">stbi_uc</ref><sp/>lpal[256][4];</highlight></codeline>
<codeline lineno="6568"><highlight class="normal"><sp/><sp/><sp/>stbi__gif_lzw<sp/>codes[8192];</highlight></codeline>
<codeline lineno="6569"><highlight class="normal"><sp/><sp/><sp/><ref refid="stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d" kindref="member">stbi_uc</ref><sp/>*color_table;</highlight></codeline>
<codeline lineno="6570"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>parse,<sp/>step;</highlight></codeline>
<codeline lineno="6571"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lflags;</highlight></codeline>
<codeline lineno="6572"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>start_x,<sp/>start_y;</highlight></codeline>
<codeline lineno="6573"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>max_x,<sp/>max_y;</highlight></codeline>
<codeline lineno="6574"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>cur_x,<sp/>cur_y;</highlight></codeline>
<codeline lineno="6575"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>line_size;</highlight></codeline>
<codeline lineno="6576"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>delay;</highlight></codeline>
<codeline lineno="6577"><highlight class="normal">}<sp/>stbi__gif;</highlight></codeline>
<codeline lineno="6578"><highlight class="normal"></highlight></codeline>
<codeline lineno="6579"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>stbi__gif_test_raw(stbi__context<sp/>*s)</highlight></codeline>
<codeline lineno="6580"><highlight class="normal">{</highlight></codeline>
<codeline lineno="6581"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sz;</highlight></codeline>
<codeline lineno="6582"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(stbi__get8(s)<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;G&apos;</highlight><highlight class="normal"><sp/>||<sp/>stbi__get8(s)<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;I&apos;</highlight><highlight class="normal"><sp/>||<sp/>stbi__get8(s)<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;F&apos;</highlight><highlight class="normal"><sp/>||<sp/>stbi__get8(s)<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;8&apos;</highlight><highlight class="normal">)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="6583"><highlight class="normal"><sp/><sp/><sp/>sz<sp/>=<sp/>stbi__get8(s);</highlight></codeline>
<codeline lineno="6584"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sz<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;9&apos;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>sz<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;7&apos;</highlight><highlight class="normal">)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="6585"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(stbi__get8(s)<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;a&apos;</highlight><highlight class="normal">)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="6586"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="6587"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6588"><highlight class="normal"></highlight></codeline>
<codeline lineno="6589"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>stbi__gif_test(stbi__context<sp/>*s)</highlight></codeline>
<codeline lineno="6590"><highlight class="normal">{</highlight></codeline>
<codeline lineno="6591"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>r<sp/>=<sp/>stbi__gif_test_raw(s);</highlight></codeline>
<codeline lineno="6592"><highlight class="normal"><sp/><sp/><sp/>stbi__rewind(s);</highlight></codeline>
<codeline lineno="6593"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>r;</highlight></codeline>
<codeline lineno="6594"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6595"><highlight class="normal"></highlight></codeline>
<codeline lineno="6596"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>stbi__gif_parse_colortable(stbi__context<sp/>*s,<sp/><ref refid="stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d" kindref="member">stbi_uc</ref><sp/>pal[256][4],<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_entries,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>transp)</highlight></codeline>
<codeline lineno="6597"><highlight class="normal">{</highlight></codeline>
<codeline lineno="6598"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="6599"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i<sp/>&lt;<sp/>num_entries;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="6600"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pal[i][2]<sp/>=<sp/>stbi__get8(s);</highlight></codeline>
<codeline lineno="6601"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pal[i][1]<sp/>=<sp/>stbi__get8(s);</highlight></codeline>
<codeline lineno="6602"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pal[i][0]<sp/>=<sp/>stbi__get8(s);</highlight></codeline>
<codeline lineno="6603"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pal[i][3]<sp/>=<sp/>transp<sp/>==<sp/>i<sp/>?<sp/>0<sp/>:<sp/>255;</highlight></codeline>
<codeline lineno="6604"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6605"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6606"><highlight class="normal"></highlight></codeline>
<codeline lineno="6607"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>stbi__gif_header(stbi__context<sp/>*s,<sp/>stbi__gif<sp/>*g,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*comp,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>is_info)</highlight></codeline>
<codeline lineno="6608"><highlight class="normal">{</highlight></codeline>
<codeline lineno="6609"><highlight class="normal"><sp/><sp/><sp/><ref refid="stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d" kindref="member">stbi_uc</ref><sp/>version;</highlight></codeline>
<codeline lineno="6610"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(stbi__get8(s)<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;G&apos;</highlight><highlight class="normal"><sp/>||<sp/>stbi__get8(s)<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;I&apos;</highlight><highlight class="normal"><sp/>||<sp/>stbi__get8(s)<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;F&apos;</highlight><highlight class="normal"><sp/>||<sp/>stbi__get8(s)<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;8&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="6611"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stbi__err(</highlight><highlight class="stringliteral">&quot;not<sp/>GIF&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Corrupt<sp/>GIF&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="6612"><highlight class="normal"></highlight></codeline>
<codeline lineno="6613"><highlight class="normal"><sp/><sp/><sp/>version<sp/>=<sp/>stbi__get8(s);</highlight></codeline>
<codeline lineno="6614"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(version<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;7&apos;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>version<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;9&apos;</highlight><highlight class="normal">)<sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stbi__err(</highlight><highlight class="stringliteral">&quot;not<sp/>GIF&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Corrupt<sp/>GIF&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="6615"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(stbi__get8(s)<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;a&apos;</highlight><highlight class="normal">)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stbi__err(</highlight><highlight class="stringliteral">&quot;not<sp/>GIF&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Corrupt<sp/>GIF&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="6616"><highlight class="normal"></highlight></codeline>
<codeline lineno="6617"><highlight class="normal"><sp/><sp/><sp/>stbi__g_failure_reason<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6618"><highlight class="normal"><sp/><sp/><sp/>g-&gt;w<sp/>=<sp/>stbi__get16le(s);</highlight></codeline>
<codeline lineno="6619"><highlight class="normal"><sp/><sp/><sp/>g-&gt;h<sp/>=<sp/>stbi__get16le(s);</highlight></codeline>
<codeline lineno="6620"><highlight class="normal"><sp/><sp/><sp/>g-&gt;flags<sp/>=<sp/>stbi__get8(s);</highlight></codeline>
<codeline lineno="6621"><highlight class="normal"><sp/><sp/><sp/>g-&gt;bgindex<sp/>=<sp/>stbi__get8(s);</highlight></codeline>
<codeline lineno="6622"><highlight class="normal"><sp/><sp/><sp/>g-&gt;ratio<sp/>=<sp/>stbi__get8(s);</highlight></codeline>
<codeline lineno="6623"><highlight class="normal"><sp/><sp/><sp/>g-&gt;transparent<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="6624"><highlight class="normal"></highlight></codeline>
<codeline lineno="6625"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(g-&gt;w<sp/>&gt;<sp/>STBI_MAX_DIMENSIONS)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stbi__err(</highlight><highlight class="stringliteral">&quot;too<sp/>large&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;Very<sp/>large<sp/>image<sp/>(corrupt?)&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="6626"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(g-&gt;h<sp/>&gt;<sp/>STBI_MAX_DIMENSIONS)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stbi__err(</highlight><highlight class="stringliteral">&quot;too<sp/>large&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;Very<sp/>large<sp/>image<sp/>(corrupt?)&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="6627"><highlight class="normal"></highlight></codeline>
<codeline lineno="6628"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(comp<sp/>!=<sp/>0)<sp/>*comp<sp/>=<sp/>4;<sp/><sp/></highlight><highlight class="comment">//<sp/>can&apos;t<sp/>actually<sp/>tell<sp/>whether<sp/>it&apos;s<sp/>3<sp/>or<sp/>4<sp/>until<sp/>we<sp/>parse<sp/>the<sp/>comments</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6629"><highlight class="normal"></highlight></codeline>
<codeline lineno="6630"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(is_info)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="6631"><highlight class="normal"></highlight></codeline>
<codeline lineno="6632"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(g-&gt;flags<sp/>&amp;<sp/>0x80)</highlight></codeline>
<codeline lineno="6633"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stbi__gif_parse_colortable(s,g-&gt;pal,<sp/>2<sp/>&lt;&lt;<sp/>(g-&gt;flags<sp/>&amp;<sp/>7),<sp/>-1);</highlight></codeline>
<codeline lineno="6634"><highlight class="normal"></highlight></codeline>
<codeline lineno="6635"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="6636"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6637"><highlight class="normal"></highlight></codeline>
<codeline lineno="6638"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>stbi__gif_info_raw(stbi__context<sp/>*s,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*x,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*y,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*comp)</highlight></codeline>
<codeline lineno="6639"><highlight class="normal">{</highlight></codeline>
<codeline lineno="6640"><highlight class="normal"><sp/><sp/><sp/>stbi__gif*<sp/>g<sp/>=<sp/>(stbi__gif*)<sp/>stbi__malloc(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(stbi__gif));</highlight></codeline>
<codeline lineno="6641"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!g)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stbi__err(</highlight><highlight class="stringliteral">&quot;outofmem&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Out<sp/>of<sp/>memory&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="6642"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!stbi__gif_header(s,<sp/>g,<sp/>comp,<sp/>1))<sp/>{</highlight></codeline>
<codeline lineno="6643"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>STBI_FREE(g);</highlight></codeline>
<codeline lineno="6644"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stbi__rewind(<sp/>s<sp/>);</highlight></codeline>
<codeline lineno="6645"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="6646"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6647"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(x)<sp/>*x<sp/>=<sp/>g-&gt;w;</highlight></codeline>
<codeline lineno="6648"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(y)<sp/>*y<sp/>=<sp/>g-&gt;h;</highlight></codeline>
<codeline lineno="6649"><highlight class="normal"><sp/><sp/><sp/>STBI_FREE(g);</highlight></codeline>
<codeline lineno="6650"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="6651"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6652"><highlight class="normal"></highlight></codeline>
<codeline lineno="6653"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>stbi__out_gif_code(stbi__gif<sp/>*g,<sp/>stbi__uint16<sp/>code)</highlight></codeline>
<codeline lineno="6654"><highlight class="normal">{</highlight></codeline>
<codeline lineno="6655"><highlight class="normal"><sp/><sp/><sp/><ref refid="stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d" kindref="member">stbi_uc</ref><sp/>*p,<sp/>*c;</highlight></codeline>
<codeline lineno="6656"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>idx;</highlight></codeline>
<codeline lineno="6657"><highlight class="normal"></highlight></codeline>
<codeline lineno="6658"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>recurse<sp/>to<sp/>decode<sp/>the<sp/>prefixes,<sp/>since<sp/>the<sp/>linked-list<sp/>is<sp/>backwards,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6659"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>and<sp/>working<sp/>backwards<sp/>through<sp/>an<sp/>interleaved<sp/>image<sp/>would<sp/>be<sp/>nasty</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6660"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(g-&gt;codes[code].prefix<sp/>&gt;=<sp/>0)</highlight></codeline>
<codeline lineno="6661"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stbi__out_gif_code(g,<sp/>g-&gt;codes[code].prefix);</highlight></codeline>
<codeline lineno="6662"><highlight class="normal"></highlight></codeline>
<codeline lineno="6663"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(g-&gt;cur_y<sp/>&gt;=<sp/>g-&gt;max_y)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6664"><highlight class="normal"></highlight></codeline>
<codeline lineno="6665"><highlight class="normal"><sp/><sp/><sp/>idx<sp/>=<sp/>g-&gt;cur_x<sp/>+<sp/>g-&gt;cur_y;</highlight></codeline>
<codeline lineno="6666"><highlight class="normal"><sp/><sp/><sp/>p<sp/>=<sp/>&amp;g-&gt;out[idx];</highlight></codeline>
<codeline lineno="6667"><highlight class="normal"><sp/><sp/><sp/>g-&gt;history[idx<sp/>/<sp/>4]<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="6668"><highlight class="normal"></highlight></codeline>
<codeline lineno="6669"><highlight class="normal"><sp/><sp/><sp/>c<sp/>=<sp/>&amp;g-&gt;color_table[g-&gt;codes[code].suffix<sp/>*<sp/>4];</highlight></codeline>
<codeline lineno="6670"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(c[3]<sp/>&gt;<sp/>128)<sp/>{<sp/></highlight><highlight class="comment">//<sp/>don&apos;t<sp/>render<sp/>transparent<sp/>pixels;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6671"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>p[0]<sp/>=<sp/>c[2];</highlight></codeline>
<codeline lineno="6672"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>p[1]<sp/>=<sp/>c[1];</highlight></codeline>
<codeline lineno="6673"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>p[2]<sp/>=<sp/>c[0];</highlight></codeline>
<codeline lineno="6674"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>p[3]<sp/>=<sp/>c[3];</highlight></codeline>
<codeline lineno="6675"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6676"><highlight class="normal"><sp/><sp/><sp/>g-&gt;cur_x<sp/>+=<sp/>4;</highlight></codeline>
<codeline lineno="6677"><highlight class="normal"></highlight></codeline>
<codeline lineno="6678"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(g-&gt;cur_x<sp/>&gt;=<sp/>g-&gt;max_x)<sp/>{</highlight></codeline>
<codeline lineno="6679"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>g-&gt;cur_x<sp/>=<sp/>g-&gt;start_x;</highlight></codeline>
<codeline lineno="6680"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>g-&gt;cur_y<sp/>+=<sp/>g-&gt;step;</highlight></codeline>
<codeline lineno="6681"><highlight class="normal"></highlight></codeline>
<codeline lineno="6682"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(g-&gt;cur_y<sp/>&gt;=<sp/>g-&gt;max_y<sp/>&amp;&amp;<sp/>g-&gt;parse<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="6683"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g-&gt;step<sp/>=<sp/>(1<sp/>&lt;&lt;<sp/>g-&gt;parse)<sp/>*<sp/>g-&gt;line_size;</highlight></codeline>
<codeline lineno="6684"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g-&gt;cur_y<sp/>=<sp/>g-&gt;start_y<sp/>+<sp/>(g-&gt;step<sp/>&gt;&gt;<sp/>1);</highlight></codeline>
<codeline lineno="6685"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>--g-&gt;parse;</highlight></codeline>
<codeline lineno="6686"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6687"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6688"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6689"><highlight class="normal"></highlight></codeline>
<codeline lineno="6690"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d" kindref="member">stbi_uc</ref><sp/>*stbi__process_gif_raster(stbi__context<sp/>*s,<sp/>stbi__gif<sp/>*g)</highlight></codeline>
<codeline lineno="6691"><highlight class="normal">{</highlight></codeline>
<codeline lineno="6692"><highlight class="normal"><sp/><sp/><sp/><ref refid="stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d" kindref="member">stbi_uc</ref><sp/>lzw_cs;</highlight></codeline>
<codeline lineno="6693"><highlight class="normal"><sp/><sp/><sp/>stbi__int32<sp/>len,<sp/>init_code;</highlight></codeline>
<codeline lineno="6694"><highlight class="normal"><sp/><sp/><sp/>stbi__uint32<sp/>first;</highlight></codeline>
<codeline lineno="6695"><highlight class="normal"><sp/><sp/><sp/>stbi__int32<sp/>codesize,<sp/>codemask,<sp/>avail,<sp/>oldcode,<sp/>bits,<sp/>valid_bits,<sp/>clear;</highlight></codeline>
<codeline lineno="6696"><highlight class="normal"><sp/><sp/><sp/>stbi__gif_lzw<sp/>*p;</highlight></codeline>
<codeline lineno="6697"><highlight class="normal"></highlight></codeline>
<codeline lineno="6698"><highlight class="normal"><sp/><sp/><sp/>lzw_cs<sp/>=<sp/>stbi__get8(s);</highlight></codeline>
<codeline lineno="6699"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(lzw_cs<sp/>&gt;<sp/>12)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="6700"><highlight class="normal"><sp/><sp/><sp/>clear<sp/>=<sp/>1<sp/>&lt;&lt;<sp/>lzw_cs;</highlight></codeline>
<codeline lineno="6701"><highlight class="normal"><sp/><sp/><sp/>first<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="6702"><highlight class="normal"><sp/><sp/><sp/>codesize<sp/>=<sp/>lzw_cs<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="6703"><highlight class="normal"><sp/><sp/><sp/>codemask<sp/>=<sp/>(1<sp/>&lt;&lt;<sp/>codesize)<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="6704"><highlight class="normal"><sp/><sp/><sp/>bits<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="6705"><highlight class="normal"><sp/><sp/><sp/>valid_bits<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="6706"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(init_code<sp/>=<sp/>0;<sp/>init_code<sp/>&lt;<sp/>clear;<sp/>init_code++)<sp/>{</highlight></codeline>
<codeline lineno="6707"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>g-&gt;codes[init_code].prefix<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="6708"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>g-&gt;codes[init_code].first<sp/>=<sp/>(<ref refid="stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d" kindref="member">stbi_uc</ref>)<sp/>init_code;</highlight></codeline>
<codeline lineno="6709"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>g-&gt;codes[init_code].suffix<sp/>=<sp/>(<ref refid="stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d" kindref="member">stbi_uc</ref>)<sp/>init_code;</highlight></codeline>
<codeline lineno="6710"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6711"><highlight class="normal"></highlight></codeline>
<codeline lineno="6712"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>support<sp/>no<sp/>starting<sp/>clear<sp/>code</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6713"><highlight class="normal"><sp/><sp/><sp/>avail<sp/>=<sp/>clear+2;</highlight></codeline>
<codeline lineno="6714"><highlight class="normal"><sp/><sp/><sp/>oldcode<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="6715"><highlight class="normal"></highlight></codeline>
<codeline lineno="6716"><highlight class="normal"><sp/><sp/><sp/>len<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="6717"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(;;)<sp/>{</highlight></codeline>
<codeline lineno="6718"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(valid_bits<sp/>&lt;<sp/>codesize)<sp/>{</highlight></codeline>
<codeline lineno="6719"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(len<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="6720"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len<sp/>=<sp/>stbi__get8(s);<sp/></highlight><highlight class="comment">//<sp/>start<sp/>new<sp/>block</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6721"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(len<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="6722"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>g-&gt;out;</highlight></codeline>
<codeline lineno="6723"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6724"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>--len;</highlight></codeline>
<codeline lineno="6725"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bits<sp/>|=<sp/>(stbi__int32)<sp/>stbi__get8(s)<sp/>&lt;&lt;<sp/>valid_bits;</highlight></codeline>
<codeline lineno="6726"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>valid_bits<sp/>+=<sp/>8;</highlight></codeline>
<codeline lineno="6727"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="6728"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stbi__int32<sp/>code<sp/>=<sp/>bits<sp/>&amp;<sp/>codemask;</highlight></codeline>
<codeline lineno="6729"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bits<sp/>&gt;&gt;=<sp/>codesize;</highlight></codeline>
<codeline lineno="6730"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>valid_bits<sp/>-=<sp/>codesize;</highlight></codeline>
<codeline lineno="6731"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>@OPTIMIZE:<sp/>is<sp/>there<sp/>some<sp/>way<sp/>we<sp/>can<sp/>accelerate<sp/>the<sp/>non-clear<sp/>path?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6732"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(code<sp/>==<sp/>clear)<sp/>{<sp/><sp/></highlight><highlight class="comment">//<sp/>clear<sp/>code</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6733"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>codesize<sp/>=<sp/>lzw_cs<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="6734"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>codemask<sp/>=<sp/>(1<sp/>&lt;&lt;<sp/>codesize)<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="6735"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>avail<sp/>=<sp/>clear<sp/>+<sp/>2;</highlight></codeline>
<codeline lineno="6736"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>oldcode<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="6737"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>first<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="6738"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(code<sp/>==<sp/>clear<sp/>+<sp/>1)<sp/>{<sp/></highlight><highlight class="comment">//<sp/>end<sp/>of<sp/>stream<sp/>code</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6739"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stbi__skip(s,<sp/>len);</highlight></codeline>
<codeline lineno="6740"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>((len<sp/>=<sp/>stbi__get8(s))<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="6741"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stbi__skip(s,len);</highlight></codeline>
<codeline lineno="6742"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>g-&gt;out;</highlight></codeline>
<codeline lineno="6743"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(code<sp/>&lt;=<sp/>avail)<sp/>{</highlight></codeline>
<codeline lineno="6744"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(first)<sp/>{</highlight></codeline>
<codeline lineno="6745"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stbi__errpuc(</highlight><highlight class="stringliteral">&quot;no<sp/>clear<sp/>code&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Corrupt<sp/>GIF&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="6746"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6747"><highlight class="normal"></highlight></codeline>
<codeline lineno="6748"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(oldcode<sp/>&gt;=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="6749"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p<sp/>=<sp/>&amp;g-&gt;codes[avail++];</highlight></codeline>
<codeline lineno="6750"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(avail<sp/>&gt;<sp/>8192)<sp/>{</highlight></codeline>
<codeline lineno="6751"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stbi__errpuc(</highlight><highlight class="stringliteral">&quot;too<sp/>many<sp/>codes&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Corrupt<sp/>GIF&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="6752"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6753"><highlight class="normal"></highlight></codeline>
<codeline lineno="6754"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p-&gt;prefix<sp/>=<sp/>(stbi__int16)<sp/>oldcode;</highlight></codeline>
<codeline lineno="6755"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p-&gt;first<sp/>=<sp/>g-&gt;codes[oldcode].first;</highlight></codeline>
<codeline lineno="6756"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p-&gt;suffix<sp/>=<sp/>(code<sp/>==<sp/>avail)<sp/>?<sp/>p-&gt;first<sp/>:<sp/>g-&gt;codes[code].first;</highlight></codeline>
<codeline lineno="6757"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(code<sp/>==<sp/>avail)</highlight></codeline>
<codeline lineno="6758"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stbi__errpuc(</highlight><highlight class="stringliteral">&quot;illegal<sp/>code<sp/>in<sp/>raster&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Corrupt<sp/>GIF&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="6759"><highlight class="normal"></highlight></codeline>
<codeline lineno="6760"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stbi__out_gif_code(g,<sp/>(stbi__uint16)<sp/>code);</highlight></codeline>
<codeline lineno="6761"><highlight class="normal"></highlight></codeline>
<codeline lineno="6762"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((avail<sp/>&amp;<sp/>codemask)<sp/>==<sp/>0<sp/>&amp;&amp;<sp/>avail<sp/>&lt;=<sp/>0x0FFF)<sp/>{</highlight></codeline>
<codeline lineno="6763"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>codesize++;</highlight></codeline>
<codeline lineno="6764"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>codemask<sp/>=<sp/>(1<sp/>&lt;&lt;<sp/>codesize)<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="6765"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6766"><highlight class="normal"></highlight></codeline>
<codeline lineno="6767"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>oldcode<sp/>=<sp/>code;</highlight></codeline>
<codeline lineno="6768"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="6769"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stbi__errpuc(</highlight><highlight class="stringliteral">&quot;illegal<sp/>code<sp/>in<sp/>raster&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Corrupt<sp/>GIF&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="6770"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6771"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6772"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6773"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6774"><highlight class="normal"></highlight></codeline>
<codeline lineno="6775"><highlight class="normal"></highlight><highlight class="comment">//<sp/>this<sp/>function<sp/>is<sp/>designed<sp/>to<sp/>support<sp/>animated<sp/>gifs,<sp/>although<sp/>stb_image<sp/>doesn&apos;t<sp/>support<sp/>it</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6776"><highlight class="normal"></highlight><highlight class="comment">//<sp/>two<sp/>back<sp/>is<sp/>the<sp/>image<sp/>from<sp/>two<sp/>frames<sp/>ago,<sp/>used<sp/>for<sp/>a<sp/>very<sp/>specific<sp/>disposal<sp/>format</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6777"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d" kindref="member">stbi_uc</ref><sp/>*stbi__gif_load_next(stbi__context<sp/>*s,<sp/>stbi__gif<sp/>*g,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*comp,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>req_comp,<sp/><ref refid="stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d" kindref="member">stbi_uc</ref><sp/>*two_back)</highlight></codeline>
<codeline lineno="6778"><highlight class="normal">{</highlight></codeline>
<codeline lineno="6779"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dispose;</highlight></codeline>
<codeline lineno="6780"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>first_frame;</highlight></codeline>
<codeline lineno="6781"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pi;</highlight></codeline>
<codeline lineno="6782"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pcount;</highlight></codeline>
<codeline lineno="6783"><highlight class="normal"><sp/><sp/><sp/>STBI_NOTUSED(req_comp);</highlight></codeline>
<codeline lineno="6784"><highlight class="normal"></highlight></codeline>
<codeline lineno="6785"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>on<sp/>first<sp/>frame,<sp/>any<sp/>non-written<sp/>pixels<sp/>get<sp/>the<sp/>background<sp/>colour<sp/>(non-transparent)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6786"><highlight class="normal"><sp/><sp/><sp/>first_frame<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="6787"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(g-&gt;out<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="6788"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!stbi__gif_header(s,<sp/>g,<sp/>comp,0))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;<sp/></highlight><highlight class="comment">//<sp/>stbi__g_failure_reason<sp/>set<sp/>by<sp/>stbi__gif_header</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6789"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!stbi__mad3sizes_valid(4,<sp/>g-&gt;w,<sp/>g-&gt;h,<sp/>0))</highlight></codeline>
<codeline lineno="6790"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stbi__errpuc(</highlight><highlight class="stringliteral">&quot;too<sp/>large&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;GIF<sp/>image<sp/>is<sp/>too<sp/>large&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="6791"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pcount<sp/>=<sp/>g-&gt;w<sp/>*<sp/>g-&gt;h;</highlight></codeline>
<codeline lineno="6792"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>g-&gt;out<sp/>=<sp/>(<ref refid="stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d" kindref="member">stbi_uc</ref><sp/>*)<sp/>stbi__malloc(4<sp/>*<sp/>pcount);</highlight></codeline>
<codeline lineno="6793"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>g-&gt;background<sp/>=<sp/>(<ref refid="stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d" kindref="member">stbi_uc</ref><sp/>*)<sp/>stbi__malloc(4<sp/>*<sp/>pcount);</highlight></codeline>
<codeline lineno="6794"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>g-&gt;history<sp/>=<sp/>(<ref refid="stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d" kindref="member">stbi_uc</ref><sp/>*)<sp/>stbi__malloc(pcount);</highlight></codeline>
<codeline lineno="6795"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!g-&gt;out<sp/>||<sp/>!g-&gt;background<sp/>||<sp/>!g-&gt;history)</highlight></codeline>
<codeline lineno="6796"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stbi__errpuc(</highlight><highlight class="stringliteral">&quot;outofmem&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Out<sp/>of<sp/>memory&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="6797"><highlight class="normal"></highlight></codeline>
<codeline lineno="6798"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>image<sp/>is<sp/>treated<sp/>as<sp/>&quot;transparent&quot;<sp/>at<sp/>the<sp/>start<sp/>-<sp/>ie,<sp/>nothing<sp/>overwrites<sp/>the<sp/>current<sp/>background;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6799"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>background<sp/>colour<sp/>is<sp/>only<sp/>used<sp/>for<sp/>pixels<sp/>that<sp/>are<sp/>not<sp/>rendered<sp/>first<sp/>frame,<sp/>after<sp/>that<sp/>&quot;background&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6800"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>color<sp/>refers<sp/>to<sp/>the<sp/>color<sp/>that<sp/>was<sp/>there<sp/>the<sp/>previous<sp/>frame.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6801"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>memset(g-&gt;out,<sp/>0x00,<sp/>4<sp/>*<sp/>pcount);</highlight></codeline>
<codeline lineno="6802"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>memset(g-&gt;background,<sp/>0x00,<sp/>4<sp/>*<sp/>pcount);<sp/></highlight><highlight class="comment">//<sp/>state<sp/>of<sp/>the<sp/>background<sp/>(starts<sp/>transparent)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6803"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>memset(g-&gt;history,<sp/>0x00,<sp/>pcount);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>pixels<sp/>that<sp/>were<sp/>affected<sp/>previous<sp/>frame</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6804"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>first_frame<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="6805"><highlight class="normal"><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="6806"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>second<sp/>frame<sp/>-<sp/>how<sp/>do<sp/>we<sp/>dispose<sp/>of<sp/>the<sp/>previous<sp/>one?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6807"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>dispose<sp/>=<sp/>(g-&gt;eflags<sp/>&amp;<sp/>0x1C)<sp/>&gt;&gt;<sp/>2;</highlight></codeline>
<codeline lineno="6808"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pcount<sp/>=<sp/>g-&gt;w<sp/>*<sp/>g-&gt;h;</highlight></codeline>
<codeline lineno="6809"><highlight class="normal"></highlight></codeline>
<codeline lineno="6810"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((dispose<sp/>==<sp/>3)<sp/>&amp;&amp;<sp/>(two_back<sp/>==<sp/>0))<sp/>{</highlight></codeline>
<codeline lineno="6811"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dispose<sp/>=<sp/>2;<sp/></highlight><highlight class="comment">//<sp/>if<sp/>I<sp/>don&apos;t<sp/>have<sp/>an<sp/>image<sp/>to<sp/>revert<sp/>back<sp/>to,<sp/>default<sp/>to<sp/>the<sp/>old<sp/>background</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6812"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6813"><highlight class="normal"></highlight></codeline>
<codeline lineno="6814"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dispose<sp/>==<sp/>3)<sp/>{<sp/></highlight><highlight class="comment">//<sp/>use<sp/>previous<sp/>graphic</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6815"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(pi<sp/>=<sp/>0;<sp/>pi<sp/>&lt;<sp/>pcount;<sp/>++pi)<sp/>{</highlight></codeline>
<codeline lineno="6816"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(g-&gt;history[pi])<sp/>{</highlight></codeline>
<codeline lineno="6817"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(<sp/>&amp;g-&gt;out[pi<sp/>*<sp/>4],<sp/>&amp;two_back[pi<sp/>*<sp/>4],<sp/>4<sp/>);</highlight></codeline>
<codeline lineno="6818"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6819"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6820"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dispose<sp/>==<sp/>2)<sp/>{</highlight></codeline>
<codeline lineno="6821"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>restore<sp/>what<sp/>was<sp/>changed<sp/>last<sp/>frame<sp/>to<sp/>background<sp/>before<sp/>that<sp/>frame;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6822"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(pi<sp/>=<sp/>0;<sp/>pi<sp/>&lt;<sp/>pcount;<sp/>++pi)<sp/>{</highlight></codeline>
<codeline lineno="6823"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(g-&gt;history[pi])<sp/>{</highlight></codeline>
<codeline lineno="6824"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(<sp/>&amp;g-&gt;out[pi<sp/>*<sp/>4],<sp/>&amp;g-&gt;background[pi<sp/>*<sp/>4],<sp/>4<sp/>);</highlight></codeline>
<codeline lineno="6825"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6826"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6827"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="6828"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>is<sp/>a<sp/>non-disposal<sp/>case<sp/>eithe<sp/>way,<sp/>so<sp/>just</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6829"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>leave<sp/>the<sp/>pixels<sp/>as<sp/>is,<sp/>and<sp/>they<sp/>will<sp/>become<sp/>the<sp/>new<sp/>background</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6830"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>1:<sp/>do<sp/>not<sp/>dispose</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6831"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>0:<sp/><sp/>not<sp/>specified.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6832"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6833"><highlight class="normal"></highlight></codeline>
<codeline lineno="6834"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>background<sp/>is<sp/>what<sp/>out<sp/>is<sp/>after<sp/>the<sp/>undoing<sp/>of<sp/>the<sp/>previou<sp/>frame;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6835"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(<sp/>g-&gt;background,<sp/>g-&gt;out,<sp/>4<sp/>*<sp/>g-&gt;w<sp/>*<sp/>g-&gt;h<sp/>);</highlight></codeline>
<codeline lineno="6836"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6837"><highlight class="normal"></highlight></codeline>
<codeline lineno="6838"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>clear<sp/>my<sp/>history;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6839"><highlight class="normal"><sp/><sp/><sp/>memset(<sp/>g-&gt;history,<sp/>0x00,<sp/>g-&gt;w<sp/>*<sp/>g-&gt;h<sp/>);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>pixels<sp/>that<sp/>were<sp/>affected<sp/>previous<sp/>frame</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6840"><highlight class="normal"></highlight></codeline>
<codeline lineno="6841"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(;;)<sp/>{</highlight></codeline>
<codeline lineno="6842"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tag<sp/>=<sp/>stbi__get8(s);</highlight></codeline>
<codeline lineno="6843"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(tag)<sp/>{</highlight></codeline>
<codeline lineno="6844"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0x2C:<sp/></highlight><highlight class="comment">/*<sp/>Image<sp/>Descriptor<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6845"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="6846"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stbi__int32<sp/>x,<sp/>y,<sp/>w,<sp/>h;</highlight></codeline>
<codeline lineno="6847"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d" kindref="member">stbi_uc</ref><sp/>*o;</highlight></codeline>
<codeline lineno="6848"><highlight class="normal"></highlight></codeline>
<codeline lineno="6849"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x<sp/>=<sp/>stbi__get16le(s);</highlight></codeline>
<codeline lineno="6850"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y<sp/>=<sp/>stbi__get16le(s);</highlight></codeline>
<codeline lineno="6851"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>w<sp/>=<sp/>stbi__get16le(s);</highlight></codeline>
<codeline lineno="6852"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>h<sp/>=<sp/>stbi__get16le(s);</highlight></codeline>
<codeline lineno="6853"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(((x<sp/>+<sp/>w)<sp/>&gt;<sp/>(g-&gt;w))<sp/>||<sp/>((y<sp/>+<sp/>h)<sp/>&gt;<sp/>(g-&gt;h)))</highlight></codeline>
<codeline lineno="6854"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stbi__errpuc(</highlight><highlight class="stringliteral">&quot;bad<sp/>Image<sp/>Descriptor&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Corrupt<sp/>GIF&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="6855"><highlight class="normal"></highlight></codeline>
<codeline lineno="6856"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g-&gt;line_size<sp/>=<sp/>g-&gt;w<sp/>*<sp/>4;</highlight></codeline>
<codeline lineno="6857"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g-&gt;start_x<sp/>=<sp/>x<sp/>*<sp/>4;</highlight></codeline>
<codeline lineno="6858"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g-&gt;start_y<sp/>=<sp/>y<sp/>*<sp/>g-&gt;line_size;</highlight></codeline>
<codeline lineno="6859"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g-&gt;max_x<sp/><sp/><sp/>=<sp/>g-&gt;start_x<sp/>+<sp/>w<sp/>*<sp/>4;</highlight></codeline>
<codeline lineno="6860"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g-&gt;max_y<sp/><sp/><sp/>=<sp/>g-&gt;start_y<sp/>+<sp/>h<sp/>*<sp/>g-&gt;line_size;</highlight></codeline>
<codeline lineno="6861"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g-&gt;cur_x<sp/><sp/><sp/>=<sp/>g-&gt;start_x;</highlight></codeline>
<codeline lineno="6862"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g-&gt;cur_y<sp/><sp/><sp/>=<sp/>g-&gt;start_y;</highlight></codeline>
<codeline lineno="6863"><highlight class="normal"></highlight></codeline>
<codeline lineno="6864"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>the<sp/>width<sp/>of<sp/>the<sp/>specified<sp/>rectangle<sp/>is<sp/>0,<sp/>that<sp/>means</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6865"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>we<sp/>may<sp/>not<sp/>see<sp/>*any*<sp/>pixels<sp/>or<sp/>the<sp/>image<sp/>is<sp/>malformed;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6866"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>to<sp/>make<sp/>sure<sp/>this<sp/>is<sp/>caught,<sp/>move<sp/>the<sp/>current<sp/>y<sp/>down<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6867"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>max_y<sp/>(which<sp/>is<sp/>what<sp/>out_gif_code<sp/>checks).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6868"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(w<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="6869"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g-&gt;cur_y<sp/>=<sp/>g-&gt;max_y;</highlight></codeline>
<codeline lineno="6870"><highlight class="normal"></highlight></codeline>
<codeline lineno="6871"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g-&gt;lflags<sp/>=<sp/>stbi__get8(s);</highlight></codeline>
<codeline lineno="6872"><highlight class="normal"></highlight></codeline>
<codeline lineno="6873"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(g-&gt;lflags<sp/>&amp;<sp/>0x40)<sp/>{</highlight></codeline>
<codeline lineno="6874"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g-&gt;step<sp/>=<sp/>8<sp/>*<sp/>g-&gt;line_size;<sp/></highlight><highlight class="comment">//<sp/>first<sp/>interlaced<sp/>spacing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6875"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g-&gt;parse<sp/>=<sp/>3;</highlight></codeline>
<codeline lineno="6876"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="6877"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g-&gt;step<sp/>=<sp/>g-&gt;line_size;</highlight></codeline>
<codeline lineno="6878"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g-&gt;parse<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="6879"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6880"><highlight class="normal"></highlight></codeline>
<codeline lineno="6881"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(g-&gt;lflags<sp/>&amp;<sp/>0x80)<sp/>{</highlight></codeline>
<codeline lineno="6882"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stbi__gif_parse_colortable(s,g-&gt;lpal,<sp/>2<sp/>&lt;&lt;<sp/>(g-&gt;lflags<sp/>&amp;<sp/>7),<sp/>g-&gt;eflags<sp/>&amp;<sp/>0x01<sp/>?<sp/>g-&gt;transparent<sp/>:<sp/>-1);</highlight></codeline>
<codeline lineno="6883"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g-&gt;color_table<sp/>=<sp/>(<ref refid="stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d" kindref="member">stbi_uc</ref><sp/>*)<sp/>g-&gt;lpal;</highlight></codeline>
<codeline lineno="6884"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(g-&gt;flags<sp/>&amp;<sp/>0x80)<sp/>{</highlight></codeline>
<codeline lineno="6885"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g-&gt;color_table<sp/>=<sp/>(<ref refid="stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d" kindref="member">stbi_uc</ref><sp/>*)<sp/>g-&gt;pal;</highlight></codeline>
<codeline lineno="6886"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6887"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stbi__errpuc(</highlight><highlight class="stringliteral">&quot;missing<sp/>color<sp/>table&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Corrupt<sp/>GIF&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="6888"><highlight class="normal"></highlight></codeline>
<codeline lineno="6889"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>o<sp/>=<sp/>stbi__process_gif_raster(s,<sp/>g);</highlight></codeline>
<codeline lineno="6890"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!o)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="6891"><highlight class="normal"></highlight></codeline>
<codeline lineno="6892"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>this<sp/>was<sp/>the<sp/>first<sp/>frame,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6893"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pcount<sp/>=<sp/>g-&gt;w<sp/>*<sp/>g-&gt;h;</highlight></codeline>
<codeline lineno="6894"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(first_frame<sp/>&amp;&amp;<sp/>(g-&gt;bgindex<sp/>&gt;<sp/>0))<sp/>{</highlight></codeline>
<codeline lineno="6895"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>first<sp/>frame,<sp/>any<sp/>pixel<sp/>not<sp/>drawn<sp/>to<sp/>gets<sp/>the<sp/>background<sp/>color</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6896"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(pi<sp/>=<sp/>0;<sp/>pi<sp/>&lt;<sp/>pcount;<sp/>++pi)<sp/>{</highlight></codeline>
<codeline lineno="6897"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(g-&gt;history[pi]<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="6898"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g-&gt;pal[g-&gt;bgindex][3]<sp/>=<sp/>255;<sp/></highlight><highlight class="comment">//<sp/>just<sp/>in<sp/>case<sp/>it<sp/>was<sp/>made<sp/>transparent,<sp/>undo<sp/>that;<sp/>It<sp/>will<sp/>be<sp/>reset<sp/>next<sp/>frame<sp/>if<sp/>need<sp/>be;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6899"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(<sp/>&amp;g-&gt;out[pi<sp/>*<sp/>4],<sp/>&amp;g-&gt;pal[g-&gt;bgindex],<sp/>4<sp/>);</highlight></codeline>
<codeline lineno="6900"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6901"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6902"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6903"><highlight class="normal"></highlight></codeline>
<codeline lineno="6904"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>o;</highlight></codeline>
<codeline lineno="6905"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6906"><highlight class="normal"></highlight></codeline>
<codeline lineno="6907"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0x21:<sp/></highlight><highlight class="comment">//<sp/>Comment<sp/>Extension.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6908"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="6909"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>len;</highlight></codeline>
<codeline lineno="6910"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ext<sp/>=<sp/>stbi__get8(s);</highlight></codeline>
<codeline lineno="6911"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ext<sp/>==<sp/>0xF9)<sp/>{<sp/></highlight><highlight class="comment">//<sp/>Graphic<sp/>Control<sp/>Extension.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6912"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len<sp/>=<sp/>stbi__get8(s);</highlight></codeline>
<codeline lineno="6913"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(len<sp/>==<sp/>4)<sp/>{</highlight></codeline>
<codeline lineno="6914"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g-&gt;eflags<sp/>=<sp/>stbi__get8(s);</highlight></codeline>
<codeline lineno="6915"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g-&gt;delay<sp/>=<sp/>10<sp/>*<sp/>stbi__get16le(s);<sp/></highlight><highlight class="comment">//<sp/>delay<sp/>-<sp/>1/100th<sp/>of<sp/>a<sp/>second,<sp/>saving<sp/>as<sp/>1/1000ths.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6916"><highlight class="normal"></highlight></codeline>
<codeline lineno="6917"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>unset<sp/>old<sp/>transparent</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6918"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(g-&gt;transparent<sp/>&gt;=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="6919"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g-&gt;pal[g-&gt;transparent][3]<sp/>=<sp/>255;</highlight></codeline>
<codeline lineno="6920"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6921"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(g-&gt;eflags<sp/>&amp;<sp/>0x01)<sp/>{</highlight></codeline>
<codeline lineno="6922"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g-&gt;transparent<sp/>=<sp/>stbi__get8(s);</highlight></codeline>
<codeline lineno="6923"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(g-&gt;transparent<sp/>&gt;=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="6924"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g-&gt;pal[g-&gt;transparent][3]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="6925"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6926"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="6927"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>don&apos;t<sp/>need<sp/>transparent</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6928"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stbi__skip(s,<sp/>1);</highlight></codeline>
<codeline lineno="6929"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g-&gt;transparent<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="6930"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6931"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="6932"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stbi__skip(s,<sp/>len);</highlight></codeline>
<codeline lineno="6933"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6934"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6935"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6936"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>((len<sp/>=<sp/>stbi__get8(s))<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="6937"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stbi__skip(s,<sp/>len);</highlight></codeline>
<codeline lineno="6938"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6939"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6940"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6941"><highlight class="normal"></highlight></codeline>
<codeline lineno="6942"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0x3B:<sp/></highlight><highlight class="comment">//<sp/>gif<sp/>stream<sp/>termination<sp/>code</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6943"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d" kindref="member">stbi_uc</ref><sp/>*)<sp/>s;<sp/></highlight><highlight class="comment">//<sp/>using<sp/>&apos;1&apos;<sp/>causes<sp/>warning<sp/>on<sp/>some<sp/>compilers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6944"><highlight class="normal"></highlight></codeline>
<codeline lineno="6945"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="6946"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stbi__errpuc(</highlight><highlight class="stringliteral">&quot;unknown<sp/>code&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Corrupt<sp/>GIF&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="6947"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6948"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6949"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6950"><highlight class="normal"></highlight></codeline>
<codeline lineno="6951"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*stbi__load_gif_main_outofmem(stbi__gif<sp/>*g,<sp/><ref refid="stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d" kindref="member">stbi_uc</ref><sp/>*out,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>**delays)</highlight></codeline>
<codeline lineno="6952"><highlight class="normal">{</highlight></codeline>
<codeline lineno="6953"><highlight class="normal"><sp/><sp/><sp/>STBI_FREE(g-&gt;out);</highlight></codeline>
<codeline lineno="6954"><highlight class="normal"><sp/><sp/><sp/>STBI_FREE(g-&gt;history);</highlight></codeline>
<codeline lineno="6955"><highlight class="normal"><sp/><sp/><sp/>STBI_FREE(g-&gt;background);</highlight></codeline>
<codeline lineno="6956"><highlight class="normal"></highlight></codeline>
<codeline lineno="6957"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(out)<sp/>STBI_FREE(out);</highlight></codeline>
<codeline lineno="6958"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(delays<sp/>&amp;&amp;<sp/>*delays)<sp/>STBI_FREE(*delays);</highlight></codeline>
<codeline lineno="6959"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stbi__errpuc(</highlight><highlight class="stringliteral">&quot;outofmem&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Out<sp/>of<sp/>memory&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="6960"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6961"><highlight class="normal"></highlight></codeline>
<codeline lineno="6962"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*stbi__load_gif_main(stbi__context<sp/>*s,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>**delays,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*x,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*y,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*z,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*comp,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>req_comp)</highlight></codeline>
<codeline lineno="6963"><highlight class="normal">{</highlight></codeline>
<codeline lineno="6964"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(stbi__gif_test(s))<sp/>{</highlight></codeline>
<codeline lineno="6965"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>layers<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="6966"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d" kindref="member">stbi_uc</ref><sp/>*u<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="6967"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d" kindref="member">stbi_uc</ref><sp/>*out<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="6968"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d" kindref="member">stbi_uc</ref><sp/>*two_back<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="6969"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stbi__gif<sp/>g;</highlight></codeline>
<codeline lineno="6970"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>stride;</highlight></codeline>
<codeline lineno="6971"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>out_size<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="6972"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>delays_size<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="6973"><highlight class="normal"></highlight></codeline>
<codeline lineno="6974"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>STBI_NOTUSED(out_size);</highlight></codeline>
<codeline lineno="6975"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>STBI_NOTUSED(delays_size);</highlight></codeline>
<codeline lineno="6976"><highlight class="normal"></highlight></codeline>
<codeline lineno="6977"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>memset(&amp;g,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(g));</highlight></codeline>
<codeline lineno="6978"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(delays)<sp/>{</highlight></codeline>
<codeline lineno="6979"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*delays<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="6980"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6981"><highlight class="normal"></highlight></codeline>
<codeline lineno="6982"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="6983"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>u<sp/>=<sp/>stbi__gif_load_next(s,<sp/>&amp;g,<sp/>comp,<sp/>req_comp,<sp/>two_back);</highlight></codeline>
<codeline lineno="6984"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(u<sp/>==<sp/>(<ref refid="stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d" kindref="member">stbi_uc</ref><sp/>*)<sp/>s)<sp/>u<sp/>=<sp/>0;<sp/><sp/></highlight><highlight class="comment">//<sp/>end<sp/>of<sp/>animated<sp/>gif<sp/>marker</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6985"><highlight class="normal"></highlight></codeline>
<codeline lineno="6986"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(u)<sp/>{</highlight></codeline>
<codeline lineno="6987"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*x<sp/>=<sp/>g.w;</highlight></codeline>
<codeline lineno="6988"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*y<sp/>=<sp/>g.h;</highlight></codeline>
<codeline lineno="6989"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++layers;</highlight></codeline>
<codeline lineno="6990"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stride<sp/>=<sp/>g.w<sp/>*<sp/>g.h<sp/>*<sp/>4;</highlight></codeline>
<codeline lineno="6991"><highlight class="normal"></highlight></codeline>
<codeline lineno="6992"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(out)<sp/>{</highlight></codeline>
<codeline lineno="6993"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*tmp<sp/>=<sp/>(<ref refid="stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d" kindref="member">stbi_uc</ref>*)<sp/>STBI_REALLOC_SIZED(<sp/>out,<sp/>out_size,<sp/>layers<sp/>*<sp/>stride<sp/>);</highlight></codeline>
<codeline lineno="6994"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!tmp)</highlight></codeline>
<codeline lineno="6995"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stbi__load_gif_main_outofmem(&amp;g,<sp/>out,<sp/>delays);</highlight></codeline>
<codeline lineno="6996"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="6997"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out<sp/>=<sp/>(<ref refid="stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d" kindref="member">stbi_uc</ref>*)<sp/>tmp;</highlight></codeline>
<codeline lineno="6998"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out_size<sp/>=<sp/>layers<sp/>*<sp/>stride;</highlight></codeline>
<codeline lineno="6999"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7000"><highlight class="normal"></highlight></codeline>
<codeline lineno="7001"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(delays)<sp/>{</highlight></codeline>
<codeline lineno="7002"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*new_delays<sp/>=<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*)<sp/>STBI_REALLOC_SIZED(<sp/>*delays,<sp/>delays_size,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<sp/>*<sp/>layers<sp/>);</highlight></codeline>
<codeline lineno="7003"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!new_delays)</highlight></codeline>
<codeline lineno="7004"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stbi__load_gif_main_outofmem(&amp;g,<sp/>out,<sp/>delays);</highlight></codeline>
<codeline lineno="7005"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*delays<sp/>=<sp/>new_delays;</highlight></codeline>
<codeline lineno="7006"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>delays_size<sp/>=<sp/>layers<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(int);</highlight></codeline>
<codeline lineno="7007"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7008"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="7009"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out<sp/>=<sp/>(<ref refid="stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d" kindref="member">stbi_uc</ref>*)stbi__malloc(<sp/>layers<sp/>*<sp/>stride<sp/>);</highlight></codeline>
<codeline lineno="7010"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!out)</highlight></codeline>
<codeline lineno="7011"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stbi__load_gif_main_outofmem(&amp;g,<sp/>out,<sp/>delays);</highlight></codeline>
<codeline lineno="7012"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out_size<sp/>=<sp/>layers<sp/>*<sp/>stride;</highlight></codeline>
<codeline lineno="7013"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(delays)<sp/>{</highlight></codeline>
<codeline lineno="7014"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*delays<sp/>=<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*)<sp/>stbi__malloc(<sp/>layers<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<sp/>);</highlight></codeline>
<codeline lineno="7015"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!*delays)</highlight></codeline>
<codeline lineno="7016"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stbi__load_gif_main_outofmem(&amp;g,<sp/>out,<sp/>delays);</highlight></codeline>
<codeline lineno="7017"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>delays_size<sp/>=<sp/>layers<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(int);</highlight></codeline>
<codeline lineno="7018"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7019"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7020"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(<sp/>out<sp/>+<sp/>((layers<sp/>-<sp/>1)<sp/>*<sp/>stride),<sp/>u,<sp/>stride<sp/>);</highlight></codeline>
<codeline lineno="7021"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(layers<sp/>&gt;=<sp/>2)<sp/>{</highlight></codeline>
<codeline lineno="7022"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>two_back<sp/>=<sp/>out<sp/>-<sp/>2<sp/>*<sp/>stride;</highlight></codeline>
<codeline lineno="7023"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7024"><highlight class="normal"></highlight></codeline>
<codeline lineno="7025"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(delays)<sp/>{</highlight></codeline>
<codeline lineno="7026"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*delays)[layers<sp/>-<sp/>1U]<sp/>=<sp/>g.delay;</highlight></codeline>
<codeline lineno="7027"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7028"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7029"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(u<sp/>!=<sp/>0);</highlight></codeline>
<codeline lineno="7030"><highlight class="normal"></highlight></codeline>
<codeline lineno="7031"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>free<sp/>temp<sp/>buffer;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7032"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>STBI_FREE(g.out);</highlight></codeline>
<codeline lineno="7033"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>STBI_FREE(g.history);</highlight></codeline>
<codeline lineno="7034"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>STBI_FREE(g.background);</highlight></codeline>
<codeline lineno="7035"><highlight class="normal"></highlight></codeline>
<codeline lineno="7036"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>do<sp/>the<sp/>final<sp/>conversion<sp/>after<sp/>loading<sp/>everything;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7037"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(req_comp<sp/>&amp;&amp;<sp/>req_comp<sp/>!=<sp/>4)</highlight></codeline>
<codeline lineno="7038"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out<sp/>=<sp/>stbi__convert_format(out,<sp/>4,<sp/>req_comp,<sp/>layers<sp/>*<sp/>g.w,<sp/>g.h);</highlight></codeline>
<codeline lineno="7039"><highlight class="normal"></highlight></codeline>
<codeline lineno="7040"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*z<sp/>=<sp/>layers;</highlight></codeline>
<codeline lineno="7041"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>out;</highlight></codeline>
<codeline lineno="7042"><highlight class="normal"><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="7043"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stbi__errpuc(</highlight><highlight class="stringliteral">&quot;not<sp/>GIF&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Image<sp/>was<sp/>not<sp/>as<sp/>a<sp/>gif<sp/>type.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="7044"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7045"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7046"><highlight class="normal"></highlight></codeline>
<codeline lineno="7047"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*stbi__gif_load(stbi__context<sp/>*s,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*x,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*y,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*comp,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>req_comp,<sp/>stbi__result_info<sp/>*ri)</highlight></codeline>
<codeline lineno="7048"><highlight class="normal">{</highlight></codeline>
<codeline lineno="7049"><highlight class="normal"><sp/><sp/><sp/><ref refid="stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d" kindref="member">stbi_uc</ref><sp/>*u<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="7050"><highlight class="normal"><sp/><sp/><sp/>stbi__gif<sp/>g;</highlight></codeline>
<codeline lineno="7051"><highlight class="normal"><sp/><sp/><sp/>memset(&amp;g,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(g));</highlight></codeline>
<codeline lineno="7052"><highlight class="normal"><sp/><sp/><sp/>STBI_NOTUSED(ri);</highlight></codeline>
<codeline lineno="7053"><highlight class="normal"></highlight></codeline>
<codeline lineno="7054"><highlight class="normal"><sp/><sp/><sp/>u<sp/>=<sp/>stbi__gif_load_next(s,<sp/>&amp;g,<sp/>comp,<sp/>req_comp,<sp/>0);</highlight></codeline>
<codeline lineno="7055"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(u<sp/>==<sp/>(<ref refid="stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d" kindref="member">stbi_uc</ref><sp/>*)<sp/>s)<sp/>u<sp/>=<sp/>0;<sp/><sp/></highlight><highlight class="comment">//<sp/>end<sp/>of<sp/>animated<sp/>gif<sp/>marker</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7056"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(u)<sp/>{</highlight></codeline>
<codeline lineno="7057"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*x<sp/>=<sp/>g.w;</highlight></codeline>
<codeline lineno="7058"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*y<sp/>=<sp/>g.h;</highlight></codeline>
<codeline lineno="7059"><highlight class="normal"></highlight></codeline>
<codeline lineno="7060"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>moved<sp/>conversion<sp/>to<sp/>after<sp/>successful<sp/>load<sp/>so<sp/>that<sp/>the<sp/>same</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7061"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>can<sp/>be<sp/>done<sp/>for<sp/>multiple<sp/>frames.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7062"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(req_comp<sp/>&amp;&amp;<sp/>req_comp<sp/>!=<sp/>4)</highlight></codeline>
<codeline lineno="7063"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>u<sp/>=<sp/>stbi__convert_format(u,<sp/>4,<sp/>req_comp,<sp/>g.w,<sp/>g.h);</highlight></codeline>
<codeline lineno="7064"><highlight class="normal"><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(g.out)<sp/>{</highlight></codeline>
<codeline lineno="7065"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>there<sp/>was<sp/>an<sp/>error<sp/>and<sp/>we<sp/>allocated<sp/>an<sp/>image<sp/>buffer,<sp/>free<sp/>it!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7066"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>STBI_FREE(g.out);</highlight></codeline>
<codeline lineno="7067"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7068"><highlight class="normal"></highlight></codeline>
<codeline lineno="7069"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>free<sp/>buffers<sp/>needed<sp/>for<sp/>multiple<sp/>frame<sp/>loading;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7070"><highlight class="normal"><sp/><sp/><sp/>STBI_FREE(g.history);</highlight></codeline>
<codeline lineno="7071"><highlight class="normal"><sp/><sp/><sp/>STBI_FREE(g.background);</highlight></codeline>
<codeline lineno="7072"><highlight class="normal"></highlight></codeline>
<codeline lineno="7073"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>u;</highlight></codeline>
<codeline lineno="7074"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7075"><highlight class="normal"></highlight></codeline>
<codeline lineno="7076"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>stbi__gif_info(stbi__context<sp/>*s,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*x,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*y,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*comp)</highlight></codeline>
<codeline lineno="7077"><highlight class="normal">{</highlight></codeline>
<codeline lineno="7078"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stbi__gif_info_raw(s,x,y,comp);</highlight></codeline>
<codeline lineno="7079"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7080"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7081"><highlight class="normal"></highlight></codeline>
<codeline lineno="7082"><highlight class="normal"></highlight><highlight class="comment">//<sp/>*************************************************************************************************</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7083"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Radiance<sp/>RGBE<sp/>HDR<sp/>loader</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7084"><highlight class="normal"></highlight><highlight class="comment">//<sp/>originally<sp/>by<sp/>Nicolas<sp/>Schulz</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7085"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>STBI_NO_HDR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7086"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>stbi__hdr_test_core(stbi__context<sp/>*s,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*signature)</highlight></codeline>
<codeline lineno="7087"><highlight class="normal">{</highlight></codeline>
<codeline lineno="7088"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="7089"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>signature[i];<sp/>++i)</highlight></codeline>
<codeline lineno="7090"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(stbi__get8(s)<sp/>!=<sp/>signature[i])</highlight></codeline>
<codeline lineno="7091"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="7092"><highlight class="normal"><sp/><sp/><sp/>stbi__rewind(s);</highlight></codeline>
<codeline lineno="7093"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="7094"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7095"><highlight class="normal"></highlight></codeline>
<codeline lineno="7096"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>stbi__hdr_test(stbi__context*<sp/>s)</highlight></codeline>
<codeline lineno="7097"><highlight class="normal">{</highlight></codeline>
<codeline lineno="7098"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>r<sp/>=<sp/>stbi__hdr_test_core(s,<sp/></highlight><highlight class="stringliteral">&quot;#?RADIANCE\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="7099"><highlight class="normal"><sp/><sp/><sp/>stbi__rewind(s);</highlight></codeline>
<codeline lineno="7100"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!r)<sp/>{</highlight></codeline>
<codeline lineno="7101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r<sp/>=<sp/>stbi__hdr_test_core(s,<sp/></highlight><highlight class="stringliteral">&quot;#?RGBE\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="7102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stbi__rewind(s);</highlight></codeline>
<codeline lineno="7103"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7104"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>r;</highlight></codeline>
<codeline lineno="7105"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7106"><highlight class="normal"></highlight></codeline>
<codeline lineno="7107"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>STBI__HDR_BUFLEN<sp/><sp/>1024</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7108"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*stbi__hdr_gettoken(stbi__context<sp/>*z,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*buffer)</highlight></codeline>
<codeline lineno="7109"><highlight class="normal">{</highlight></codeline>
<codeline lineno="7110"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>len=0;</highlight></codeline>
<codeline lineno="7111"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>c<sp/>=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="7112"><highlight class="normal"></highlight></codeline>
<codeline lineno="7113"><highlight class="normal"><sp/><sp/><sp/>c<sp/>=<sp/>(char)<sp/>stbi__get8(z);</highlight></codeline>
<codeline lineno="7114"><highlight class="normal"></highlight></codeline>
<codeline lineno="7115"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(!stbi__at_eof(z)<sp/>&amp;&amp;<sp/>c<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="7116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>buffer[len++]<sp/>=<sp/>c;</highlight></codeline>
<codeline lineno="7117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(len<sp/>==<sp/>STBI__HDR_BUFLEN-1)<sp/>{</highlight></codeline>
<codeline lineno="7118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>flush<sp/>to<sp/>end<sp/>of<sp/>line</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(!stbi__at_eof(z)<sp/>&amp;&amp;<sp/>stbi__get8(z)<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="7120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>;</highlight></codeline>
<codeline lineno="7121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="7122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>c<sp/>=<sp/>(char)<sp/>stbi__get8(z);</highlight></codeline>
<codeline lineno="7124"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7125"><highlight class="normal"></highlight></codeline>
<codeline lineno="7126"><highlight class="normal"><sp/><sp/><sp/>buffer[len]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="7127"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>buffer;</highlight></codeline>
<codeline lineno="7128"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7129"><highlight class="normal"></highlight></codeline>
<codeline lineno="7130"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>stbi__hdr_convert(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*output,<sp/><ref refid="stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d" kindref="member">stbi_uc</ref><sp/>*input,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>req_comp)</highlight></codeline>
<codeline lineno="7131"><highlight class="normal">{</highlight></codeline>
<codeline lineno="7132"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>input[3]<sp/>!=<sp/>0<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="7133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>f1;</highlight></codeline>
<codeline lineno="7134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Exponent</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>f1<sp/>=<sp/>(float)<sp/>ldexp(1.0f,<sp/>input[3]<sp/>-<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)(128<sp/>+<sp/>8));</highlight></codeline>
<codeline lineno="7136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(req_comp<sp/>&lt;=<sp/>2)</highlight></codeline>
<codeline lineno="7137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output[0]<sp/>=<sp/>(input[0]<sp/>+<sp/>input[1]<sp/>+<sp/>input[2])<sp/>*<sp/>f1<sp/>/<sp/>3;</highlight></codeline>
<codeline lineno="7138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="7139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output[0]<sp/>=<sp/>input[0]<sp/>*<sp/>f1;</highlight></codeline>
<codeline lineno="7140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output[1]<sp/>=<sp/>input[1]<sp/>*<sp/>f1;</highlight></codeline>
<codeline lineno="7141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output[2]<sp/>=<sp/>input[2]<sp/>*<sp/>f1;</highlight></codeline>
<codeline lineno="7142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(req_comp<sp/>==<sp/>2)<sp/>output[1]<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="7144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(req_comp<sp/>==<sp/>4)<sp/>output[3]<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="7145"><highlight class="normal"><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="7146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(req_comp)<sp/>{</highlight></codeline>
<codeline lineno="7147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>4:<sp/>output[3]<sp/>=<sp/>1;<sp/></highlight><highlight class="comment">/*<sp/>fallthrough<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>3:<sp/>output[0]<sp/>=<sp/>output[1]<sp/>=<sp/>output[2]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="7149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="7150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>2:<sp/>output[1]<sp/>=<sp/>1;<sp/></highlight><highlight class="comment">/*<sp/>fallthrough<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>1:<sp/>output[0]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="7152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="7153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7154"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7155"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7156"><highlight class="normal"></highlight></codeline>
<codeline lineno="7157"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*stbi__hdr_load(stbi__context<sp/>*s,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*x,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*y,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*comp,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>req_comp,<sp/>stbi__result_info<sp/>*ri)</highlight></codeline>
<codeline lineno="7158"><highlight class="normal">{</highlight></codeline>
<codeline lineno="7159"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>buffer[STBI__HDR_BUFLEN];</highlight></codeline>
<codeline lineno="7160"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*token;</highlight></codeline>
<codeline lineno="7161"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>valid<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="7162"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>width,<sp/>height;</highlight></codeline>
<codeline lineno="7163"><highlight class="normal"><sp/><sp/><sp/><ref refid="stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d" kindref="member">stbi_uc</ref><sp/>*scanline;</highlight></codeline>
<codeline lineno="7164"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*hdr_data;</highlight></codeline>
<codeline lineno="7165"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>len;</highlight></codeline>
<codeline lineno="7166"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>count,<sp/>value;</highlight></codeline>
<codeline lineno="7167"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,<sp/>j,<sp/>k,<sp/>c1,c2,<sp/>z;</highlight></codeline>
<codeline lineno="7168"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*headerToken;</highlight></codeline>
<codeline lineno="7169"><highlight class="normal"><sp/><sp/><sp/>STBI_NOTUSED(ri);</highlight></codeline>
<codeline lineno="7170"><highlight class="normal"></highlight></codeline>
<codeline lineno="7171"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>identifier</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7172"><highlight class="normal"><sp/><sp/><sp/>headerToken<sp/>=<sp/>stbi__hdr_gettoken(s,buffer);</highlight></codeline>
<codeline lineno="7173"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strcmp(headerToken,<sp/></highlight><highlight class="stringliteral">&quot;#?RADIANCE&quot;</highlight><highlight class="normal">)<sp/>!=<sp/>0<sp/>&amp;&amp;<sp/>strcmp(headerToken,<sp/></highlight><highlight class="stringliteral">&quot;#?RGBE&quot;</highlight><highlight class="normal">)<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="7174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stbi__errpf(</highlight><highlight class="stringliteral">&quot;not<sp/>HDR&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Corrupt<sp/>HDR<sp/>image&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="7175"><highlight class="normal"></highlight></codeline>
<codeline lineno="7176"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Parse<sp/>header</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7177"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(;;)<sp/>{</highlight></codeline>
<codeline lineno="7178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>token<sp/>=<sp/>stbi__hdr_gettoken(s,buffer);</highlight></codeline>
<codeline lineno="7179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(token[0]<sp/>==<sp/>0)<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="7180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strcmp(token,<sp/></highlight><highlight class="stringliteral">&quot;FORMAT=32-bit_rle_rgbe&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)<sp/>valid<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="7181"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7182"><highlight class="normal"></highlight></codeline>
<codeline lineno="7183"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!valid)<sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stbi__errpf(</highlight><highlight class="stringliteral">&quot;unsupported<sp/>format&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Unsupported<sp/>HDR<sp/>format&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="7184"><highlight class="normal"></highlight></codeline>
<codeline lineno="7185"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Parse<sp/>width<sp/>and<sp/>height</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7186"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>can&apos;t<sp/>use<sp/>sscanf()<sp/>if<sp/>we&apos;re<sp/>not<sp/>using<sp/>stdio!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7187"><highlight class="normal"><sp/><sp/><sp/>token<sp/>=<sp/>stbi__hdr_gettoken(s,buffer);</highlight></codeline>
<codeline lineno="7188"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strncmp(token,<sp/></highlight><highlight class="stringliteral">&quot;-Y<sp/>&quot;</highlight><highlight class="normal">,<sp/>3))<sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stbi__errpf(</highlight><highlight class="stringliteral">&quot;unsupported<sp/>data<sp/>layout&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Unsupported<sp/>HDR<sp/>format&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="7189"><highlight class="normal"><sp/><sp/><sp/>token<sp/>+=<sp/>3;</highlight></codeline>
<codeline lineno="7190"><highlight class="normal"><sp/><sp/><sp/>height<sp/>=<sp/>(int)<sp/>strtol(token,<sp/>&amp;token,<sp/>10);</highlight></codeline>
<codeline lineno="7191"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(*token<sp/>==<sp/></highlight><highlight class="charliteral">&apos;<sp/>&apos;</highlight><highlight class="normal">)<sp/>++token;</highlight></codeline>
<codeline lineno="7192"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strncmp(token,<sp/></highlight><highlight class="stringliteral">&quot;+X<sp/>&quot;</highlight><highlight class="normal">,<sp/>3))<sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stbi__errpf(</highlight><highlight class="stringliteral">&quot;unsupported<sp/>data<sp/>layout&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Unsupported<sp/>HDR<sp/>format&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="7193"><highlight class="normal"><sp/><sp/><sp/>token<sp/>+=<sp/>3;</highlight></codeline>
<codeline lineno="7194"><highlight class="normal"><sp/><sp/><sp/>width<sp/>=<sp/>(int)<sp/>strtol(token,<sp/>NULL,<sp/>10);</highlight></codeline>
<codeline lineno="7195"><highlight class="normal"></highlight></codeline>
<codeline lineno="7196"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(height<sp/>&gt;<sp/>STBI_MAX_DIMENSIONS)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stbi__errpf(</highlight><highlight class="stringliteral">&quot;too<sp/>large&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;Very<sp/>large<sp/>image<sp/>(corrupt?)&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="7197"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(width<sp/>&gt;<sp/>STBI_MAX_DIMENSIONS)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stbi__errpf(</highlight><highlight class="stringliteral">&quot;too<sp/>large&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;Very<sp/>large<sp/>image<sp/>(corrupt?)&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="7198"><highlight class="normal"></highlight></codeline>
<codeline lineno="7199"><highlight class="normal"><sp/><sp/><sp/>*x<sp/>=<sp/>width;</highlight></codeline>
<codeline lineno="7200"><highlight class="normal"><sp/><sp/><sp/>*y<sp/>=<sp/>height;</highlight></codeline>
<codeline lineno="7201"><highlight class="normal"></highlight></codeline>
<codeline lineno="7202"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(comp)<sp/>*comp<sp/>=<sp/>3;</highlight></codeline>
<codeline lineno="7203"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(req_comp<sp/>==<sp/>0)<sp/>req_comp<sp/>=<sp/>3;</highlight></codeline>
<codeline lineno="7204"><highlight class="normal"></highlight></codeline>
<codeline lineno="7205"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!stbi__mad4sizes_valid(width,<sp/>height,<sp/>req_comp,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">),<sp/>0))</highlight></codeline>
<codeline lineno="7206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stbi__errpf(</highlight><highlight class="stringliteral">&quot;too<sp/>large&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;HDR<sp/>image<sp/>is<sp/>too<sp/>large&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="7207"><highlight class="normal"></highlight></codeline>
<codeline lineno="7208"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Read<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7209"><highlight class="normal"><sp/><sp/><sp/>hdr_data<sp/>=<sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*)<sp/>stbi__malloc_mad4(width,<sp/>height,<sp/>req_comp,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">),<sp/>0);</highlight></codeline>
<codeline lineno="7210"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!hdr_data)</highlight></codeline>
<codeline lineno="7211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stbi__errpf(</highlight><highlight class="stringliteral">&quot;outofmem&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Out<sp/>of<sp/>memory&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="7212"><highlight class="normal"></highlight></codeline>
<codeline lineno="7213"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Load<sp/>image<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7214"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>image<sp/>data<sp/>is<sp/>stored<sp/>as<sp/>some<sp/>number<sp/>of<sp/>sca</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7215"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>width<sp/>&lt;<sp/>8<sp/>||<sp/>width<sp/>&gt;=<sp/>32768)<sp/>{</highlight></codeline>
<codeline lineno="7216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Read<sp/>flat<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(j=0;<sp/>j<sp/>&lt;<sp/>height;<sp/>++j)<sp/>{</highlight></codeline>
<codeline lineno="7218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i<sp/>&lt;<sp/>width;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="7219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d" kindref="member">stbi_uc</ref><sp/>rgbe[4];</highlight></codeline>
<codeline lineno="7220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>main_decode_loop:</highlight></codeline>
<codeline lineno="7221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stbi__getn(s,<sp/>rgbe,<sp/>4);</highlight></codeline>
<codeline lineno="7222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stbi__hdr_convert(hdr_data<sp/>+<sp/>j<sp/>*<sp/>width<sp/>*<sp/>req_comp<sp/>+<sp/>i<sp/>*<sp/>req_comp,<sp/>rgbe,<sp/>req_comp);</highlight></codeline>
<codeline lineno="7223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7225"><highlight class="normal"><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="7226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Read<sp/>RLE-encoded<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>scanline<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="7228"><highlight class="normal"></highlight></codeline>
<codeline lineno="7229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>height;<sp/>++j)<sp/>{</highlight></codeline>
<codeline lineno="7230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c1<sp/>=<sp/>stbi__get8(s);</highlight></codeline>
<codeline lineno="7231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c2<sp/>=<sp/>stbi__get8(s);</highlight></codeline>
<codeline lineno="7232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len<sp/>=<sp/>stbi__get8(s);</highlight></codeline>
<codeline lineno="7233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(c1<sp/>!=<sp/>2<sp/>||<sp/>c2<sp/>!=<sp/>2<sp/>||<sp/>(len<sp/>&amp;<sp/>0x80))<sp/>{</highlight></codeline>
<codeline lineno="7234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>not<sp/>run-length<sp/>encoded,<sp/>so<sp/>we<sp/>have<sp/>to<sp/>actually<sp/>use<sp/>THIS<sp/>data<sp/>as<sp/>a<sp/>decoded</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>pixel<sp/>(note<sp/>this<sp/>can&apos;t<sp/>be<sp/>a<sp/>valid<sp/>pixel--one<sp/>of<sp/>RGB<sp/>must<sp/>be<sp/>&gt;=<sp/>128)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d" kindref="member">stbi_uc</ref><sp/>rgbe[4];</highlight></codeline>
<codeline lineno="7237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rgbe[0]<sp/>=<sp/>(<ref refid="stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d" kindref="member">stbi_uc</ref>)<sp/>c1;</highlight></codeline>
<codeline lineno="7238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rgbe[1]<sp/>=<sp/>(<ref refid="stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d" kindref="member">stbi_uc</ref>)<sp/>c2;</highlight></codeline>
<codeline lineno="7239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rgbe[2]<sp/>=<sp/>(<ref refid="stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d" kindref="member">stbi_uc</ref>)<sp/>len;</highlight></codeline>
<codeline lineno="7240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rgbe[3]<sp/>=<sp/>(<ref refid="stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d" kindref="member">stbi_uc</ref>)<sp/>stbi__get8(s);</highlight></codeline>
<codeline lineno="7241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stbi__hdr_convert(hdr_data,<sp/>rgbe,<sp/>req_comp);</highlight></codeline>
<codeline lineno="7242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="7243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>j<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="7244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>STBI_FREE(scanline);</highlight></codeline>
<codeline lineno="7245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>main_decode_loop;<sp/></highlight><highlight class="comment">//<sp/>yes,<sp/>this<sp/>makes<sp/>no<sp/>sense</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len<sp/>&lt;&lt;=<sp/>8;</highlight></codeline>
<codeline lineno="7248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len<sp/>|=<sp/>stbi__get8(s);</highlight></codeline>
<codeline lineno="7249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(len<sp/>!=<sp/>width)<sp/>{<sp/>STBI_FREE(hdr_data);<sp/>STBI_FREE(scanline);<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stbi__errpf(</highlight><highlight class="stringliteral">&quot;invalid<sp/>decoded<sp/>scanline<sp/>length&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;corrupt<sp/>HDR&quot;</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="7250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(scanline<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="7251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scanline<sp/>=<sp/>(<ref refid="stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d" kindref="member">stbi_uc</ref><sp/>*)<sp/>stbi__malloc_mad2(width,<sp/>4,<sp/>0);</highlight></codeline>
<codeline lineno="7252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!scanline)<sp/>{</highlight></codeline>
<codeline lineno="7253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>STBI_FREE(hdr_data);</highlight></codeline>
<codeline lineno="7254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stbi__errpf(</highlight><highlight class="stringliteral">&quot;outofmem&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Out<sp/>of<sp/>memory&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="7255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7257"><highlight class="normal"></highlight></codeline>
<codeline lineno="7258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(k<sp/>=<sp/>0;<sp/>k<sp/>&lt;<sp/>4;<sp/>++k)<sp/>{</highlight></codeline>
<codeline lineno="7259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nleft;</highlight></codeline>
<codeline lineno="7260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="7261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>((nleft<sp/>=<sp/>width<sp/>-<sp/>i)<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="7262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>count<sp/>=<sp/>stbi__get8(s);</highlight></codeline>
<codeline lineno="7263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(count<sp/>&gt;<sp/>128)<sp/>{</highlight></codeline>
<codeline lineno="7264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Run</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>value<sp/>=<sp/>stbi__get8(s);</highlight></codeline>
<codeline lineno="7266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>count<sp/>-=<sp/>128;</highlight></codeline>
<codeline lineno="7267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((count<sp/>==<sp/>0)<sp/>||<sp/>(count<sp/>&gt;<sp/>nleft))<sp/>{<sp/>STBI_FREE(hdr_data);<sp/>STBI_FREE(scanline);<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stbi__errpf(</highlight><highlight class="stringliteral">&quot;corrupt&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;bad<sp/>RLE<sp/>data<sp/>in<sp/>HDR&quot;</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="7268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(z<sp/>=<sp/>0;<sp/>z<sp/>&lt;<sp/>count;<sp/>++z)</highlight></codeline>
<codeline lineno="7269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scanline[i++<sp/>*<sp/>4<sp/>+<sp/>k]<sp/>=<sp/>value;</highlight></codeline>
<codeline lineno="7270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="7271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Dump</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((count<sp/>==<sp/>0)<sp/>||<sp/>(count<sp/>&gt;<sp/>nleft))<sp/>{<sp/>STBI_FREE(hdr_data);<sp/>STBI_FREE(scanline);<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stbi__errpf(</highlight><highlight class="stringliteral">&quot;corrupt&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;bad<sp/>RLE<sp/>data<sp/>in<sp/>HDR&quot;</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="7273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(z<sp/>=<sp/>0;<sp/>z<sp/>&lt;<sp/>count;<sp/>++z)</highlight></codeline>
<codeline lineno="7274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scanline[i++<sp/>*<sp/>4<sp/>+<sp/>k]<sp/>=<sp/>stbi__get8(s);</highlight></codeline>
<codeline lineno="7275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i<sp/>&lt;<sp/>width;<sp/>++i)</highlight></codeline>
<codeline lineno="7279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stbi__hdr_convert(hdr_data+(j*width<sp/>+<sp/>i)*req_comp,<sp/>scanline<sp/>+<sp/>i*4,<sp/>req_comp);</highlight></codeline>
<codeline lineno="7280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(scanline)</highlight></codeline>
<codeline lineno="7282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>STBI_FREE(scanline);</highlight></codeline>
<codeline lineno="7283"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7284"><highlight class="normal"></highlight></codeline>
<codeline lineno="7285"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>hdr_data;</highlight></codeline>
<codeline lineno="7286"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7287"><highlight class="normal"></highlight></codeline>
<codeline lineno="7288"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>stbi__hdr_info(stbi__context<sp/>*s,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*x,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*y,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*comp)</highlight></codeline>
<codeline lineno="7289"><highlight class="normal">{</highlight></codeline>
<codeline lineno="7290"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>buffer[STBI__HDR_BUFLEN];</highlight></codeline>
<codeline lineno="7291"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*token;</highlight></codeline>
<codeline lineno="7292"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>valid<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="7293"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dummy;</highlight></codeline>
<codeline lineno="7294"><highlight class="normal"></highlight></codeline>
<codeline lineno="7295"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!x)<sp/>x<sp/>=<sp/>&amp;dummy;</highlight></codeline>
<codeline lineno="7296"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!y)<sp/>y<sp/>=<sp/>&amp;dummy;</highlight></codeline>
<codeline lineno="7297"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!comp)<sp/>comp<sp/>=<sp/>&amp;dummy;</highlight></codeline>
<codeline lineno="7298"><highlight class="normal"></highlight></codeline>
<codeline lineno="7299"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(stbi__hdr_test(s)<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="7300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stbi__rewind(<sp/>s<sp/>);</highlight></codeline>
<codeline lineno="7301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="7302"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7303"><highlight class="normal"></highlight></codeline>
<codeline lineno="7304"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(;;)<sp/>{</highlight></codeline>
<codeline lineno="7305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>token<sp/>=<sp/>stbi__hdr_gettoken(s,buffer);</highlight></codeline>
<codeline lineno="7306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(token[0]<sp/>==<sp/>0)<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="7307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strcmp(token,<sp/></highlight><highlight class="stringliteral">&quot;FORMAT=32-bit_rle_rgbe&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)<sp/>valid<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="7308"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7309"><highlight class="normal"></highlight></codeline>
<codeline lineno="7310"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!valid)<sp/>{</highlight></codeline>
<codeline lineno="7311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stbi__rewind(<sp/>s<sp/>);</highlight></codeline>
<codeline lineno="7312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="7313"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7314"><highlight class="normal"><sp/><sp/><sp/>token<sp/>=<sp/>stbi__hdr_gettoken(s,buffer);</highlight></codeline>
<codeline lineno="7315"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strncmp(token,<sp/></highlight><highlight class="stringliteral">&quot;-Y<sp/>&quot;</highlight><highlight class="normal">,<sp/>3))<sp/>{</highlight></codeline>
<codeline lineno="7316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stbi__rewind(<sp/>s<sp/>);</highlight></codeline>
<codeline lineno="7317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="7318"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7319"><highlight class="normal"><sp/><sp/><sp/>token<sp/>+=<sp/>3;</highlight></codeline>
<codeline lineno="7320"><highlight class="normal"><sp/><sp/><sp/>*y<sp/>=<sp/>(int)<sp/>strtol(token,<sp/>&amp;token,<sp/>10);</highlight></codeline>
<codeline lineno="7321"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(*token<sp/>==<sp/></highlight><highlight class="charliteral">&apos;<sp/>&apos;</highlight><highlight class="normal">)<sp/>++token;</highlight></codeline>
<codeline lineno="7322"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strncmp(token,<sp/></highlight><highlight class="stringliteral">&quot;+X<sp/>&quot;</highlight><highlight class="normal">,<sp/>3))<sp/>{</highlight></codeline>
<codeline lineno="7323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stbi__rewind(<sp/>s<sp/>);</highlight></codeline>
<codeline lineno="7324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="7325"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7326"><highlight class="normal"><sp/><sp/><sp/>token<sp/>+=<sp/>3;</highlight></codeline>
<codeline lineno="7327"><highlight class="normal"><sp/><sp/><sp/>*x<sp/>=<sp/>(int)<sp/>strtol(token,<sp/>NULL,<sp/>10);</highlight></codeline>
<codeline lineno="7328"><highlight class="normal"><sp/><sp/><sp/>*comp<sp/>=<sp/>3;</highlight></codeline>
<codeline lineno="7329"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="7330"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7331"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>STBI_NO_HDR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7332"><highlight class="normal"></highlight></codeline>
<codeline lineno="7333"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>STBI_NO_BMP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7334"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>stbi__bmp_info(stbi__context<sp/>*s,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*x,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*y,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*comp)</highlight></codeline>
<codeline lineno="7335"><highlight class="normal">{</highlight></codeline>
<codeline lineno="7336"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*p;</highlight></codeline>
<codeline lineno="7337"><highlight class="normal"><sp/><sp/><sp/>stbi__bmp_data<sp/>info;</highlight></codeline>
<codeline lineno="7338"><highlight class="normal"></highlight></codeline>
<codeline lineno="7339"><highlight class="normal"><sp/><sp/><sp/>info.all_a<sp/>=<sp/>255;</highlight></codeline>
<codeline lineno="7340"><highlight class="normal"><sp/><sp/><sp/>p<sp/>=<sp/>stbi__bmp_parse_header(s,<sp/>&amp;info);</highlight></codeline>
<codeline lineno="7341"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="7342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stbi__rewind(<sp/>s<sp/>);</highlight></codeline>
<codeline lineno="7343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="7344"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7345"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(x)<sp/>*x<sp/>=<sp/>s-&gt;img_x;</highlight></codeline>
<codeline lineno="7346"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(y)<sp/>*y<sp/>=<sp/>s-&gt;img_y;</highlight></codeline>
<codeline lineno="7347"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(comp)<sp/>{</highlight></codeline>
<codeline lineno="7348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(info.bpp<sp/>==<sp/>24<sp/>&amp;&amp;<sp/>info.ma<sp/>==<sp/>0xff000000)</highlight></codeline>
<codeline lineno="7349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*comp<sp/>=<sp/>3;</highlight></codeline>
<codeline lineno="7350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*comp<sp/>=<sp/>info.ma<sp/>?<sp/>4<sp/>:<sp/>3;</highlight></codeline>
<codeline lineno="7352"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7353"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="7354"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7355"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7356"><highlight class="normal"></highlight></codeline>
<codeline lineno="7357"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>STBI_NO_PSD</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7358"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>stbi__psd_info(stbi__context<sp/>*s,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*x,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*y,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*comp)</highlight></codeline>
<codeline lineno="7359"><highlight class="normal">{</highlight></codeline>
<codeline lineno="7360"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>channelCount,<sp/>dummy,<sp/>depth;</highlight></codeline>
<codeline lineno="7361"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!x)<sp/>x<sp/>=<sp/>&amp;dummy;</highlight></codeline>
<codeline lineno="7362"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!y)<sp/>y<sp/>=<sp/>&amp;dummy;</highlight></codeline>
<codeline lineno="7363"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!comp)<sp/>comp<sp/>=<sp/>&amp;dummy;</highlight></codeline>
<codeline lineno="7364"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(stbi__get32be(s)<sp/>!=<sp/>0x38425053)<sp/>{</highlight></codeline>
<codeline lineno="7365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stbi__rewind(<sp/>s<sp/>);</highlight></codeline>
<codeline lineno="7366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="7367"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7368"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(stbi__get16be(s)<sp/>!=<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="7369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stbi__rewind(<sp/>s<sp/>);</highlight></codeline>
<codeline lineno="7370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="7371"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7372"><highlight class="normal"><sp/><sp/><sp/>stbi__skip(s,<sp/>6);</highlight></codeline>
<codeline lineno="7373"><highlight class="normal"><sp/><sp/><sp/>channelCount<sp/>=<sp/>stbi__get16be(s);</highlight></codeline>
<codeline lineno="7374"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(channelCount<sp/>&lt;<sp/>0<sp/>||<sp/>channelCount<sp/>&gt;<sp/>16)<sp/>{</highlight></codeline>
<codeline lineno="7375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stbi__rewind(<sp/>s<sp/>);</highlight></codeline>
<codeline lineno="7376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="7377"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7378"><highlight class="normal"><sp/><sp/><sp/>*y<sp/>=<sp/>stbi__get32be(s);</highlight></codeline>
<codeline lineno="7379"><highlight class="normal"><sp/><sp/><sp/>*x<sp/>=<sp/>stbi__get32be(s);</highlight></codeline>
<codeline lineno="7380"><highlight class="normal"><sp/><sp/><sp/>depth<sp/>=<sp/>stbi__get16be(s);</highlight></codeline>
<codeline lineno="7381"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(depth<sp/>!=<sp/>8<sp/>&amp;&amp;<sp/>depth<sp/>!=<sp/>16)<sp/>{</highlight></codeline>
<codeline lineno="7382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stbi__rewind(<sp/>s<sp/>);</highlight></codeline>
<codeline lineno="7383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="7384"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7385"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(stbi__get16be(s)<sp/>!=<sp/>3)<sp/>{</highlight></codeline>
<codeline lineno="7386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stbi__rewind(<sp/>s<sp/>);</highlight></codeline>
<codeline lineno="7387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="7388"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7389"><highlight class="normal"><sp/><sp/><sp/>*comp<sp/>=<sp/>4;</highlight></codeline>
<codeline lineno="7390"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="7391"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7392"><highlight class="normal"></highlight></codeline>
<codeline lineno="7393"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>stbi__psd_is16(stbi__context<sp/>*s)</highlight></codeline>
<codeline lineno="7394"><highlight class="normal">{</highlight></codeline>
<codeline lineno="7395"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>channelCount,<sp/>depth;</highlight></codeline>
<codeline lineno="7396"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(stbi__get32be(s)<sp/>!=<sp/>0x38425053)<sp/>{</highlight></codeline>
<codeline lineno="7397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stbi__rewind(<sp/>s<sp/>);</highlight></codeline>
<codeline lineno="7398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="7399"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7400"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(stbi__get16be(s)<sp/>!=<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="7401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stbi__rewind(<sp/>s<sp/>);</highlight></codeline>
<codeline lineno="7402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="7403"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7404"><highlight class="normal"><sp/><sp/><sp/>stbi__skip(s,<sp/>6);</highlight></codeline>
<codeline lineno="7405"><highlight class="normal"><sp/><sp/><sp/>channelCount<sp/>=<sp/>stbi__get16be(s);</highlight></codeline>
<codeline lineno="7406"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(channelCount<sp/>&lt;<sp/>0<sp/>||<sp/>channelCount<sp/>&gt;<sp/>16)<sp/>{</highlight></codeline>
<codeline lineno="7407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stbi__rewind(<sp/>s<sp/>);</highlight></codeline>
<codeline lineno="7408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="7409"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7410"><highlight class="normal"><sp/><sp/><sp/>STBI_NOTUSED(stbi__get32be(s));</highlight></codeline>
<codeline lineno="7411"><highlight class="normal"><sp/><sp/><sp/>STBI_NOTUSED(stbi__get32be(s));</highlight></codeline>
<codeline lineno="7412"><highlight class="normal"><sp/><sp/><sp/>depth<sp/>=<sp/>stbi__get16be(s);</highlight></codeline>
<codeline lineno="7413"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(depth<sp/>!=<sp/>16)<sp/>{</highlight></codeline>
<codeline lineno="7414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stbi__rewind(<sp/>s<sp/>);</highlight></codeline>
<codeline lineno="7415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="7416"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7417"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="7418"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7419"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7420"><highlight class="normal"></highlight></codeline>
<codeline lineno="7421"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>STBI_NO_PIC</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7422"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>stbi__pic_info(stbi__context<sp/>*s,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*x,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*y,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*comp)</highlight></codeline>
<codeline lineno="7423"><highlight class="normal">{</highlight></codeline>
<codeline lineno="7424"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>act_comp=0,num_packets=0,chained,dummy;</highlight></codeline>
<codeline lineno="7425"><highlight class="normal"><sp/><sp/><sp/>stbi__pic_packet<sp/>packets[10];</highlight></codeline>
<codeline lineno="7426"><highlight class="normal"></highlight></codeline>
<codeline lineno="7427"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!x)<sp/>x<sp/>=<sp/>&amp;dummy;</highlight></codeline>
<codeline lineno="7428"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!y)<sp/>y<sp/>=<sp/>&amp;dummy;</highlight></codeline>
<codeline lineno="7429"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!comp)<sp/>comp<sp/>=<sp/>&amp;dummy;</highlight></codeline>
<codeline lineno="7430"><highlight class="normal"></highlight></codeline>
<codeline lineno="7431"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!stbi__pic_is4(s,</highlight><highlight class="stringliteral">&quot;\x53\x80\xF6\x34&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="7432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stbi__rewind(s);</highlight></codeline>
<codeline lineno="7433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="7434"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7435"><highlight class="normal"></highlight></codeline>
<codeline lineno="7436"><highlight class="normal"><sp/><sp/><sp/>stbi__skip(s,<sp/>88);</highlight></codeline>
<codeline lineno="7437"><highlight class="normal"></highlight></codeline>
<codeline lineno="7438"><highlight class="normal"><sp/><sp/><sp/>*x<sp/>=<sp/>stbi__get16be(s);</highlight></codeline>
<codeline lineno="7439"><highlight class="normal"><sp/><sp/><sp/>*y<sp/>=<sp/>stbi__get16be(s);</highlight></codeline>
<codeline lineno="7440"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(stbi__at_eof(s))<sp/>{</highlight></codeline>
<codeline lineno="7441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stbi__rewind(<sp/>s);</highlight></codeline>
<codeline lineno="7442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="7443"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7444"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>(*x)<sp/>!=<sp/>0<sp/>&amp;&amp;<sp/>(1<sp/>&lt;&lt;<sp/>28)<sp/>/<sp/>(*x)<sp/>&lt;<sp/>(*y))<sp/>{</highlight></codeline>
<codeline lineno="7445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stbi__rewind(<sp/>s<sp/>);</highlight></codeline>
<codeline lineno="7446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="7447"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7448"><highlight class="normal"></highlight></codeline>
<codeline lineno="7449"><highlight class="normal"><sp/><sp/><sp/>stbi__skip(s,<sp/>8);</highlight></codeline>
<codeline lineno="7450"><highlight class="normal"></highlight></codeline>
<codeline lineno="7451"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="7452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stbi__pic_packet<sp/>*packet;</highlight></codeline>
<codeline lineno="7453"><highlight class="normal"></highlight></codeline>
<codeline lineno="7454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(num_packets==</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(packets)/</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(packets[0]))</highlight></codeline>
<codeline lineno="7455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="7456"><highlight class="normal"></highlight></codeline>
<codeline lineno="7457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>packet<sp/>=<sp/>&amp;packets[num_packets++];</highlight></codeline>
<codeline lineno="7458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>chained<sp/>=<sp/>stbi__get8(s);</highlight></codeline>
<codeline lineno="7459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>packet-&gt;size<sp/><sp/><sp/><sp/>=<sp/>stbi__get8(s);</highlight></codeline>
<codeline lineno="7460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>packet-&gt;type<sp/><sp/><sp/><sp/>=<sp/>stbi__get8(s);</highlight></codeline>
<codeline lineno="7461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>packet-&gt;channel<sp/>=<sp/>stbi__get8(s);</highlight></codeline>
<codeline lineno="7462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>act_comp<sp/>|=<sp/>packet-&gt;channel;</highlight></codeline>
<codeline lineno="7463"><highlight class="normal"></highlight></codeline>
<codeline lineno="7464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(stbi__at_eof(s))<sp/>{</highlight></codeline>
<codeline lineno="7465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stbi__rewind(<sp/>s<sp/>);</highlight></codeline>
<codeline lineno="7466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="7467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(packet-&gt;size<sp/>!=<sp/>8)<sp/>{</highlight></codeline>
<codeline lineno="7469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stbi__rewind(<sp/>s<sp/>);</highlight></codeline>
<codeline lineno="7470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="7471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7472"><highlight class="normal"><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(chained);</highlight></codeline>
<codeline lineno="7473"><highlight class="normal"></highlight></codeline>
<codeline lineno="7474"><highlight class="normal"><sp/><sp/><sp/>*comp<sp/>=<sp/>(act_comp<sp/>&amp;<sp/>0x10<sp/>?<sp/>4<sp/>:<sp/>3);</highlight></codeline>
<codeline lineno="7475"><highlight class="normal"></highlight></codeline>
<codeline lineno="7476"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="7477"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7478"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7479"><highlight class="normal"></highlight></codeline>
<codeline lineno="7480"><highlight class="normal"></highlight><highlight class="comment">//<sp/>*************************************************************************************************</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7481"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Portable<sp/>Gray<sp/>Map<sp/>and<sp/>Portable<sp/>Pixel<sp/>Map<sp/>loader</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7482"><highlight class="normal"></highlight><highlight class="comment">//<sp/>by<sp/>Ken<sp/>Miller</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7483"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7484"><highlight class="normal"></highlight><highlight class="comment">//<sp/>PGM:<sp/>http://netpbm.sourceforge.net/doc/pgm.html</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7485"><highlight class="normal"></highlight><highlight class="comment">//<sp/>PPM:<sp/>http://netpbm.sourceforge.net/doc/ppm.html</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7486"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7487"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Known<sp/>limitations:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7488"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>Does<sp/>not<sp/>support<sp/>comments<sp/>in<sp/>the<sp/>header<sp/>section</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7489"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>Does<sp/>not<sp/>support<sp/>ASCII<sp/>image<sp/>data<sp/>(formats<sp/>P2<sp/>and<sp/>P3)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7490"><highlight class="normal"></highlight></codeline>
<codeline lineno="7491"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>STBI_NO_PNM</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7492"><highlight class="normal"></highlight></codeline>
<codeline lineno="7493"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stbi__pnm_test(stbi__context<sp/>*s)</highlight></codeline>
<codeline lineno="7494"><highlight class="normal">{</highlight></codeline>
<codeline lineno="7495"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>p,<sp/>t;</highlight></codeline>
<codeline lineno="7496"><highlight class="normal"><sp/><sp/><sp/>p<sp/>=<sp/>(char)<sp/>stbi__get8(s);</highlight></codeline>
<codeline lineno="7497"><highlight class="normal"><sp/><sp/><sp/>t<sp/>=<sp/>(char)<sp/>stbi__get8(s);</highlight></codeline>
<codeline lineno="7498"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;P&apos;</highlight><highlight class="normal"><sp/>||<sp/>(t<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;5&apos;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>t<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;6&apos;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="7499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stbi__rewind(<sp/>s<sp/>);</highlight></codeline>
<codeline lineno="7500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="7501"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7502"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="7503"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7504"><highlight class="normal"></highlight></codeline>
<codeline lineno="7505"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*stbi__pnm_load(stbi__context<sp/>*s,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*x,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*y,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*comp,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>req_comp,<sp/>stbi__result_info<sp/>*ri)</highlight></codeline>
<codeline lineno="7506"><highlight class="normal">{</highlight></codeline>
<codeline lineno="7507"><highlight class="normal"><sp/><sp/><sp/><ref refid="stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d" kindref="member">stbi_uc</ref><sp/>*out;</highlight></codeline>
<codeline lineno="7508"><highlight class="normal"><sp/><sp/><sp/>STBI_NOTUSED(ri);</highlight></codeline>
<codeline lineno="7509"><highlight class="normal"></highlight></codeline>
<codeline lineno="7510"><highlight class="normal"><sp/><sp/><sp/>ri-&gt;bits_per_channel<sp/>=<sp/>stbi__pnm_info(s,<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*)&amp;s-&gt;img_x,<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*)&amp;s-&gt;img_y,<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*)&amp;s-&gt;img_n);</highlight></codeline>
<codeline lineno="7511"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ri-&gt;bits_per_channel<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="7512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="7513"><highlight class="normal"></highlight></codeline>
<codeline lineno="7514"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(s-&gt;img_y<sp/>&gt;<sp/>STBI_MAX_DIMENSIONS)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stbi__errpuc(</highlight><highlight class="stringliteral">&quot;too<sp/>large&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;Very<sp/>large<sp/>image<sp/>(corrupt?)&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="7515"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(s-&gt;img_x<sp/>&gt;<sp/>STBI_MAX_DIMENSIONS)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stbi__errpuc(</highlight><highlight class="stringliteral">&quot;too<sp/>large&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;Very<sp/>large<sp/>image<sp/>(corrupt?)&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="7516"><highlight class="normal"></highlight></codeline>
<codeline lineno="7517"><highlight class="normal"><sp/><sp/><sp/>*x<sp/>=<sp/>s-&gt;img_x;</highlight></codeline>
<codeline lineno="7518"><highlight class="normal"><sp/><sp/><sp/>*y<sp/>=<sp/>s-&gt;img_y;</highlight></codeline>
<codeline lineno="7519"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(comp)<sp/>*comp<sp/>=<sp/>s-&gt;img_n;</highlight></codeline>
<codeline lineno="7520"><highlight class="normal"></highlight></codeline>
<codeline lineno="7521"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!stbi__mad4sizes_valid(s-&gt;img_n,<sp/>s-&gt;img_x,<sp/>s-&gt;img_y,<sp/>ri-&gt;bits_per_channel<sp/>/<sp/>8,<sp/>0))</highlight></codeline>
<codeline lineno="7522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stbi__errpuc(</highlight><highlight class="stringliteral">&quot;too<sp/>large&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;PNM<sp/>too<sp/>large&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="7523"><highlight class="normal"></highlight></codeline>
<codeline lineno="7524"><highlight class="normal"><sp/><sp/><sp/>out<sp/>=<sp/>(<ref refid="stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d" kindref="member">stbi_uc</ref><sp/>*)<sp/>stbi__malloc_mad4(s-&gt;img_n,<sp/>s-&gt;img_x,<sp/>s-&gt;img_y,<sp/>ri-&gt;bits_per_channel<sp/>/<sp/>8,<sp/>0);</highlight></codeline>
<codeline lineno="7525"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!out)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stbi__errpuc(</highlight><highlight class="stringliteral">&quot;outofmem&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Out<sp/>of<sp/>memory&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="7526"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!stbi__getn(s,<sp/>out,<sp/>s-&gt;img_n<sp/>*<sp/>s-&gt;img_x<sp/>*<sp/>s-&gt;img_y<sp/>*<sp/>(ri-&gt;bits_per_channel<sp/>/<sp/>8)))<sp/>{</highlight></codeline>
<codeline lineno="7527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>STBI_FREE(out);</highlight></codeline>
<codeline lineno="7528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stbi__errpuc(</highlight><highlight class="stringliteral">&quot;bad<sp/>PNM&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;PNM<sp/>file<sp/>truncated&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="7529"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7530"><highlight class="normal"></highlight></codeline>
<codeline lineno="7531"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(req_comp<sp/>&amp;&amp;<sp/>req_comp<sp/>!=<sp/>s-&gt;img_n)<sp/>{</highlight></codeline>
<codeline lineno="7532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ri-&gt;bits_per_channel<sp/>==<sp/>16)<sp/>{</highlight></codeline>
<codeline lineno="7533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out<sp/>=<sp/>(<ref refid="stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d" kindref="member">stbi_uc</ref><sp/>*)<sp/>stbi__convert_format16((stbi__uint16<sp/>*)<sp/>out,<sp/>s-&gt;img_n,<sp/>req_comp,<sp/>s-&gt;img_x,<sp/>s-&gt;img_y);</highlight></codeline>
<codeline lineno="7534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="7535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out<sp/>=<sp/>stbi__convert_format(out,<sp/>s-&gt;img_n,<sp/>req_comp,<sp/>s-&gt;img_x,<sp/>s-&gt;img_y);</highlight></codeline>
<codeline lineno="7536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(out<sp/>==<sp/>NULL)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>out;<sp/></highlight><highlight class="comment">//<sp/>stbi__convert_format<sp/>frees<sp/>input<sp/>on<sp/>failure</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7538"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7539"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>out;</highlight></codeline>
<codeline lineno="7540"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7541"><highlight class="normal"></highlight></codeline>
<codeline lineno="7542"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stbi__pnm_isspace(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>c)</highlight></codeline>
<codeline lineno="7543"><highlight class="normal">{</highlight></codeline>
<codeline lineno="7544"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>c<sp/>==<sp/></highlight><highlight class="charliteral">&apos;<sp/>&apos;</highlight><highlight class="normal"><sp/>||<sp/>c<sp/>==<sp/></highlight><highlight class="charliteral">&apos;\t&apos;</highlight><highlight class="normal"><sp/>||<sp/>c<sp/>==<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal"><sp/>||<sp/>c<sp/>==<sp/></highlight><highlight class="charliteral">&apos;\v&apos;</highlight><highlight class="normal"><sp/>||<sp/>c<sp/>==<sp/></highlight><highlight class="charliteral">&apos;\f&apos;</highlight><highlight class="normal"><sp/>||<sp/>c<sp/>==<sp/></highlight><highlight class="charliteral">&apos;\r&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="7545"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7546"><highlight class="normal"></highlight></codeline>
<codeline lineno="7547"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>stbi__pnm_skip_whitespace(stbi__context<sp/>*s,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*c)</highlight></codeline>
<codeline lineno="7548"><highlight class="normal">{</highlight></codeline>
<codeline lineno="7549"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(;;)<sp/>{</highlight></codeline>
<codeline lineno="7550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(!stbi__at_eof(s)<sp/>&amp;&amp;<sp/>stbi__pnm_isspace(*c))</highlight></codeline>
<codeline lineno="7551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*c<sp/>=<sp/>(char)<sp/>stbi__get8(s);</highlight></codeline>
<codeline lineno="7552"><highlight class="normal"></highlight></codeline>
<codeline lineno="7553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(stbi__at_eof(s)<sp/>||<sp/>*c<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;#&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="7554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="7555"><highlight class="normal"></highlight></codeline>
<codeline lineno="7556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(!stbi__at_eof(s)<sp/>&amp;&amp;<sp/>*c<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>*c<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;\r&apos;</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="7557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*c<sp/>=<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">)<sp/>stbi__get8(s);</highlight></codeline>
<codeline lineno="7558"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7559"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7560"><highlight class="normal"></highlight></codeline>
<codeline lineno="7561"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stbi__pnm_isdigit(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>c)</highlight></codeline>
<codeline lineno="7562"><highlight class="normal">{</highlight></codeline>
<codeline lineno="7563"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>c<sp/>&gt;=<sp/></highlight><highlight class="charliteral">&apos;0&apos;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>c<sp/>&lt;=<sp/></highlight><highlight class="charliteral">&apos;9&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="7564"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7565"><highlight class="normal"></highlight></codeline>
<codeline lineno="7566"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stbi__pnm_getinteger(stbi__context<sp/>*s,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*c)</highlight></codeline>
<codeline lineno="7567"><highlight class="normal">{</highlight></codeline>
<codeline lineno="7568"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>value<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="7569"><highlight class="normal"></highlight></codeline>
<codeline lineno="7570"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(!stbi__at_eof(s)<sp/>&amp;&amp;<sp/>stbi__pnm_isdigit(*c))<sp/>{</highlight></codeline>
<codeline lineno="7571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>value<sp/>=<sp/>value*10<sp/>+<sp/>(*c<sp/>-<sp/></highlight><highlight class="charliteral">&apos;0&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="7572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*c<sp/>=<sp/>(char)<sp/>stbi__get8(s);</highlight></codeline>
<codeline lineno="7573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((value<sp/>&gt;<sp/>214748364)<sp/>||<sp/>(value<sp/>==<sp/>214748364<sp/>&amp;&amp;<sp/>*c<sp/>&gt;<sp/></highlight><highlight class="charliteral">&apos;7&apos;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="7574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stbi__err(</highlight><highlight class="stringliteral">&quot;integer<sp/>parse<sp/>overflow&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Parsing<sp/>an<sp/>integer<sp/>in<sp/>the<sp/>PPM<sp/>header<sp/>overflowed<sp/>a<sp/>32-bit<sp/>int&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="7575"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7576"><highlight class="normal"></highlight></codeline>
<codeline lineno="7577"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>value;</highlight></codeline>
<codeline lineno="7578"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7579"><highlight class="normal"></highlight></codeline>
<codeline lineno="7580"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stbi__pnm_info(stbi__context<sp/>*s,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*x,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*y,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*comp)</highlight></codeline>
<codeline lineno="7581"><highlight class="normal">{</highlight></codeline>
<codeline lineno="7582"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>maxv,<sp/>dummy;</highlight></codeline>
<codeline lineno="7583"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>c,<sp/>p,<sp/>t;</highlight></codeline>
<codeline lineno="7584"><highlight class="normal"></highlight></codeline>
<codeline lineno="7585"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!x)<sp/>x<sp/>=<sp/>&amp;dummy;</highlight></codeline>
<codeline lineno="7586"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!y)<sp/>y<sp/>=<sp/>&amp;dummy;</highlight></codeline>
<codeline lineno="7587"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!comp)<sp/>comp<sp/>=<sp/>&amp;dummy;</highlight></codeline>
<codeline lineno="7588"><highlight class="normal"></highlight></codeline>
<codeline lineno="7589"><highlight class="normal"><sp/><sp/><sp/>stbi__rewind(s);</highlight></codeline>
<codeline lineno="7590"><highlight class="normal"></highlight></codeline>
<codeline lineno="7591"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>identifier</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7592"><highlight class="normal"><sp/><sp/><sp/>p<sp/>=<sp/>(char)<sp/>stbi__get8(s);</highlight></codeline>
<codeline lineno="7593"><highlight class="normal"><sp/><sp/><sp/>t<sp/>=<sp/>(char)<sp/>stbi__get8(s);</highlight></codeline>
<codeline lineno="7594"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;P&apos;</highlight><highlight class="normal"><sp/>||<sp/>(t<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;5&apos;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>t<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;6&apos;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="7595"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stbi__rewind(s);</highlight></codeline>
<codeline lineno="7596"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="7597"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7598"><highlight class="normal"></highlight></codeline>
<codeline lineno="7599"><highlight class="normal"><sp/><sp/><sp/>*comp<sp/>=<sp/>(t<sp/>==<sp/></highlight><highlight class="charliteral">&apos;6&apos;</highlight><highlight class="normal">)<sp/>?<sp/>3<sp/>:<sp/>1;<sp/><sp/></highlight><highlight class="comment">//<sp/>&apos;5&apos;<sp/>is<sp/>1-component<sp/>.pgm;<sp/>&apos;6&apos;<sp/>is<sp/>3-component<sp/>.ppm</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7600"><highlight class="normal"></highlight></codeline>
<codeline lineno="7601"><highlight class="normal"><sp/><sp/><sp/>c<sp/>=<sp/>(char)<sp/>stbi__get8(s);</highlight></codeline>
<codeline lineno="7602"><highlight class="normal"><sp/><sp/><sp/>stbi__pnm_skip_whitespace(s,<sp/>&amp;c);</highlight></codeline>
<codeline lineno="7603"><highlight class="normal"></highlight></codeline>
<codeline lineno="7604"><highlight class="normal"><sp/><sp/><sp/>*x<sp/>=<sp/>stbi__pnm_getinteger(s,<sp/>&amp;c);<sp/></highlight><highlight class="comment">//<sp/>read<sp/>width</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7605"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(*x<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="7606"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stbi__err(</highlight><highlight class="stringliteral">&quot;invalid<sp/>width&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;PPM<sp/>image<sp/>header<sp/>had<sp/>zero<sp/>or<sp/>overflowing<sp/>width&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="7607"><highlight class="normal"><sp/><sp/><sp/>stbi__pnm_skip_whitespace(s,<sp/>&amp;c);</highlight></codeline>
<codeline lineno="7608"><highlight class="normal"></highlight></codeline>
<codeline lineno="7609"><highlight class="normal"><sp/><sp/><sp/>*y<sp/>=<sp/>stbi__pnm_getinteger(s,<sp/>&amp;c);<sp/></highlight><highlight class="comment">//<sp/>read<sp/>height</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7610"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*y<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="7611"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stbi__err(</highlight><highlight class="stringliteral">&quot;invalid<sp/>width&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;PPM<sp/>image<sp/>header<sp/>had<sp/>zero<sp/>or<sp/>overflowing<sp/>width&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="7612"><highlight class="normal"><sp/><sp/><sp/>stbi__pnm_skip_whitespace(s,<sp/>&amp;c);</highlight></codeline>
<codeline lineno="7613"><highlight class="normal"></highlight></codeline>
<codeline lineno="7614"><highlight class="normal"><sp/><sp/><sp/>maxv<sp/>=<sp/>stbi__pnm_getinteger(s,<sp/>&amp;c);<sp/><sp/></highlight><highlight class="comment">//<sp/>read<sp/>max<sp/>value</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7615"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(maxv<sp/>&gt;<sp/>65535)</highlight></codeline>
<codeline lineno="7616"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stbi__err(</highlight><highlight class="stringliteral">&quot;max<sp/>value<sp/>&gt;<sp/>65535&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;PPM<sp/>image<sp/>supports<sp/>only<sp/>8-bit<sp/>and<sp/>16-bit<sp/>images&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="7617"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(maxv<sp/>&gt;<sp/>255)</highlight></codeline>
<codeline lineno="7618"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>16;</highlight></codeline>
<codeline lineno="7619"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7620"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>8;</highlight></codeline>
<codeline lineno="7621"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7622"><highlight class="normal"></highlight></codeline>
<codeline lineno="7623"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>stbi__pnm_is16(stbi__context<sp/>*s)</highlight></codeline>
<codeline lineno="7624"><highlight class="normal">{</highlight></codeline>
<codeline lineno="7625"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(stbi__pnm_info(s,<sp/>NULL,<sp/>NULL,<sp/>NULL)<sp/>==<sp/>16)</highlight></codeline>
<codeline lineno="7626"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="7627"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="7628"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7629"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7630"><highlight class="normal"></highlight></codeline>
<codeline lineno="7631"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>stbi__info_main(stbi__context<sp/>*s,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*x,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*y,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*comp)</highlight></codeline>
<codeline lineno="7632"><highlight class="normal">{</highlight></codeline>
<codeline lineno="7633"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#ifndef<sp/>STBI_NO_JPEG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7634"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(stbi__jpeg_info(s,<sp/>x,<sp/>y,<sp/>comp))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="7635"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7636"><highlight class="normal"></highlight></codeline>
<codeline lineno="7637"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#ifndef<sp/>STBI_NO_PNG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7638"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(stbi__png_info(s,<sp/>x,<sp/>y,<sp/>comp))<sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="7639"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7640"><highlight class="normal"></highlight></codeline>
<codeline lineno="7641"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#ifndef<sp/>STBI_NO_GIF</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7642"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(stbi__gif_info(s,<sp/>x,<sp/>y,<sp/>comp))<sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="7643"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7644"><highlight class="normal"></highlight></codeline>
<codeline lineno="7645"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#ifndef<sp/>STBI_NO_BMP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7646"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(stbi__bmp_info(s,<sp/>x,<sp/>y,<sp/>comp))<sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="7647"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7648"><highlight class="normal"></highlight></codeline>
<codeline lineno="7649"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#ifndef<sp/>STBI_NO_PSD</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7650"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(stbi__psd_info(s,<sp/>x,<sp/>y,<sp/>comp))<sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="7651"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7652"><highlight class="normal"></highlight></codeline>
<codeline lineno="7653"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#ifndef<sp/>STBI_NO_PIC</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7654"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(stbi__pic_info(s,<sp/>x,<sp/>y,<sp/>comp))<sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="7655"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7656"><highlight class="normal"></highlight></codeline>
<codeline lineno="7657"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#ifndef<sp/>STBI_NO_PNM</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7658"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(stbi__pnm_info(s,<sp/>x,<sp/>y,<sp/>comp))<sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="7659"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7660"><highlight class="normal"></highlight></codeline>
<codeline lineno="7661"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#ifndef<sp/>STBI_NO_HDR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7662"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(stbi__hdr_info(s,<sp/>x,<sp/>y,<sp/>comp))<sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="7663"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7664"><highlight class="normal"></highlight></codeline>
<codeline lineno="7665"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>test<sp/>tga<sp/>last<sp/>because<sp/>it&apos;s<sp/>a<sp/>crappy<sp/>test!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7666"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#ifndef<sp/>STBI_NO_TGA</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7667"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(stbi__tga_info(s,<sp/>x,<sp/>y,<sp/>comp))</highlight></codeline>
<codeline lineno="7668"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="7669"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7670"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stbi__err(</highlight><highlight class="stringliteral">&quot;unknown<sp/>image<sp/>type&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Image<sp/>not<sp/>of<sp/>any<sp/>known<sp/>type,<sp/>or<sp/>corrupt&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="7671"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7672"><highlight class="normal"></highlight></codeline>
<codeline lineno="7673"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>stbi__is_16_main(stbi__context<sp/>*s)</highlight></codeline>
<codeline lineno="7674"><highlight class="normal">{</highlight></codeline>
<codeline lineno="7675"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#ifndef<sp/>STBI_NO_PNG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7676"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(stbi__png_is16(s))<sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="7677"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7678"><highlight class="normal"></highlight></codeline>
<codeline lineno="7679"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#ifndef<sp/>STBI_NO_PSD</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7680"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(stbi__psd_is16(s))<sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="7681"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7682"><highlight class="normal"></highlight></codeline>
<codeline lineno="7683"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#ifndef<sp/>STBI_NO_PNM</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7684"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(stbi__pnm_is16(s))<sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="7685"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7686"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="7687"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7688"><highlight class="normal"></highlight></codeline>
<codeline lineno="7689"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>STBI_NO_STDIO</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7690"><highlight class="normal"><ref refid="stb__image_8h_1a2d9ec9850cd12aefe7641b456266a4c2" kindref="member">STBIDEF</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="stb__image_8h_1aede708cca1304520b2afcf4d5eb61d70" kindref="member">stbi_info</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*filename,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*x,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*y,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*comp)</highlight></codeline>
<codeline lineno="7691"><highlight class="normal">{</highlight></codeline>
<codeline lineno="7692"><highlight class="normal"><sp/><sp/><sp/><sp/>FILE<sp/>*f<sp/>=<sp/>stbi__fopen(filename,<sp/></highlight><highlight class="stringliteral">&quot;rb&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="7693"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="7694"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!f)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stbi__err(</highlight><highlight class="stringliteral">&quot;can&apos;t<sp/>fopen&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Unable<sp/>to<sp/>open<sp/>file&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="7695"><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>=<sp/><ref refid="stb__image_8h_1a28abedef4a0a93909332080df6be0021" kindref="member">stbi_info_from_file</ref>(f,<sp/>x,<sp/>y,<sp/>comp);</highlight></codeline>
<codeline lineno="7696"><highlight class="normal"><sp/><sp/><sp/><sp/>fclose(f);</highlight></codeline>
<codeline lineno="7697"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="7698"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7699"><highlight class="normal"></highlight></codeline>
<codeline lineno="7700"><highlight class="normal"><ref refid="stb__image_8h_1a2d9ec9850cd12aefe7641b456266a4c2" kindref="member">STBIDEF</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="stb__image_8h_1a28abedef4a0a93909332080df6be0021" kindref="member">stbi_info_from_file</ref>(FILE<sp/>*f,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*x,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*y,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*comp)</highlight></codeline>
<codeline lineno="7701"><highlight class="normal">{</highlight></codeline>
<codeline lineno="7702"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>r;</highlight></codeline>
<codeline lineno="7703"><highlight class="normal"><sp/><sp/><sp/>stbi__context<sp/>s;</highlight></codeline>
<codeline lineno="7704"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>pos<sp/>=<sp/>ftell(f);</highlight></codeline>
<codeline lineno="7705"><highlight class="normal"><sp/><sp/><sp/>stbi__start_file(&amp;s,<sp/>f);</highlight></codeline>
<codeline lineno="7706"><highlight class="normal"><sp/><sp/><sp/>r<sp/>=<sp/>stbi__info_main(&amp;s,x,y,comp);</highlight></codeline>
<codeline lineno="7707"><highlight class="normal"><sp/><sp/><sp/>fseek(f,pos,SEEK_SET);</highlight></codeline>
<codeline lineno="7708"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>r;</highlight></codeline>
<codeline lineno="7709"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7710"><highlight class="normal"></highlight></codeline>
<codeline lineno="7711"><highlight class="normal"><ref refid="stb__image_8h_1a2d9ec9850cd12aefe7641b456266a4c2" kindref="member">STBIDEF</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="stb__image_8h_1a7d9af55a35382c011cc186f7b62c00af" kindref="member">stbi_is_16_bit</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*filename)</highlight></codeline>
<codeline lineno="7712"><highlight class="normal">{</highlight></codeline>
<codeline lineno="7713"><highlight class="normal"><sp/><sp/><sp/><sp/>FILE<sp/>*f<sp/>=<sp/>stbi__fopen(filename,<sp/></highlight><highlight class="stringliteral">&quot;rb&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="7714"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="7715"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!f)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stbi__err(</highlight><highlight class="stringliteral">&quot;can&apos;t<sp/>fopen&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Unable<sp/>to<sp/>open<sp/>file&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="7716"><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>=<sp/><ref refid="stb__image_8h_1a42fa266b80bfde22a0781ba2112d1c62" kindref="member">stbi_is_16_bit_from_file</ref>(f);</highlight></codeline>
<codeline lineno="7717"><highlight class="normal"><sp/><sp/><sp/><sp/>fclose(f);</highlight></codeline>
<codeline lineno="7718"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="7719"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7720"><highlight class="normal"></highlight></codeline>
<codeline lineno="7721"><highlight class="normal"><ref refid="stb__image_8h_1a2d9ec9850cd12aefe7641b456266a4c2" kindref="member">STBIDEF</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="stb__image_8h_1a42fa266b80bfde22a0781ba2112d1c62" kindref="member">stbi_is_16_bit_from_file</ref>(FILE<sp/>*f)</highlight></codeline>
<codeline lineno="7722"><highlight class="normal">{</highlight></codeline>
<codeline lineno="7723"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>r;</highlight></codeline>
<codeline lineno="7724"><highlight class="normal"><sp/><sp/><sp/>stbi__context<sp/>s;</highlight></codeline>
<codeline lineno="7725"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>pos<sp/>=<sp/>ftell(f);</highlight></codeline>
<codeline lineno="7726"><highlight class="normal"><sp/><sp/><sp/>stbi__start_file(&amp;s,<sp/>f);</highlight></codeline>
<codeline lineno="7727"><highlight class="normal"><sp/><sp/><sp/>r<sp/>=<sp/>stbi__is_16_main(&amp;s);</highlight></codeline>
<codeline lineno="7728"><highlight class="normal"><sp/><sp/><sp/>fseek(f,pos,SEEK_SET);</highlight></codeline>
<codeline lineno="7729"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>r;</highlight></codeline>
<codeline lineno="7730"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7731"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>!STBI_NO_STDIO</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7732"><highlight class="normal"></highlight></codeline>
<codeline lineno="7733"><highlight class="normal"><ref refid="stb__image_8h_1a2d9ec9850cd12aefe7641b456266a4c2" kindref="member">STBIDEF</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="stb__image_8h_1acfef077febce3bc3f1f339de478f3315" kindref="member">stbi_info_from_memory</ref>(<ref refid="stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d" kindref="member">stbi_uc</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*buffer,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>len,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*x,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*y,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*comp)</highlight></codeline>
<codeline lineno="7734"><highlight class="normal">{</highlight></codeline>
<codeline lineno="7735"><highlight class="normal"><sp/><sp/><sp/>stbi__context<sp/>s;</highlight></codeline>
<codeline lineno="7736"><highlight class="normal"><sp/><sp/><sp/>stbi__start_mem(&amp;s,buffer,len);</highlight></codeline>
<codeline lineno="7737"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stbi__info_main(&amp;s,x,y,comp);</highlight></codeline>
<codeline lineno="7738"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7739"><highlight class="normal"></highlight></codeline>
<codeline lineno="7740"><highlight class="normal"><ref refid="stb__image_8h_1a2d9ec9850cd12aefe7641b456266a4c2" kindref="member">STBIDEF</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="stb__image_8h_1a86291c64cb663f41a34647d5e1abf363" kindref="member">stbi_info_from_callbacks</ref>(<ref refid="structstbi__io__callbacks" kindref="compound">stbi_io_callbacks</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*c,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*user,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*x,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*y,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*comp)</highlight></codeline>
<codeline lineno="7741"><highlight class="normal">{</highlight></codeline>
<codeline lineno="7742"><highlight class="normal"><sp/><sp/><sp/>stbi__context<sp/>s;</highlight></codeline>
<codeline lineno="7743"><highlight class="normal"><sp/><sp/><sp/>stbi__start_callbacks(&amp;s,<sp/>(<ref refid="structstbi__io__callbacks" kindref="compound">stbi_io_callbacks</ref><sp/>*)<sp/>c,<sp/>user);</highlight></codeline>
<codeline lineno="7744"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stbi__info_main(&amp;s,x,y,comp);</highlight></codeline>
<codeline lineno="7745"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7746"><highlight class="normal"></highlight></codeline>
<codeline lineno="7747"><highlight class="normal"><ref refid="stb__image_8h_1a2d9ec9850cd12aefe7641b456266a4c2" kindref="member">STBIDEF</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="stb__image_8h_1a548d486e07e0eb95671cb200d3a9530f" kindref="member">stbi_is_16_bit_from_memory</ref>(<ref refid="stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d" kindref="member">stbi_uc</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*buffer,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>len)</highlight></codeline>
<codeline lineno="7748"><highlight class="normal">{</highlight></codeline>
<codeline lineno="7749"><highlight class="normal"><sp/><sp/><sp/>stbi__context<sp/>s;</highlight></codeline>
<codeline lineno="7750"><highlight class="normal"><sp/><sp/><sp/>stbi__start_mem(&amp;s,buffer,len);</highlight></codeline>
<codeline lineno="7751"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stbi__is_16_main(&amp;s);</highlight></codeline>
<codeline lineno="7752"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7753"><highlight class="normal"></highlight></codeline>
<codeline lineno="7754"><highlight class="normal"><ref refid="stb__image_8h_1a2d9ec9850cd12aefe7641b456266a4c2" kindref="member">STBIDEF</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="stb__image_8h_1a990e0e38ab6e600bd9cbf5d30abd2f8f" kindref="member">stbi_is_16_bit_from_callbacks</ref>(<ref refid="structstbi__io__callbacks" kindref="compound">stbi_io_callbacks</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*c,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*user)</highlight></codeline>
<codeline lineno="7755"><highlight class="normal">{</highlight></codeline>
<codeline lineno="7756"><highlight class="normal"><sp/><sp/><sp/>stbi__context<sp/>s;</highlight></codeline>
<codeline lineno="7757"><highlight class="normal"><sp/><sp/><sp/>stbi__start_callbacks(&amp;s,<sp/>(<ref refid="structstbi__io__callbacks" kindref="compound">stbi_io_callbacks</ref><sp/>*)<sp/>c,<sp/>user);</highlight></codeline>
<codeline lineno="7758"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stbi__is_16_main(&amp;s);</highlight></codeline>
<codeline lineno="7759"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7760"><highlight class="normal"></highlight></codeline>
<codeline lineno="7761"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>STB_IMAGE_IMPLEMENTATION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7762"><highlight class="normal"></highlight></codeline>
<codeline lineno="7763"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="7764"><highlight class="comment"><sp/><sp/><sp/>revision<sp/>history:</highlight></codeline>
<codeline lineno="7765"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>2.20<sp/><sp/>(2019-02-07)<sp/>support<sp/>utf8<sp/>filenames<sp/>in<sp/>Windows;<sp/>fix<sp/>warnings<sp/>and<sp/>platform<sp/>ifdefs</highlight></codeline>
<codeline lineno="7766"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>2.19<sp/><sp/>(2018-02-11)<sp/>fix<sp/>warning</highlight></codeline>
<codeline lineno="7767"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>2.18<sp/><sp/>(2018-01-30)<sp/>fix<sp/>warnings</highlight></codeline>
<codeline lineno="7768"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>2.17<sp/><sp/>(2018-01-29)<sp/>change<sp/>sbti__shiftsigned<sp/>to<sp/>avoid<sp/>clang<sp/>-O2<sp/>bug</highlight></codeline>
<codeline lineno="7769"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1-bit<sp/>BMP</highlight></codeline>
<codeline lineno="7770"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*_is_16_bit<sp/>api</highlight></codeline>
<codeline lineno="7771"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>avoid<sp/>warnings</highlight></codeline>
<codeline lineno="7772"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>2.16<sp/><sp/>(2017-07-23)<sp/>all<sp/>functions<sp/>have<sp/>16-bit<sp/>variants;</highlight></codeline>
<codeline lineno="7773"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>STBI_NO_STDIO<sp/>works<sp/>again;</highlight></codeline>
<codeline lineno="7774"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>compilation<sp/>fixes;</highlight></codeline>
<codeline lineno="7775"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fix<sp/>rounding<sp/>in<sp/>unpremultiply;</highlight></codeline>
<codeline lineno="7776"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>optimize<sp/>vertical<sp/>flip;</highlight></codeline>
<codeline lineno="7777"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>disable<sp/>raw_len<sp/>validation;</highlight></codeline>
<codeline lineno="7778"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>documentation<sp/>fixes</highlight></codeline>
<codeline lineno="7779"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>2.15<sp/><sp/>(2017-03-18)<sp/>fix<sp/>png-1,2,4<sp/>bug;<sp/>now<sp/>all<sp/>Imagenet<sp/>JPGs<sp/>decode;</highlight></codeline>
<codeline lineno="7780"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>warning<sp/>fixes;<sp/>disable<sp/>run-time<sp/>SSE<sp/>detection<sp/>on<sp/>gcc;</highlight></codeline>
<codeline lineno="7781"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uniform<sp/>handling<sp/>of<sp/>optional<sp/>&quot;return&quot;<sp/>values;</highlight></codeline>
<codeline lineno="7782"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>thread-safe<sp/>initialization<sp/>of<sp/>zlib<sp/>tables</highlight></codeline>
<codeline lineno="7783"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>2.14<sp/><sp/>(2017-03-03)<sp/>remove<sp/>deprecated<sp/>STBI_JPEG_OLD;<sp/>fixes<sp/>for<sp/>Imagenet<sp/>JPGs</highlight></codeline>
<codeline lineno="7784"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>2.13<sp/><sp/>(2016-11-29)<sp/>add<sp/>16-bit<sp/>API,<sp/>only<sp/>supported<sp/>for<sp/>PNG<sp/>right<sp/>now</highlight></codeline>
<codeline lineno="7785"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>2.12<sp/><sp/>(2016-04-02)<sp/>fix<sp/>typo<sp/>in<sp/>2.11<sp/>PSD<sp/>fix<sp/>that<sp/>caused<sp/>crashes</highlight></codeline>
<codeline lineno="7786"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>2.11<sp/><sp/>(2016-04-02)<sp/>allocate<sp/>large<sp/>structures<sp/>on<sp/>the<sp/>stack</highlight></codeline>
<codeline lineno="7787"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>remove<sp/>white<sp/>matting<sp/>for<sp/>transparent<sp/>PSD</highlight></codeline>
<codeline lineno="7788"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fix<sp/>reported<sp/>channel<sp/>count<sp/>for<sp/>PNG<sp/>&amp;<sp/>BMP</highlight></codeline>
<codeline lineno="7789"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>re-enable<sp/>SSE2<sp/>in<sp/>non-gcc<sp/>64-bit</highlight></codeline>
<codeline lineno="7790"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>support<sp/>RGB-formatted<sp/>JPEG</highlight></codeline>
<codeline lineno="7791"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>read<sp/>16-bit<sp/>PNGs<sp/>(only<sp/>as<sp/>8-bit)</highlight></codeline>
<codeline lineno="7792"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>2.10<sp/><sp/>(2016-01-22)<sp/>avoid<sp/>warning<sp/>introduced<sp/>in<sp/>2.09<sp/>by<sp/>STBI_REALLOC_SIZED</highlight></codeline>
<codeline lineno="7793"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>2.09<sp/><sp/>(2016-01-16)<sp/>allow<sp/>comments<sp/>in<sp/>PNM<sp/>files</highlight></codeline>
<codeline lineno="7794"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>16-bit-per-pixel<sp/>TGA<sp/>(not<sp/>bit-per-component)</highlight></codeline>
<codeline lineno="7795"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>info()<sp/>for<sp/>TGA<sp/>could<sp/>break<sp/>due<sp/>to<sp/>.hdr<sp/>handling</highlight></codeline>
<codeline lineno="7796"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>info()<sp/>for<sp/>BMP<sp/>to<sp/>shares<sp/>code<sp/>instead<sp/>of<sp/>sloppy<sp/>parse</highlight></codeline>
<codeline lineno="7797"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>can<sp/>use<sp/>STBI_REALLOC_SIZED<sp/>if<sp/>allocator<sp/>doesn&apos;t<sp/>support<sp/>realloc</highlight></codeline>
<codeline lineno="7798"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>code<sp/>cleanup</highlight></codeline>
<codeline lineno="7799"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>2.08<sp/><sp/>(2015-09-13)<sp/>fix<sp/>to<sp/>2.07<sp/>cleanup,<sp/>reading<sp/>RGB<sp/>PSD<sp/>as<sp/>RGBA</highlight></codeline>
<codeline lineno="7800"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>2.07<sp/><sp/>(2015-09-13)<sp/>fix<sp/>compiler<sp/>warnings</highlight></codeline>
<codeline lineno="7801"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>partial<sp/>animated<sp/>GIF<sp/>support</highlight></codeline>
<codeline lineno="7802"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>limited<sp/>16-bpc<sp/>PSD<sp/>support</highlight></codeline>
<codeline lineno="7803"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#ifdef<sp/>unused<sp/>functions</highlight></codeline>
<codeline lineno="7804"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bug<sp/>with<sp/>&lt;<sp/>92<sp/>byte<sp/>PIC,PNM,HDR,TGA</highlight></codeline>
<codeline lineno="7805"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>2.06<sp/><sp/>(2015-04-19)<sp/>fix<sp/>bug<sp/>where<sp/>PSD<sp/>returns<sp/>wrong<sp/>&apos;*comp&apos;<sp/>value</highlight></codeline>
<codeline lineno="7806"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>2.05<sp/><sp/>(2015-04-19)<sp/>fix<sp/>bug<sp/>in<sp/>progressive<sp/>JPEG<sp/>handling,<sp/>fix<sp/>warning</highlight></codeline>
<codeline lineno="7807"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>2.04<sp/><sp/>(2015-04-15)<sp/>try<sp/>to<sp/>re-enable<sp/>SIMD<sp/>on<sp/>MinGW<sp/>64-bit</highlight></codeline>
<codeline lineno="7808"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>2.03<sp/><sp/>(2015-04-12)<sp/>extra<sp/>corruption<sp/>checking<sp/>(mmozeiko)</highlight></codeline>
<codeline lineno="7809"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stbi_set_flip_vertically_on_load<sp/>(nguillemot)</highlight></codeline>
<codeline lineno="7810"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fix<sp/>NEON<sp/>support;<sp/>fix<sp/>mingw<sp/>support</highlight></codeline>
<codeline lineno="7811"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>2.02<sp/><sp/>(2015-01-19)<sp/>fix<sp/>incorrect<sp/>assert,<sp/>fix<sp/>warning</highlight></codeline>
<codeline lineno="7812"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>2.01<sp/><sp/>(2015-01-17)<sp/>fix<sp/>various<sp/>warnings;<sp/>suppress<sp/>SIMD<sp/>on<sp/>gcc<sp/>32-bit<sp/>without<sp/>-msse2</highlight></codeline>
<codeline lineno="7813"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>2.00b<sp/>(2014-12-25)<sp/>fix<sp/>STBI_MALLOC<sp/>in<sp/>progressive<sp/>JPEG</highlight></codeline>
<codeline lineno="7814"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>2.00<sp/><sp/>(2014-12-25)<sp/>optimize<sp/>JPG,<sp/>including<sp/>x86<sp/>SSE2<sp/>&amp;<sp/>NEON<sp/>SIMD<sp/>(ryg)</highlight></codeline>
<codeline lineno="7815"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>progressive<sp/>JPEG<sp/>(stb)</highlight></codeline>
<codeline lineno="7816"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PGM/PPM<sp/>support<sp/>(Ken<sp/>Miller)</highlight></codeline>
<codeline lineno="7817"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>STBI_MALLOC,STBI_REALLOC,STBI_FREE</highlight></codeline>
<codeline lineno="7818"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GIF<sp/>bugfix<sp/>--<sp/>seemingly<sp/>never<sp/>worked</highlight></codeline>
<codeline lineno="7819"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>STBI_NO_*,<sp/>STBI_ONLY_*</highlight></codeline>
<codeline lineno="7820"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>1.48<sp/><sp/>(2014-12-14)<sp/>fix<sp/>incorrectly-named<sp/>assert()</highlight></codeline>
<codeline lineno="7821"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>1.47<sp/><sp/>(2014-12-14)<sp/>1/2/4-bit<sp/>PNG<sp/>support,<sp/>both<sp/>direct<sp/>and<sp/>paletted<sp/>(Omar<sp/>Cornut<sp/>&amp;<sp/>stb)</highlight></codeline>
<codeline lineno="7822"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>optimize<sp/>PNG<sp/>(ryg)</highlight></codeline>
<codeline lineno="7823"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fix<sp/>bug<sp/>in<sp/>interlaced<sp/>PNG<sp/>with<sp/>user-specified<sp/>channel<sp/>count<sp/>(stb)</highlight></codeline>
<codeline lineno="7824"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>1.46<sp/><sp/>(2014-08-26)</highlight></codeline>
<codeline lineno="7825"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fix<sp/>broken<sp/>tRNS<sp/>chunk<sp/>(colorkey-style<sp/>transparency)<sp/>in<sp/>non-paletted<sp/>PNG</highlight></codeline>
<codeline lineno="7826"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>1.45<sp/><sp/>(2014-08-16)</highlight></codeline>
<codeline lineno="7827"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fix<sp/>MSVC-ARM<sp/>internal<sp/>compiler<sp/>error<sp/>by<sp/>wrapping<sp/>malloc</highlight></codeline>
<codeline lineno="7828"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>1.44<sp/><sp/>(2014-08-07)</highlight></codeline>
<codeline lineno="7829"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>various<sp/>warning<sp/>fixes<sp/>from<sp/>Ronny<sp/>Chevalier</highlight></codeline>
<codeline lineno="7830"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>1.43<sp/><sp/>(2014-07-15)</highlight></codeline>
<codeline lineno="7831"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fix<sp/>MSVC-only<sp/>compiler<sp/>problem<sp/>in<sp/>code<sp/>changed<sp/>in<sp/>1.42</highlight></codeline>
<codeline lineno="7832"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>1.42<sp/><sp/>(2014-07-09)</highlight></codeline>
<codeline lineno="7833"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>don&apos;t<sp/>define<sp/>_CRT_SECURE_NO_WARNINGS<sp/>(affects<sp/>user<sp/>code)</highlight></codeline>
<codeline lineno="7834"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fixes<sp/>to<sp/>stbi__cleanup_jpeg<sp/>path</highlight></codeline>
<codeline lineno="7835"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>added<sp/>STBI_ASSERT<sp/>to<sp/>avoid<sp/>requiring<sp/>assert.h</highlight></codeline>
<codeline lineno="7836"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>1.41<sp/><sp/>(2014-06-25)</highlight></codeline>
<codeline lineno="7837"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fix<sp/>search&amp;replace<sp/>from<sp/>1.36<sp/>that<sp/>messed<sp/>up<sp/>comments/error<sp/>messages</highlight></codeline>
<codeline lineno="7838"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>1.40<sp/><sp/>(2014-06-22)</highlight></codeline>
<codeline lineno="7839"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fix<sp/>gcc<sp/>struct-initialization<sp/>warning</highlight></codeline>
<codeline lineno="7840"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>1.39<sp/><sp/>(2014-06-15)</highlight></codeline>
<codeline lineno="7841"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fix<sp/>to<sp/>TGA<sp/>optimization<sp/>when<sp/>req_comp<sp/>!=<sp/>number<sp/>of<sp/>components<sp/>in<sp/>TGA;</highlight></codeline>
<codeline lineno="7842"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fix<sp/>to<sp/>GIF<sp/>loading<sp/>because<sp/>BMP<sp/>wasn&apos;t<sp/>rewinding<sp/>(whoops,<sp/>no<sp/>GIFs<sp/>in<sp/>my<sp/>test<sp/>suite)</highlight></codeline>
<codeline lineno="7843"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>add<sp/>support<sp/>for<sp/>BMP<sp/>version<sp/>5<sp/>(more<sp/>ignored<sp/>fields)</highlight></codeline>
<codeline lineno="7844"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>1.38<sp/><sp/>(2014-06-06)</highlight></codeline>
<codeline lineno="7845"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>suppress<sp/>MSVC<sp/>warnings<sp/>on<sp/>integer<sp/>casts<sp/>truncating<sp/>values</highlight></codeline>
<codeline lineno="7846"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fix<sp/>accidental<sp/>rename<sp/>of<sp/>&apos;skip&apos;<sp/>field<sp/>of<sp/>I/O</highlight></codeline>
<codeline lineno="7847"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>1.37<sp/><sp/>(2014-06-04)</highlight></codeline>
<codeline lineno="7848"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>remove<sp/>duplicate<sp/>typedef</highlight></codeline>
<codeline lineno="7849"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>1.36<sp/><sp/>(2014-06-03)</highlight></codeline>
<codeline lineno="7850"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>convert<sp/>to<sp/>header<sp/>file<sp/>single-file<sp/>library</highlight></codeline>
<codeline lineno="7851"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>de-iphone<sp/>isn&apos;t<sp/>set,<sp/>load<sp/>iphone<sp/>images<sp/>color-swapped<sp/>instead<sp/>of<sp/>returning<sp/>NULL</highlight></codeline>
<codeline lineno="7852"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>1.35<sp/><sp/>(2014-05-27)</highlight></codeline>
<codeline lineno="7853"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>various<sp/>warnings</highlight></codeline>
<codeline lineno="7854"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fix<sp/>broken<sp/>STBI_SIMD<sp/>path</highlight></codeline>
<codeline lineno="7855"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fix<sp/>bug<sp/>where<sp/>stbi_load_from_file<sp/>no<sp/>longer<sp/>left<sp/>file<sp/>pointer<sp/>in<sp/>correct<sp/>place</highlight></codeline>
<codeline lineno="7856"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fix<sp/>broken<sp/>non-easy<sp/>path<sp/>for<sp/>32-bit<sp/>BMP<sp/>(possibly<sp/>never<sp/>used)</highlight></codeline>
<codeline lineno="7857"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TGA<sp/>optimization<sp/>by<sp/>Arseny<sp/>Kapoulkine</highlight></codeline>
<codeline lineno="7858"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>1.34<sp/><sp/>(unknown)</highlight></codeline>
<codeline lineno="7859"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>use<sp/>STBI_NOTUSED<sp/>in<sp/>stbi__resample_row_generic(),<sp/>fix<sp/>one<sp/>more<sp/>leak<sp/>in<sp/>tga<sp/>failure<sp/>case</highlight></codeline>
<codeline lineno="7860"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>1.33<sp/><sp/>(2011-07-14)</highlight></codeline>
<codeline lineno="7861"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>make<sp/>stbi_is_hdr<sp/>work<sp/>in<sp/>STBI_NO_HDR<sp/>(as<sp/>specified),<sp/>minor<sp/>compiler-friendly<sp/>improvements</highlight></codeline>
<codeline lineno="7862"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>1.32<sp/><sp/>(2011-07-13)</highlight></codeline>
<codeline lineno="7863"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>support<sp/>for<sp/>&quot;info&quot;<sp/>function<sp/>for<sp/>all<sp/>supported<sp/>filetypes<sp/>(SpartanJ)</highlight></codeline>
<codeline lineno="7864"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>1.31<sp/><sp/>(2011-06-20)</highlight></codeline>
<codeline lineno="7865"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>a<sp/>few<sp/>more<sp/>leak<sp/>fixes,<sp/>bug<sp/>in<sp/>PNG<sp/>handling<sp/>(SpartanJ)</highlight></codeline>
<codeline lineno="7866"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>1.30<sp/><sp/>(2011-06-11)</highlight></codeline>
<codeline lineno="7867"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>added<sp/>ability<sp/>to<sp/>load<sp/>files<sp/>via<sp/>callbacks<sp/>to<sp/>accomidate<sp/>custom<sp/>input<sp/>streams<sp/>(Ben<sp/>Wenger)</highlight></codeline>
<codeline lineno="7868"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>removed<sp/>deprecated<sp/>format-specific<sp/>test/load<sp/>functions</highlight></codeline>
<codeline lineno="7869"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>removed<sp/>support<sp/>for<sp/>installable<sp/>file<sp/>formats<sp/>(stbi_loader)<sp/>--<sp/>would<sp/>have<sp/>been<sp/>broken<sp/>for<sp/>IO<sp/>callbacks<sp/>anyway</highlight></codeline>
<codeline lineno="7870"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>error<sp/>cases<sp/>in<sp/>bmp<sp/>and<sp/>tga<sp/>give<sp/>messages<sp/>and<sp/>don&apos;t<sp/>leak<sp/>(Raymond<sp/>Barbiero,<sp/>grisha)</highlight></codeline>
<codeline lineno="7871"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fix<sp/>inefficiency<sp/>in<sp/>decoding<sp/>32-bit<sp/>BMP<sp/>(David<sp/>Woo)</highlight></codeline>
<codeline lineno="7872"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>1.29<sp/><sp/>(2010-08-16)</highlight></codeline>
<codeline lineno="7873"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>various<sp/>warning<sp/>fixes<sp/>from<sp/>Aurelien<sp/>Pocheville</highlight></codeline>
<codeline lineno="7874"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>1.28<sp/><sp/>(2010-08-01)</highlight></codeline>
<codeline lineno="7875"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fix<sp/>bug<sp/>in<sp/>GIF<sp/>palette<sp/>transparency<sp/>(SpartanJ)</highlight></codeline>
<codeline lineno="7876"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>1.27<sp/><sp/>(2010-08-01)</highlight></codeline>
<codeline lineno="7877"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cast-to-stbi_uc<sp/>to<sp/>fix<sp/>warnings</highlight></codeline>
<codeline lineno="7878"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>1.26<sp/><sp/>(2010-07-24)</highlight></codeline>
<codeline lineno="7879"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fix<sp/>bug<sp/>in<sp/>file<sp/>buffering<sp/>for<sp/>PNG<sp/>reported<sp/>by<sp/>SpartanJ</highlight></codeline>
<codeline lineno="7880"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>1.25<sp/><sp/>(2010-07-17)</highlight></codeline>
<codeline lineno="7881"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>refix<sp/>trans_data<sp/>warning<sp/>(Won<sp/>Chun)</highlight></codeline>
<codeline lineno="7882"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>1.24<sp/><sp/>(2010-07-12)</highlight></codeline>
<codeline lineno="7883"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>perf<sp/>improvements<sp/>reading<sp/>from<sp/>files<sp/>on<sp/>platforms<sp/>with<sp/>lock-heavy<sp/>fgetc()</highlight></codeline>
<codeline lineno="7884"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>minor<sp/>perf<sp/>improvements<sp/>for<sp/>jpeg</highlight></codeline>
<codeline lineno="7885"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>deprecated<sp/>type-specific<sp/>functions<sp/>so<sp/>we&apos;ll<sp/>get<sp/>feedback<sp/>if<sp/>they&apos;re<sp/>needed</highlight></codeline>
<codeline lineno="7886"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>attempt<sp/>to<sp/>fix<sp/>trans_data<sp/>warning<sp/>(Won<sp/>Chun)</highlight></codeline>
<codeline lineno="7887"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>1.23<sp/><sp/><sp/><sp/>fixed<sp/>bug<sp/>in<sp/>iPhone<sp/>support</highlight></codeline>
<codeline lineno="7888"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>1.22<sp/><sp/>(2010-07-10)</highlight></codeline>
<codeline lineno="7889"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>removed<sp/>image<sp/>*writing*<sp/>support</highlight></codeline>
<codeline lineno="7890"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stbi_info<sp/>support<sp/>from<sp/>Jetro<sp/>Lauha</highlight></codeline>
<codeline lineno="7891"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GIF<sp/>support<sp/>from<sp/>Jean-Marc<sp/>Lienher</highlight></codeline>
<codeline lineno="7892"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iPhone<sp/>PNG-extensions<sp/>from<sp/>James<sp/>Brown</highlight></codeline>
<codeline lineno="7893"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>warning-fixes<sp/>from<sp/>Nicolas<sp/>Schulz<sp/>and<sp/>Janez<sp/>Zemva<sp/>(i.stbi__err.<sp/>Janez<sp/>(U+017D)emva)</highlight></codeline>
<codeline lineno="7894"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>1.21<sp/><sp/><sp/><sp/>fix<sp/>use<sp/>of<sp/>&apos;stbi_uc&apos;<sp/>in<sp/>header<sp/>(reported<sp/>by<sp/>jon<sp/>blow)</highlight></codeline>
<codeline lineno="7895"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>1.20<sp/><sp/><sp/><sp/>added<sp/>support<sp/>for<sp/>Softimage<sp/>PIC,<sp/>by<sp/>Tom<sp/>Seddon</highlight></codeline>
<codeline lineno="7896"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>1.19<sp/><sp/><sp/><sp/>bug<sp/>in<sp/>interlaced<sp/>PNG<sp/>corruption<sp/>check<sp/>(found<sp/>by<sp/>ryg)</highlight></codeline>
<codeline lineno="7897"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>1.18<sp/><sp/>(2008-08-02)</highlight></codeline>
<codeline lineno="7898"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fix<sp/>a<sp/>threading<sp/>bug<sp/>(local<sp/>mutable<sp/>static)</highlight></codeline>
<codeline lineno="7899"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>1.17<sp/><sp/><sp/><sp/>support<sp/>interlaced<sp/>PNG</highlight></codeline>
<codeline lineno="7900"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>1.16<sp/><sp/><sp/><sp/>major<sp/>bugfix<sp/>-<sp/>stbi__convert_format<sp/>converted<sp/>one<sp/>too<sp/>many<sp/>pixels</highlight></codeline>
<codeline lineno="7901"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>1.15<sp/><sp/><sp/><sp/>initialize<sp/>some<sp/>fields<sp/>for<sp/>thread<sp/>safety</highlight></codeline>
<codeline lineno="7902"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>1.14<sp/><sp/><sp/><sp/>fix<sp/>threadsafe<sp/>conversion<sp/>bug</highlight></codeline>
<codeline lineno="7903"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>header-file-only<sp/>version<sp/>(#define<sp/>STBI_HEADER_FILE_ONLY<sp/>before<sp/>including)</highlight></codeline>
<codeline lineno="7904"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>1.13<sp/><sp/><sp/><sp/>threadsafe</highlight></codeline>
<codeline lineno="7905"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>1.12<sp/><sp/><sp/><sp/>const<sp/>qualifiers<sp/>in<sp/>the<sp/>API</highlight></codeline>
<codeline lineno="7906"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>1.11<sp/><sp/><sp/><sp/>Support<sp/>installable<sp/>IDCT,<sp/>colorspace<sp/>conversion<sp/>routines</highlight></codeline>
<codeline lineno="7907"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>1.10<sp/><sp/><sp/><sp/>Fixes<sp/>for<sp/>64-bit<sp/>(don&apos;t<sp/>use<sp/>&quot;unsigned<sp/>long&quot;)</highlight></codeline>
<codeline lineno="7908"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>optimized<sp/>upsampling<sp/>by<sp/>Fabian<sp/>&quot;ryg&quot;<sp/>Giesen</highlight></codeline>
<codeline lineno="7909"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>1.09<sp/><sp/><sp/><sp/>Fix<sp/>format-conversion<sp/>for<sp/>PSD<sp/>code<sp/>(bad<sp/>global<sp/>variables!)</highlight></codeline>
<codeline lineno="7910"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>1.08<sp/><sp/><sp/><sp/>Thatcher<sp/>Ulrich&apos;s<sp/>PSD<sp/>code<sp/>integrated<sp/>by<sp/>Nicolas<sp/>Schulz</highlight></codeline>
<codeline lineno="7911"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>1.07<sp/><sp/><sp/><sp/>attempt<sp/>to<sp/>fix<sp/>C++<sp/>warning/errors<sp/>again</highlight></codeline>
<codeline lineno="7912"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>1.06<sp/><sp/><sp/><sp/>attempt<sp/>to<sp/>fix<sp/>C++<sp/>warning/errors<sp/>again</highlight></codeline>
<codeline lineno="7913"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>1.05<sp/><sp/><sp/><sp/>fix<sp/>TGA<sp/>loading<sp/>to<sp/>return<sp/>correct<sp/>*comp<sp/>and<sp/>use<sp/>good<sp/>luminance<sp/>calc</highlight></codeline>
<codeline lineno="7914"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>1.04<sp/><sp/><sp/><sp/>default<sp/>float<sp/>alpha<sp/>is<sp/>1,<sp/>not<sp/>255;<sp/>use<sp/>&apos;void<sp/>*&apos;<sp/>for<sp/>stbi_image_free</highlight></codeline>
<codeline lineno="7915"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>1.03<sp/><sp/><sp/><sp/>bugfixes<sp/>to<sp/>STBI_NO_STDIO,<sp/>STBI_NO_HDR</highlight></codeline>
<codeline lineno="7916"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>1.02<sp/><sp/><sp/><sp/>support<sp/>for<sp/>(subset<sp/>of)<sp/>HDR<sp/>files,<sp/>float<sp/>interface<sp/>for<sp/>preferred<sp/>access<sp/>to<sp/>them</highlight></codeline>
<codeline lineno="7917"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>1.01<sp/><sp/><sp/><sp/>fix<sp/>bug:<sp/>possible<sp/>bug<sp/>in<sp/>handling<sp/>right-side<sp/>up<sp/>bmps...<sp/>not<sp/>sure</highlight></codeline>
<codeline lineno="7918"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fix<sp/>bug:<sp/>the<sp/>stbi__bmp_load()<sp/>and<sp/>stbi__tga_load()<sp/>functions<sp/>didn&apos;t<sp/>work<sp/>at<sp/>all</highlight></codeline>
<codeline lineno="7919"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>1.00<sp/><sp/><sp/><sp/>interface<sp/>to<sp/>zlib<sp/>that<sp/>skips<sp/>zlib<sp/>header</highlight></codeline>
<codeline lineno="7920"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>0.99<sp/><sp/><sp/><sp/>correct<sp/>handling<sp/>of<sp/>alpha<sp/>in<sp/>palette</highlight></codeline>
<codeline lineno="7921"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>0.98<sp/><sp/><sp/><sp/>TGA<sp/>loader<sp/>by<sp/>lonesock;<sp/>dynamically<sp/>add<sp/>loaders<sp/>(untested)</highlight></codeline>
<codeline lineno="7922"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>0.97<sp/><sp/><sp/><sp/>jpeg<sp/>errors<sp/>on<sp/>too<sp/>large<sp/>a<sp/>file;<sp/>also<sp/>catch<sp/>another<sp/>malloc<sp/>failure</highlight></codeline>
<codeline lineno="7923"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>0.96<sp/><sp/><sp/><sp/>fix<sp/>detection<sp/>of<sp/>invalid<sp/>v<sp/>value<sp/>-<sp/>particleman@mollyrocket<sp/>forum</highlight></codeline>
<codeline lineno="7924"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>0.95<sp/><sp/><sp/><sp/>during<sp/>header<sp/>scan,<sp/>seek<sp/>to<sp/>markers<sp/>in<sp/>case<sp/>of<sp/>padding</highlight></codeline>
<codeline lineno="7925"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>0.94<sp/><sp/><sp/><sp/>STBI_NO_STDIO<sp/>to<sp/>disable<sp/>stdio<sp/>usage;<sp/>rename<sp/>all<sp/>#defines<sp/>the<sp/>same</highlight></codeline>
<codeline lineno="7926"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>0.93<sp/><sp/><sp/><sp/>handle<sp/>jpegtran<sp/>output;<sp/>verbose<sp/>errors</highlight></codeline>
<codeline lineno="7927"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>0.92<sp/><sp/><sp/><sp/>read<sp/>4,8,16,24,32-bit<sp/>BMP<sp/>files<sp/>of<sp/>several<sp/>formats</highlight></codeline>
<codeline lineno="7928"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>0.91<sp/><sp/><sp/><sp/>output<sp/>24-bit<sp/>Windows<sp/>3.0<sp/>BMP<sp/>files</highlight></codeline>
<codeline lineno="7929"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>0.90<sp/><sp/><sp/><sp/>fix<sp/>a<sp/>few<sp/>more<sp/>warnings;<sp/>bump<sp/>version<sp/>number<sp/>to<sp/>approach<sp/>1.0</highlight></codeline>
<codeline lineno="7930"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>0.61<sp/><sp/><sp/><sp/>bugfixes<sp/>due<sp/>to<sp/>Marc<sp/>LeBlanc,<sp/>Christopher<sp/>Lloyd</highlight></codeline>
<codeline lineno="7931"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>0.60<sp/><sp/><sp/><sp/>fix<sp/>compiling<sp/>as<sp/>c++</highlight></codeline>
<codeline lineno="7932"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>0.59<sp/><sp/><sp/><sp/>fix<sp/>warnings:<sp/>merge<sp/>Dave<sp/>Moore&apos;s<sp/>-Wall<sp/>fixes</highlight></codeline>
<codeline lineno="7933"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>0.58<sp/><sp/><sp/><sp/>fix<sp/>bug:<sp/>zlib<sp/>uncompressed<sp/>mode<sp/>len/nlen<sp/>was<sp/>wrong<sp/>endian</highlight></codeline>
<codeline lineno="7934"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>0.57<sp/><sp/><sp/><sp/>fix<sp/>bug:<sp/>jpg<sp/>last<sp/>huffman<sp/>symbol<sp/>before<sp/>marker<sp/>was<sp/>&gt;9<sp/>bits<sp/>but<sp/>less<sp/>than<sp/>16<sp/>available</highlight></codeline>
<codeline lineno="7935"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>0.56<sp/><sp/><sp/><sp/>fix<sp/>bug:<sp/>zlib<sp/>uncompressed<sp/>mode<sp/>len<sp/>vs.<sp/>nlen</highlight></codeline>
<codeline lineno="7936"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>0.55<sp/><sp/><sp/><sp/>fix<sp/>bug:<sp/>restart_interval<sp/>not<sp/>initialized<sp/>to<sp/>0</highlight></codeline>
<codeline lineno="7937"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>0.54<sp/><sp/><sp/><sp/>allow<sp/>NULL<sp/>for<sp/>&apos;int<sp/>*comp&apos;</highlight></codeline>
<codeline lineno="7938"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>0.53<sp/><sp/><sp/><sp/>fix<sp/>bug<sp/>in<sp/>png<sp/>3-&gt;4;<sp/>speedup<sp/>png<sp/>decoding</highlight></codeline>
<codeline lineno="7939"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>0.52<sp/><sp/><sp/><sp/>png<sp/>handles<sp/>req_comp=3,4<sp/>directly;<sp/>minor<sp/>cleanup;<sp/>jpeg<sp/>comments</highlight></codeline>
<codeline lineno="7940"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>0.51<sp/><sp/><sp/><sp/>obey<sp/>req_comp<sp/>requests,<sp/>1-component<sp/>jpegs<sp/>return<sp/>as<sp/>1-component,</highlight></codeline>
<codeline lineno="7941"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>on<sp/>&apos;test&apos;<sp/>only<sp/>check<sp/>type,<sp/>not<sp/>whether<sp/>we<sp/>support<sp/>this<sp/>variant</highlight></codeline>
<codeline lineno="7942"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>0.50<sp/><sp/>(2006-11-19)</highlight></codeline>
<codeline lineno="7943"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>first<sp/>released<sp/>version</highlight></codeline>
<codeline lineno="7944"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7945"><highlight class="normal"></highlight></codeline>
<codeline lineno="7946"><highlight class="normal"></highlight></codeline>
<codeline lineno="7947"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="7948"><highlight class="comment">------------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="7949"><highlight class="comment">This<sp/>software<sp/>is<sp/>available<sp/>under<sp/>2<sp/>licenses<sp/>--<sp/>choose<sp/>whichever<sp/>you<sp/>prefer.</highlight></codeline>
<codeline lineno="7950"><highlight class="comment">------------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="7951"><highlight class="comment">ALTERNATIVE<sp/>A<sp/>-<sp/>MIT<sp/>License</highlight></codeline>
<codeline lineno="7952"><highlight class="comment">Copyright<sp/>(c)<sp/>2017<sp/>Sean<sp/>Barrett</highlight></codeline>
<codeline lineno="7953"><highlight class="comment">Permission<sp/>is<sp/>hereby<sp/>granted,<sp/>free<sp/>of<sp/>charge,<sp/>to<sp/>any<sp/>person<sp/>obtaining<sp/>a<sp/>copy<sp/>of</highlight></codeline>
<codeline lineno="7954"><highlight class="comment">this<sp/>software<sp/>and<sp/>associated<sp/>documentation<sp/>files<sp/>(the<sp/>&quot;Software&quot;),<sp/>to<sp/>deal<sp/>in</highlight></codeline>
<codeline lineno="7955"><highlight class="comment">the<sp/>Software<sp/>without<sp/>restriction,<sp/>including<sp/>without<sp/>limitation<sp/>the<sp/>rights<sp/>to</highlight></codeline>
<codeline lineno="7956"><highlight class="comment">use,<sp/>copy,<sp/>modify,<sp/>merge,<sp/>publish,<sp/>distribute,<sp/>sublicense,<sp/>and/or<sp/>sell<sp/>copies</highlight></codeline>
<codeline lineno="7957"><highlight class="comment">of<sp/>the<sp/>Software,<sp/>and<sp/>to<sp/>permit<sp/>persons<sp/>to<sp/>whom<sp/>the<sp/>Software<sp/>is<sp/>furnished<sp/>to<sp/>do</highlight></codeline>
<codeline lineno="7958"><highlight class="comment">so,<sp/>subject<sp/>to<sp/>the<sp/>following<sp/>conditions:</highlight></codeline>
<codeline lineno="7959"><highlight class="comment">The<sp/>above<sp/>copyright<sp/>notice<sp/>and<sp/>this<sp/>permission<sp/>notice<sp/>shall<sp/>be<sp/>included<sp/>in<sp/>all</highlight></codeline>
<codeline lineno="7960"><highlight class="comment">copies<sp/>or<sp/>substantial<sp/>portions<sp/>of<sp/>the<sp/>Software.</highlight></codeline>
<codeline lineno="7961"><highlight class="comment">THE<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>&quot;AS<sp/>IS&quot;,<sp/>WITHOUT<sp/>WARRANTY<sp/>OF<sp/>ANY<sp/>KIND,<sp/>EXPRESS<sp/>OR</highlight></codeline>
<codeline lineno="7962"><highlight class="comment">IMPLIED,<sp/>INCLUDING<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO<sp/>THE<sp/>WARRANTIES<sp/>OF<sp/>MERCHANTABILITY,</highlight></codeline>
<codeline lineno="7963"><highlight class="comment">FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE<sp/>AND<sp/>NONINFRINGEMENT.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE</highlight></codeline>
<codeline lineno="7964"><highlight class="comment">AUTHORS<sp/>OR<sp/>COPYRIGHT<sp/>HOLDERS<sp/>BE<sp/>LIABLE<sp/>FOR<sp/>ANY<sp/>CLAIM,<sp/>DAMAGES<sp/>OR<sp/>OTHER</highlight></codeline>
<codeline lineno="7965"><highlight class="comment">LIABILITY,<sp/>WHETHER<sp/>IN<sp/>AN<sp/>ACTION<sp/>OF<sp/>CONTRACT,<sp/>TORT<sp/>OR<sp/>OTHERWISE,<sp/>ARISING<sp/>FROM,</highlight></codeline>
<codeline lineno="7966"><highlight class="comment">OUT<sp/>OF<sp/>OR<sp/>IN<sp/>CONNECTION<sp/>WITH<sp/>THE<sp/>SOFTWARE<sp/>OR<sp/>THE<sp/>USE<sp/>OR<sp/>OTHER<sp/>DEALINGS<sp/>IN<sp/>THE</highlight></codeline>
<codeline lineno="7967"><highlight class="comment">SOFTWARE.</highlight></codeline>
<codeline lineno="7968"><highlight class="comment">------------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="7969"><highlight class="comment">ALTERNATIVE<sp/>B<sp/>-<sp/>Public<sp/>Domain<sp/>(www.unlicense.org)</highlight></codeline>
<codeline lineno="7970"><highlight class="comment">This<sp/>is<sp/>free<sp/>and<sp/>unencumbered<sp/>software<sp/>released<sp/>into<sp/>the<sp/>public<sp/>domain.</highlight></codeline>
<codeline lineno="7971"><highlight class="comment">Anyone<sp/>is<sp/>free<sp/>to<sp/>copy,<sp/>modify,<sp/>publish,<sp/>use,<sp/>compile,<sp/>sell,<sp/>or<sp/>distribute<sp/>this</highlight></codeline>
<codeline lineno="7972"><highlight class="comment">software,<sp/>either<sp/>in<sp/>source<sp/>code<sp/>form<sp/>or<sp/>as<sp/>a<sp/>compiled<sp/>binary,<sp/>for<sp/>any<sp/>purpose,</highlight></codeline>
<codeline lineno="7973"><highlight class="comment">commercial<sp/>or<sp/>non-commercial,<sp/>and<sp/>by<sp/>any<sp/>means.</highlight></codeline>
<codeline lineno="7974"><highlight class="comment">In<sp/>jurisdictions<sp/>that<sp/>recognize<sp/>copyright<sp/>laws,<sp/>the<sp/>author<sp/>or<sp/>authors<sp/>of<sp/>this</highlight></codeline>
<codeline lineno="7975"><highlight class="comment">software<sp/>dedicate<sp/>any<sp/>and<sp/>all<sp/>copyright<sp/>interest<sp/>in<sp/>the<sp/>software<sp/>to<sp/>the<sp/>public</highlight></codeline>
<codeline lineno="7976"><highlight class="comment">domain.<sp/>We<sp/>make<sp/>this<sp/>dedication<sp/>for<sp/>the<sp/>benefit<sp/>of<sp/>the<sp/>public<sp/>at<sp/>large<sp/>and<sp/>to</highlight></codeline>
<codeline lineno="7977"><highlight class="comment">the<sp/>detriment<sp/>of<sp/>our<sp/>heirs<sp/>and<sp/>successors.<sp/>We<sp/>intend<sp/>this<sp/>dedication<sp/>to<sp/>be<sp/>an</highlight></codeline>
<codeline lineno="7978"><highlight class="comment">overt<sp/>act<sp/>of<sp/>relinquishment<sp/>in<sp/>perpetuity<sp/>of<sp/>all<sp/>present<sp/>and<sp/>future<sp/>rights<sp/>to</highlight></codeline>
<codeline lineno="7979"><highlight class="comment">this<sp/>software<sp/>under<sp/>copyright<sp/>law.</highlight></codeline>
<codeline lineno="7980"><highlight class="comment">THE<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>&quot;AS<sp/>IS&quot;,<sp/>WITHOUT<sp/>WARRANTY<sp/>OF<sp/>ANY<sp/>KIND,<sp/>EXPRESS<sp/>OR</highlight></codeline>
<codeline lineno="7981"><highlight class="comment">IMPLIED,<sp/>INCLUDING<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO<sp/>THE<sp/>WARRANTIES<sp/>OF<sp/>MERCHANTABILITY,</highlight></codeline>
<codeline lineno="7982"><highlight class="comment">FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE<sp/>AND<sp/>NONINFRINGEMENT.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE</highlight></codeline>
<codeline lineno="7983"><highlight class="comment">AUTHORS<sp/>BE<sp/>LIABLE<sp/>FOR<sp/>ANY<sp/>CLAIM,<sp/>DAMAGES<sp/>OR<sp/>OTHER<sp/>LIABILITY,<sp/>WHETHER<sp/>IN<sp/>AN</highlight></codeline>
<codeline lineno="7984"><highlight class="comment">ACTION<sp/>OF<sp/>CONTRACT,<sp/>TORT<sp/>OR<sp/>OTHERWISE,<sp/>ARISING<sp/>FROM,<sp/>OUT<sp/>OF<sp/>OR<sp/>IN<sp/>CONNECTION</highlight></codeline>
<codeline lineno="7985"><highlight class="comment">WITH<sp/>THE<sp/>SOFTWARE<sp/>OR<sp/>THE<sp/>USE<sp/>OR<sp/>OTHER<sp/>DEALINGS<sp/>IN<sp/>THE<sp/>SOFTWARE.</highlight></codeline>
<codeline lineno="7986"><highlight class="comment">------------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="7987"><highlight class="comment">*/</highlight></codeline>
    </programlisting>
    <location file="include/stb_image.h"/>
  </compounddef>
</doxygen>
