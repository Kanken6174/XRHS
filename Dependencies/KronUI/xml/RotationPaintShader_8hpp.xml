<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="RotationPaintShader_8hpp" kind="file" language="C++">
    <compoundname>RotationPaintShader.hpp</compoundname>
    <includes refid="Shader_8hpp" local="yes">./Shader.hpp</includes>
    <includes local="no">glm/gtc/matrix_transform.hpp</includes>
    <includes local="no">glm/gtc/type_ptr.hpp</includes>
    <includes refid="Paints_8hpp" local="yes">./../Paints/Paints.hpp</includes>
    <includedby refid="Drawing_8hpp" local="yes">src/KronUIGL/Geometry/Drawing.hpp</includedby>
    <includedby refid="KronUIGL_8hpp" local="yes">src/KronUIGL/KronUIGL.hpp</includedby>
    <includedby refid="RotationPaintShader_8cpp" local="yes">src/KronUIGL/Shaders/RotationPaintShader.cpp</includedby>
    <incdepgraph>
      <node id="6">
        <label>string</label>
      </node>
      <node id="3">
        <label>GL/glew.h</label>
      </node>
      <node id="8">
        <label>fstream</label>
      </node>
      <node id="2">
        <label>./Shader.hpp</label>
        <link refid="Shader_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>glm/gtc/type_ptr.hpp</label>
      </node>
      <node id="1">
        <label>src/KronUIGL/Shaders/RotationPaintShader.hpp</label>
        <link refid="RotationPaintShader_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>sstream</label>
      </node>
      <node id="5">
        <label>../../Bases/ReflectiveItem.hpp</label>
        <link refid="ReflectiveItem_8hpp"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>iostream</label>
      </node>
      <node id="10">
        <label>glm/gtc/matrix_transform.hpp</label>
      </node>
      <node id="12">
        <label>./../Paints/Paints.hpp</label>
        <link refid="Paints_8hpp"/>
      </node>
      <node id="4">
        <label>glm/glm.hpp</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="6">
        <label>src/KronUIGL/KronUIGL.hpp</label>
        <link refid="KronUIGL_8hpp"/>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>src/KronUIGL/Geometry/Shapes.hpp</label>
        <link refid="Shapes_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>src/KronUIGL/Shaders/RotationPaintShader.hpp</label>
        <link refid="RotationPaintShader_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>src/KronUIGL/Geometry/Shapes.cpp</label>
        <link refid="Shapes_8cpp"/>
      </node>
      <node id="4">
        <label>src/KronUIGL/Geometry/GeometryRenderer.hpp</label>
        <link refid="GeometryRenderer_8hpp"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>src/KronUIGL/Geometry/Drawing.hpp</label>
        <link refid="Drawing_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>src/KronUIGL/Shaders/RotationPaintShader.cpp</label>
        <link refid="RotationPaintShader_8cpp"/>
      </node>
      <node id="5">
        <label>src/KronUIGL/Geometry/GeometryRenderer.cpp</label>
        <link refid="GeometryRenderer_8cpp"/>
      </node>
      <node id="7">
        <label>src/main.cpp</label>
        <link refid="main_8cpp"/>
      </node>
    </invincdepgraph>
    <innerclass refid="classRotationPaintShader" prot="public">RotationPaintShader</innerclass>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#ifndef<sp/>Guard_RotationPaintShader</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>Guard_RotationPaintShader</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="Shader_8hpp" kindref="compound">./Shader.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;glm/gtc/matrix_transform.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;glm/gtc/type_ptr.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;./../Paints/Paints.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8" refid="classRotationPaintShader" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classRotationPaintShader" kindref="compound">RotationPaintShader</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classShader" kindref="compound">Shader</ref>{</highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>transformation_var<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;transformation&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>paint_var<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;paint&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/>glm::mat4<sp/>PlacementMatrix;</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/>glm::vec3<sp/>Color<sp/>=<sp/>glm::vec3(<ref refid="Paints_8hpp_1ae5f70677050eecd8909e0248e07b9e73" kindref="member">GRAY</ref>);</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classRotationPaintShader_1ab697304665b2b0cfbcf32070c930f385" kindref="member">RotationPaintShader</ref>(std::string<sp/>reflectiveName<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classRotationPaintShader_1ae87bdf843d053cdb5f86d5b33142a09f" kindref="member">SetPlacementMatrix</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>scale,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>angle,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>y,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>z);</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classRotationPaintShader_1a00674a2c1eb135065ea45268e977be0f" kindref="member">setPaint</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>R,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>G,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>B);</highlight></codeline>
<codeline lineno="18" refid="classRotationPaintShader_1a6187e928d70ff073ba3b94b711cff5db" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classRotationPaintShader_1a6187e928d70ff073ba3b94b711cff5db" kindref="member">UseShader</ref>(){<ref refid="classShader_1a870fa9f13d69e558815d6fd351a469dc" kindref="member">use</ref>();}</highlight></codeline>
<codeline lineno="19"><highlight class="normal">};</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="src/KronUIGL/Shaders/RotationPaintShader.hpp"/>
  </compounddef>
</doxygen>
