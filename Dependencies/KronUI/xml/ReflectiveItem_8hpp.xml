<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="ReflectiveItem_8hpp" kind="file" language="C++">
    <compoundname>ReflectiveItem.hpp</compoundname>
    <includes local="no">string</includes>
    <includes local="no">sstream</includes>
    <includedby refid="Shader_8hpp" local="yes">src/KronUIGL/Shaders/Shader.hpp</includedby>
    <incdepgraph>
      <node id="2">
        <label>string</label>
      </node>
      <node id="3">
        <label>sstream</label>
      </node>
      <node id="1">
        <label>src/Bases/ReflectiveItem.hpp</label>
        <link refid="ReflectiveItem_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="10">
        <label>src/KronUIGL/KronUIGL.hpp</label>
        <link refid="KronUIGL_8hpp"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>src/KronUIGL/Shaders/ShaderManager.hpp</label>
        <link refid="ShaderManager_8hpp"/>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>src/KronUIGL/Text/TextRenderer.hpp</label>
        <link refid="TextRenderer_8hpp"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>src/KronUIGL/Geometry/Shapes.hpp</label>
        <link refid="Shapes_8hpp"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>src/KronUIGL/Shaders/Shader.hpp</label>
        <link refid="Shader_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>src/KronUIGL/3D/Renderers/MeshRenderer.hpp</label>
        <link refid="MeshRenderer_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>src/KronUIGL/Text/TextRenderer.cpp</label>
        <link refid="TextRenderer_8cpp"/>
      </node>
      <node id="11">
        <label>src/KronUIGL/Geometry/Shapes.cpp</label>
        <link refid="Shapes_8cpp"/>
      </node>
      <node id="8">
        <label>src/KronUIGL/Geometry/GeometryRenderer.hpp</label>
        <link refid="GeometryRenderer_8hpp"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>src/Bases/ReflectiveItem.hpp</label>
        <link refid="ReflectiveItem_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>src/KronUIGL/Shaders/ShaderManager.cpp</label>
        <link refid="ShaderManager_8cpp"/>
      </node>
      <node id="6">
        <label>src/KronUIGL/Geometry/Drawing.hpp</label>
        <link refid="Drawing_8hpp"/>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>src/KronUIGL/3D/Renderers/MeshRenderer.cpp</label>
        <link refid="MeshRenderer_8cpp"/>
      </node>
      <node id="9">
        <label>src/KronUIGL/Geometry/GeometryRenderer.cpp</label>
        <link refid="GeometryRenderer_8cpp"/>
      </node>
      <node id="5">
        <label>src/main.cpp</label>
        <link refid="main_8cpp"/>
      </node>
    </invincdepgraph>
    <innerclass refid="classReflectiveItem" prot="public">ReflectiveItem</innerclass>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#ifndef<sp/>Guard_ReflectiveItem</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>Guard_ReflectiveItem</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sstream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6" refid="classReflectiveItem" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classReflectiveItem" kindref="compound">ReflectiveItem</ref>{</highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="8"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>_name<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="9"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/>address<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keyword">const<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="11" refid="classReflectiveItem_1adabfa391ef38161de2e243bd387b8e6a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classReflectiveItem_1adabfa391ef38161de2e243bd387b8e6a" kindref="member">ReflectiveItem</ref>(std::string<sp/>name){</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::stringstream<sp/>ss;</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ss<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;ReflectiveItem&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;:&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>address;</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_name<sp/>=<sp/>ss.str();<sp/></highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="16" refid="classReflectiveItem_1a1ed203f9b24870e37f02adb3c57c8f5c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/><ref refid="classReflectiveItem_1a1ed203f9b24870e37f02adb3c57c8f5c" kindref="member">getName</ref>()<sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_name;}</highlight></codeline>
<codeline lineno="17" refid="classReflectiveItem_1ac9c9a3038c9c4e57568418c4f43931f7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classReflectiveItem" kindref="compound">ReflectiveItem</ref>*<sp/><ref refid="classReflectiveItem_1ac9c9a3038c9c4e57568418c4f43931f7" kindref="member">getAddress</ref>()<sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">;}</highlight></codeline>
<codeline lineno="18"><highlight class="normal">};</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="src/Bases/ReflectiveItem.hpp"/>
  </compounddef>
</doxygen>
